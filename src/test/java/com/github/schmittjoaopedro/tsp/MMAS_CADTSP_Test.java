package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_CADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_CADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CADTSP mmas_cadtsp = new MMAS_CADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(31496.229809282446);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[26, 85, 34, 19, 11, 8, 6, 56, 82, 54, 33, 42, 45, 28, 13, 99, 70, 40, 2, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 68, 63, 39, 53, 24, 80, 60, 50, 86, 57, 92, 27, 66, 46, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 23, 37, 17, 15, 21, 93, 87, 52, 18, 74, 96, 55, 79, 30, 41, 88, 7, 0, 5, 48, 89, 9, 83, 78, 69, 64, 3, 65, 25, 62, 91, 22, 97, 59, 61, 76, 26]");

        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 5, 34608.754448952415, 2422.5570015488947, 0.5, 17.902857142857144, 31549.77207305376);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 10, 33916.28788625359, 2656.2276548776626, 0.5, 16.085714285714285, 30328.50941202687);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 11, 34615.16204054816, 2568.6786931244096, 0.575, 20.86938775510204, 30083.171614448333);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 15, 30388.52908297041, 2040.7917923903194, 0.55, 12.475918367346939, 28271.143236913133);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 20, 31557.52597957342, 2778.0748152360284, 0.505, 14.219591836734693, 27981.25328288264);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 21, 39321.748974996546, 2639.086961985072, 0.485, 28.325714285714287, 34799.36334579086);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 25, 36222.99602198495, 2172.4608328846684, 0.525, 22.99918367346939, 32250.915290006757);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 30, 32872.54728270068, 2610.2276828295826, 0.53, 15.138775510204082, 29539.699504534427);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 31, 42427.81679190994, 3278.6014123288087, 0.51, 34.46448979591837, 35614.607081633636);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 35, 36742.52796783405, 3410.8604886250487, 0.59, 21.100408163265307, 32722.771412475922);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 40, 34942.69175215735, 2730.332875728811, 0.735, 24.368979591836734, 30674.677587826067);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 41, 41766.2874194336, 3233.759127521711, 0.535, 43.22204081632653, 33633.02514818296);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 45, 33364.015044404776, 3233.1212500814318, 0.67, 16.70938775510204, 28733.129440441862);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 50, 32427.41478528635, 3565.311213589485, 0.495, 17.794285714285714, 28190.008318572254);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 51, 40453.49369472641, 3095.6740647792913, 0.49, 37.01714285714286, 35626.61109513939);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 55, 38392.51420542467, 3415.5868813786306, 0.575, 26.90612244897959, 33202.47018871073);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 60, 36909.64946471378, 2718.3018539453087, 0.52, 21.253061224489795, 31645.955692337353);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 61, 38695.79551893844, 2621.064134727086, 0.585, 37.822857142857146, 34051.92482064867);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 65, 35064.871981912765, 2621.6197699585223, 0.685, 21.91591836734694, 29655.601304360942);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 70, 33066.798937824344, 3008.3110303878043, 0.525, 14.291428571428572, 29457.38135576874);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 71, 41365.605353355546, 2925.352703733689, 0.48, 39.74367346938776, 35426.18194185225);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 75, 37120.66289717063, 3312.3390144857713, 0.675, 27.471836734693877, 32593.354909416623);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 80, 34460.46116794454, 2764.7582103053646, 0.61, 20.120816326530612, 31376.56483643722);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 81, 40271.08826959668, 2941.5372854416682, 0.505, 42.36, 35164.88121556798);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 85, 33076.387859952876, 2762.61248147597, 0.71, 22.59591836734694, 29177.558439537614);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 90, 31155.180379666643, 2131.469989238463, 0.525, 18.58448979591837, 28301.78461961011);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 91, 41202.12754822121, 3013.1381696383232, 0.495, 37.502857142857145, 34567.82965641206);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 95, 36119.72723706593, 2829.9472675029324, 0.66, 25.715918367346937, 32522.809067319035);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 100, 34821.86321705755, 2689.1996313458735, 0.56, 17.615510204081634, 30544.08211381883);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 101, 41362.19623911432, 3197.4467373878497, 0.525, 37.46204081632653, 34732.93634495775);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 105, 35761.21201284471, 3139.994698535872, 0.55, 23.86530612244898, 31210.017296493264);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 110, 34636.66079381552, 2799.0983054634185, 0.515, 16.194285714285716, 30368.230947868862);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 111, 40047.337030003226, 3209.951069904131, 0.485, 35.27102040816327, 33989.663244539246);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 115, 35273.465593851164, 3317.647568505266, 0.625, 25.235102040816326, 30949.495902285526);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 120, 34293.89787092449, 3373.109440743025, 0.525, 17.164897959183673, 29254.906344980893);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 121, 39753.64256653252, 2720.336618112887, 0.51, 35.91183673469388, 34899.51421126068);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 125, 33548.13534130665, 2559.5963837877134, 0.68, 22.801632653061226, 28808.233642090192);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 130, 32864.57576944374, 4355.110186091581, 0.53, 16.907755102040817, 27572.351398696854);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 131, 40838.59982777808, 2817.514272950287, 0.49, 39.93877551020408, 36090.95101037353);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 135, 36486.75101231385, 3028.9853042512013, 0.635, 22.151020408163266, 31128.07763867433);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 140, 34144.95060914391, 2831.7256877217396, 0.515, 19.389387755102042, 30030.159658683187);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 141, 39813.56780407329, 2745.2561451959405, 0.48, 36.95591836734694, 34999.16119280402);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 145, 36555.3670698607, 3179.5441258905344, 0.525, 20.01061224489796, 32085.96733652736);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 150, 35318.06527900452, 3403.217591310165, 0.565, 20.25469387755102, 30387.33132038645);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 151, 40257.52183905434, 3400.272849147262, 0.535, 35.26122448979592, 35437.504712616326);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 155, 34632.44557780873, 2821.359669866906, 0.63, 25.13877551020408, 31705.130409628146);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 160, 33664.25950150812, 2500.1041674881812, 0.52, 17.514285714285716, 29989.783236653162);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 161, 39298.99864756688, 3453.9676124310495, 0.495, 38.394285714285715, 33302.60811978283);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 165, 34545.93750560509, 1929.685144563773, 0.605, 21.568979591836733, 31568.951500092702);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 170, 34427.507522237975, 3334.3646309011187, 0.505, 21.481632653061226, 29607.802362659855);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 171, 36589.36680413328, 2959.8442512374822, 0.555, 31.244897959183675, 32003.803270495857);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 175, 34850.54956637472, 3093.6482557756835, 0.64, 21.485714285714284, 30697.6635453319);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 180, 33707.523005261806, 2862.7729493574825, 0.64, 22.617142857142856, 29586.699002461104);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 181, 39008.69427459828, 2258.3019672134556, 0.54, 32.13551020408163, 33789.80122357792);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 185, 36888.07756393638, 3107.415356497409, 0.52, 21.380408163265304, 32344.508774091082);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 190, 36476.50707585655, 3875.6392408196225, 0.535, 18.14204081632653, 30490.990976275847);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 191, 41979.31309017037, 3521.0189567567304, 0.475, 34.15591836734694, 36836.61315530763);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 195, 37653.67861478808, 3901.3771504378724, 0.605, 19.544489795918366, 32270.888336684133);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 200, 35067.26526518566, 3812.044147155655, 0.545, 23.04326530612245, 29960.880481689157);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 201, 38118.94645753524, 2591.9624626213413, 0.515, 31.600816326530612, 34061.540111719354);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 205, 35512.82950193243, 2689.4155093578765, 0.57, 20.04, 30004.548006625097);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 210, 33421.90172787741, 4101.135741630592, 0.5, 14.206530612244897, 29127.09589610427);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 211, 38407.12005384137, 3313.865379739291, 0.49, 30.66938775510204, 32259.93797274621);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 215, 34492.62565829835, 2637.3618782514277, 0.56, 24.33795918367347, 30566.970057062532);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 220, 33775.57354662925, 3103.206720554344, 0.65, 17.157551020408164, 29995.982526056046);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 221, 37581.10302196785, 2507.323254972111, 0.485, 29.821224489795917, 33596.167684315704);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 225, 36873.55429852788, 2652.197009915498, 0.55, 24.794285714285714, 32160.868944651516);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 230, 35223.88809474011, 2771.947320236318, 0.505, 16.18204081632653, 31148.107293683486);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 231, 39021.183057909875, 2191.6954817934106, 0.485, 38.037551020408166, 33560.059551911894);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 235, 35107.70761079035, 2926.194153604535, 0.705, 24.02857142857143, 30457.478466369346);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 240, 33268.278148349695, 3255.8700034470835, 0.54, 14.688163265306123, 29506.605006730515);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 241, 38576.627837997, 2696.5910901975626, 0.495, 30.177142857142858, 32401.64586297006);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 245, 35160.85448999878, 3597.472612395635, 0.585, 21.355102040816327, 29577.745728825907);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 250, 34866.595021807094, 2614.280859578827, 0.58, 19.33469387755102, 29321.278203953287);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 251, 38797.62344579215, 2088.9359319065684, 0.49, 36.056326530612246, 34281.15178208884);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 255, 35458.52638775457, 2219.198454035044, 0.68, 22.488979591836735, 31716.685997986584);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 260, 33858.34072612375, 2388.1713724126, 0.505, 17.22530612244898, 29645.504216288977);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 261, 40040.43464547498, 2983.3820205884836, 0.49, 34.46448979591837, 33426.30349166057);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 265, 35389.50701776788, 2540.4820591370167, 0.525, 22.241632653061224, 31076.35133134259);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 270, 34862.91942049535, 3373.667304756737, 0.525, 16.303673469387753, 31076.35133134259);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 271, 38792.519504310665, 3427.1187214938595, 0.475, 30.39265306122449, 32981.56103546341);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 275, 34858.36443488361, 3058.894456125561, 0.675, 25.79591836734694, 31595.261791262303);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 280, 33650.374690564626, 2681.9260382474895, 0.625, 17.76734693877551, 29925.693911870636);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 281, 39081.352229602446, 2821.631963074335, 0.48, 35.92734693877551, 34562.72026055308);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 285, 36446.36351147874, 2655.233529611065, 0.615, 25.306122448979593, 30552.11240344569);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 290, 33664.92504228911, 3448.203378468392, 0.57, 17.838367346938774, 28506.058580150348);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 291, 41530.94428856106, 3837.5677767517295, 0.495, 39.115102040816325, 34757.676901036604);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 295, 37139.09632527129, 2598.936359415243, 0.605, 23.964897959183673, 31763.16151380764);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 300, 36871.89761683348, 3293.0881108396616, 0.58, 22.377959183673468, 31241.256451964888);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 301, 41746.02362582837, 2627.1301192531682, 0.545, 41.071836734693875, 37956.30394855932);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 305, 34940.55991426632, 2828.361733476677, 0.65, 20.544489795918366, 31111.930209651367);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 310, 33436.09154410073, 2502.747103069076, 0.52, 19.548571428571428, 30018.805201161747);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 311, 40623.769423273, 2831.659359367062, 0.48, 35.32244897959184, 34793.9982797848);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 315, 36708.17685983895, 3261.025840970856, 0.63, 22.81142857142857, 31817.551456810987);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 320, 34116.234475733225, 2772.411528526685, 0.58, 20.485714285714284, 28428.435349191364);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 321, 39652.46420896686, 3008.47149715308, 0.5, 37.68571428571428, 33569.20695250346);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 325, 34935.48464323939, 3221.1262851267493, 0.655, 22.58938775510204, 30481.783202421);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 330, 33883.926552605175, 2557.6371635435084, 0.515, 24.42938775510204, 29806.21539423255);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 331, 40585.903154146974, 3229.9524563091804, 0.615, 35.539591836734694, 36128.59365303991);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 335, 34284.58751912876, 2130.7207971092917, 0.595, 20.555102040816326, 31218.606848548367);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 340, 33982.3176738663, 2810.2049400866886, 0.505, 19.09877551020408, 30116.503131411147);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 341, 37504.58677445823, 2571.9944904906374, 0.48, 36.86612244897959, 33447.131025847004);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 345, 34993.81565800792, 2736.8899586827993, 0.58, 20.59591836734694, 30857.659330581508);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 350, 34560.423264121375, 3140.110583391798, 0.545, 14.993469387755102, 29422.491613622948);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 351, 41878.67991826206, 4049.1586269175236, 0.485, 37.01795918367347, 35108.38138299131);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 355, 39383.85903412382, 2971.452487257669, 0.665, 24.195102040816327, 33331.36353225468);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 360, 36733.6621467053, 2839.6977644880176, 0.515, 21.63591836734694, 32445.485715493363);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 361, 40225.674554060824, 2945.203669553836, 0.54, 39.66285714285714, 33767.809808197606);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 365, 36158.1500519943, 2227.3309156787345, 0.66, 28.01795918367347, 31637.944177190067);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 370, 34220.912993059246, 2107.515854280395, 0.63, 24.11673469387755, 30238.20457990846);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 371, 40017.956550195224, 3456.9219273680515, 0.52, 38.460408163265306, 34385.28895094263);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 375, 34967.41321217699, 2595.2353656406185, 0.535, 23.0, 30383.93815151416);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 380, 36005.8670931287, 3556.1498904206787, 0.515, 21.237551020408162, 29465.3512267404);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 381, 39236.770145956056, 2769.794188234909, 0.49, 39.928979591836736, 34853.271224932054);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 385, 34885.38570109325, 1846.2563173985898, 0.565, 23.780408163265307, 31112.24279097461);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 390, 33755.76671090886, 3350.5880485407984, 0.57, 21.05387755102041, 28405.548488006858);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 391, 41863.92146761198, 3237.0373307039017, 0.595, 38.87591836734694, 35474.16381372467);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 395, 38084.361090076745, 3137.514876588695, 0.54, 25.777142857142856, 32149.262193511742);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 400, 36913.66942393001, 2752.623730256986, 0.58, 23.717551020408163, 31621.799759933667);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 401, 39194.213153822144, 3142.218535442017, 0.555, 37.48, 34513.839636843666);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 405, 34802.90899826259, 2995.606462403574, 0.67, 29.59265306122449, 29490.867794497844);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 410, 33413.20811006885, 3425.6222340212994, 0.555, 22.60326530612245, 28302.155780231817);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 411, 38603.61480355994, 2580.571270365706, 0.59, 37.42122448979592, 33270.25375638688);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 415, 37411.870934468934, 3150.7088382202655, 0.56, 25.3534693877551, 31155.332791661345);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 420, 35135.202304129496, 3132.534258257316, 0.545, 22.622857142857143, 30391.109744646772);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 421, 38267.63365333143, 2234.1988465909935, 0.49, 36.30612244897959, 34487.15809265251);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 425, 34410.71290300972, 3404.3299960194404, 0.545, 17.72734693877551, 30993.68789862248);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 430, 34105.44414454362, 2689.0819211539997, 0.52, 16.455510204081634, 30109.223277552825);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 431, 40357.39833473319, 2859.7797050878526, 0.48, 40.59102040816327, 34984.504970584356);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 435, 36629.55821998012, 3007.3078127039107, 0.585, 23.02938775510204, 31456.92489256401);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 440, 36996.01194955004, 3127.7732765458086, 0.585, 24.816326530612244, 30626.08686427115);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 441, 39515.25095440425, 2652.112635002564, 0.48, 41.52897959183674, 34206.837246721094);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 445, 37481.83481927936, 3033.0097703998404, 0.6, 23.543673469387755, 32520.644646628956);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 450, 36187.78421580832, 3179.733615009487, 0.51, 24.92408163265306, 31761.010176991917);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 451, 37158.05552492919, 1920.099788812052, 0.625, 36.91836734693877, 31918.184909837324);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 455, 33927.5830755543, 2552.0751212539335, 0.61, 22.08, 30858.027283915486);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 460, 32877.25688133569, 2588.6363798963644, 0.535, 16.736326530612246, 28994.75454988726);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 461, 38858.831380728625, 2196.499719803843, 0.55, 36.93877551020408, 35213.0782049936);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 465, 35016.85979663343, 2534.592214039037, 0.6, 22.12, 31229.097726542306);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 470, 35085.28969439434, 3328.8915276425655, 0.57, 24.66938775510204, 29432.408873098426);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 471, 37954.19757634294, 2787.428166583398, 0.51, 37.87428571428571, 32111.25018618112);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 475, 36271.312969458566, 2855.163460840419, 0.525, 21.577142857142857, 31279.226428418304);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 480, 33505.732581181124, 3430.2893476213503, 0.51, 11.521632653061225, 29940.930565992265);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 481, 40804.52401489215, 3094.4989891449804, 0.5, 39.35836734693878, 34677.39275423929);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 485, 35213.27998126417, 3788.942657224597, 0.58, 21.46530612244898, 29540.71981564864);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 490, 35499.42551790476, 3602.4652279452125, 0.515, 17.400816326530613, 29515.983204324293);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 491, 40081.91283556205, 2863.082953363645, 0.495, 22.92734693877551, 36028.21513963105);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 495, 35689.76129704166, 2629.3488040510883, 0.565, 22.645714285714284, 32197.530579574497);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 500, 35170.681721323024, 3037.0227979879255, 0.505, 23.045714285714286, 31262.707609797777);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 501, 39106.026149776335, 3206.2028149943126, 0.5, 37.4334693877551, 34054.34701088533);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 505, 32555.692553762692, 1969.1053345771259, 0.565, 15.539591836734694, 28998.26708104969);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 510, 31018.41780889217, 2603.8825196861585, 0.55, 12.095510204081632, 27771.449501244515);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 511, 40824.471355361435, 3528.0381550747725, 0.485, 40.455510204081634, 33914.17796358946);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 515, 36479.87883844886, 3884.6090065263784, 0.6, 18.40326530612245, 30416.803704897866);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 520, 34505.090838290605, 3862.608581666568, 0.525, 14.234285714285715, 29280.550259623018);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 521, 40175.63500477266, 2867.7416287094225, 0.515, 34.7469387755102, 34839.543091430794);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 525, 35388.26268820893, 2547.9576985419844, 0.655, 25.813061224489797, 30958.508980753006);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 530, 35101.77183350704, 2666.0847914069013, 0.545, 13.48408163265306, 29739.8846662657);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 531, 39436.75104472413, 2212.204688370102, 0.5, 36.6, 35662.7532408759);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 535, 37830.487852586164, 3486.361587678694, 0.64, 23.67918367346939, 31433.32163802401);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 540, 35658.32012079913, 3282.2743598423713, 0.515, 18.78857142857143, 31349.47595160011);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 541, 39861.14133546349, 3046.0315169759383, 0.465, 41.30530612244898, 34940.880410382495);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 545, 35730.035059717855, 2928.2870525754715, 0.715, 26.016326530612243, 30578.045385859194);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 550, 34308.03435374766, 3468.311488296989, 0.515, 18.085714285714285, 30069.730371881407);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 551, 40797.3688847432, 3188.883746272187, 0.49, 37.46204081632653, 35021.42283099414);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 555, 39295.43636394976, 3563.401905368538, 0.67, 25.185306122448978, 33418.565523418634);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 560, 38853.56013252158, 3458.2752750868312, 0.635, 25.333061224489796, 32679.5051833755);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 561, 40597.57630981928, 2970.292710774496, 0.47, 38.06122448979592, 34630.15844007222);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 565, 34573.36826160611, 2138.5797424012053, 0.66, 24.213061224489795, 30296.876026558704);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 570, 32043.281078654356, 4159.073882214891, 0.525, 12.53061224489796, 27556.285245048377);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 571, 37720.77364684496, 3175.898875993219, 0.515, 31.955102040816328, 32262.715940551094);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 575, 36106.818349317495, 2622.9194418424636, 0.61, 26.450612244897957, 31164.238462566384);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 580, 33165.088998030114, 2722.9352295694575, 0.545, 20.0334693877551, 28869.074151074048);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 581, 39708.65486555682, 2504.023237034378, 0.515, 33.84, 35114.65590511892);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 585, 36790.88886920247, 2677.129286723079, 0.51, 19.43265306122449, 32362.20182955732);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 590, 37134.713357415116, 2950.253273861133, 0.5, 22.0334693877551, 32062.33884487426);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 591, 40438.659115460825, 4146.501569697574, 0.49, 32.089795918367344, 32897.951748719024);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 595, 37156.7058737271, 3696.9558459382347, 0.61, 27.962448979591837, 31408.817284662706);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 600, 36551.93502505151, 3303.55973014749, 0.525, 20.86204081632653, 30788.334648432032);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 601, 40532.18365997474, 2780.673558526622, 0.505, 41.44244897959184, 34920.32246587515);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 605, 34798.15575262852, 2833.7144315198593, 0.61, 20.82857142857143, 30281.37243839831);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 610, 30497.420379407948, 2952.783511526908, 0.58, 9.253061224489796, 27908.4005073717);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 611, 39458.44850816813, 3164.442684932552, 0.48, 35.1665306122449, 33682.75961847817);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 615, 34814.341202056035, 3227.2435029846065, 0.67, 26.49877551020408, 29414.87654662869);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 620, 32297.83797790241, 3560.8525096975227, 0.5, 12.606530612244898, 28664.44902678785);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 621, 38213.31076607668, 2945.0895136677073, 0.485, 28.764897959183674, 32222.979477022825);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 625, 36113.58686492482, 3229.945950769943, 0.505, 18.484081632653062, 31052.215746192203);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 630, 31946.395375961016, 2960.5698227744033, 0.52, 9.782857142857143, 28730.586851403223);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 631, 41684.803317932434, 2902.149199353776, 0.48, 41.68489795918367, 35477.91806435374);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 635, 36642.59011630011, 2621.3304417787135, 0.54, 27.027755102040818, 32118.71515918188);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 640, 35599.14458591273, 3490.016732503199, 0.52, 19.973877551020408, 30423.351467884924);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 641, 40365.86090513147, 3462.1164115510974, 0.48, 36.63673469387755, 34539.9848538855);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 645, 35565.830014195104, 3223.733539461952, 0.64, 25.55265306122449, 30572.752753549776);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 650, 35707.831752834114, 3070.2108671556907, 0.525, 16.649795918367346, 28864.621435445664);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 651, 38512.95976325349, 3062.942157250733, 0.495, 33.02040816326531, 31508.35129794212);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 655, 36763.766510879155, 2670.554364055864, 0.495, 26.85142857142857, 31508.35129794212);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 660, 35155.330326495925, 2927.2306209764756, 0.56, 22.257142857142856, 30428.259416066634);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 661, 37234.53729168233, 2647.1888666815785, 0.575, 28.069387755102042, 33823.160930154045);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 665, 33969.593420048004, 3333.6580050054863, 0.625, 15.649795918367348, 28562.83591529757);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 670, 33531.20558840351, 3519.249582829462, 0.515, 17.40734693877551, 28085.14258696757);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 671, 39535.10853674122, 3011.6328810834075, 0.48, 39.462857142857146, 33704.57394470814);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 675, 36693.332710699346, 2737.332667787346, 0.525, 23.75591836734694, 31497.155190365567);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 680, 34931.57773299609, 3589.951688770528, 0.55, 17.053061224489795, 30211.248775188553);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 681, 39943.786359845515, 2306.159048804965, 0.51, 38.308571428571426, 35986.903352950605);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 685, 35322.76679268489, 2517.947618272336, 0.555, 23.362448979591836, 30841.493924865612);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 690, 32947.20920904825, 2911.501571956736, 0.565, 20.60326530612245, 27802.353259487987);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 691, 37727.24272085022, 2622.6194999034387, 0.51, 32.4, 32936.642291880766);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 695, 34129.92321738367, 2441.85525405838, 0.645, 23.049795918367348, 29743.05384880054);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 700, 34260.688177630014, 2085.073738775998, 0.565, 19.313469387755102, 29050.152853063268);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 701, 38791.44056916253, 2756.425035530012, 0.535, 34.03918367346939, 34582.88503050535);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 705, 35048.370562536395, 2556.3473647965125, 0.565, 22.141224489795917, 30650.30096940074);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 710, 32884.814016817494, 2776.6671082949088, 0.55, 18.351836734693876, 29054.79712181182);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 711, 37857.57928429185, 2450.8527988417745, 0.525, 30.780408163265307, 34111.480639116904);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 715, 36454.116723052204, 3014.177861976615, 0.585, 21.168979591836734, 31512.141455876226);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 720, 35280.069676071136, 3263.54818389096, 0.52, 18.395102040816326, 30759.399899749442);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 721, 38334.807401662256, 3351.533440853262, 0.52, 33.58857142857143, 33364.5997806329);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 725, 35371.26605625322, 2680.148353843463, 0.715, 24.98204081632653, 31203.015421838056);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 730, 35139.80250635908, 3457.2071570668454, 0.61, 18.33142857142857, 29100.65987739102);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 731, 39729.75061459544, 3423.6456724220943, 0.545, 28.61795918367347, 33508.64640663295);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 735, 35046.22491155431, 2912.72322907116, 0.665, 23.42530612244898, 30749.386239270152);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 740, 33725.0611420926, 2547.07066473429, 0.53, 22.21469387755102, 29755.411758768838);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 741, 39755.610632380456, 3096.1890608460885, 0.5, 31.34938775510204, 34528.30318967667);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 745, 36623.37088581628, 3022.1084172432993, 0.555, 20.506122448979593, 32572.505655894573);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 750, 37643.255920231815, 2978.053191599911, 0.51, 25.984489795918368, 32515.841535347416);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 751, 42060.69439127267, 2929.2638877796703, 0.51, 39.59183673469388, 35458.38006471893);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 755, 36772.957256527894, 3434.1271423759686, 0.65, 30.084897959183674, 31119.679828941156);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 760, 34412.69518466478, 3283.467095023813, 0.545, 20.17061224489796, 29370.896769242914);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 761, 38136.45583323646, 2153.3492842019227, 0.525, 34.46938775510204, 35017.23841916368);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 765, 33918.794099316714, 2936.2403757693205, 0.675, 24.401632653061224, 29411.187738913482);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 770, 33228.98799433927, 3632.9621497612666, 0.545, 18.975510204081633, 28074.44252984481);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 771, 39968.61691498245, 3240.1377466786143, 0.49, 37.72816326530612, 34197.88125865046);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 775, 34886.498507723816, 2430.6993271551605, 0.715, 21.372244897959185, 31051.171585048658);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 780, 35081.5357719565, 2773.95717206779, 0.535, 18.144489795918368, 30635.130814290707);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 781, 41114.98978756683, 2590.517842005717, 0.485, 35.55755102040816, 35291.65718235786);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 785, 35548.3202221395, 2311.7712284227127, 0.6, 25.64734693877551, 32024.783815981795);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 790, 34869.249614820474, 3381.0822952415933, 0.53, 19.951836734693877, 30574.831507028983);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 791, 39342.25569620467, 3172.570554657904, 0.5, 34.666938775510204, 32511.373716829832);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 795, 36300.08814350135, 2650.5801675508005, 0.56, 24.489795918367346, 32511.37371682983);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 800, 35459.15800783159, 3073.1197764429116, 0.675, 25.78857142857143, 30284.085587326554);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 801, 38776.689364150894, 3247.6558225128624, 0.635, 35.94204081632653, 33287.08312935829);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 805, 33543.60148459882, 2688.6727424767773, 0.645, 19.435102040816325, 29334.88761227023);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 810, 33322.18248473683, 2924.512401739123, 0.52, 17.858775510204083, 28925.794546305475);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 811, 39491.23279354853, 2698.328919221195, 0.49, 28.64734693877551, 35264.878412081336);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 815, 35634.09406919576, 2265.0859839692675, 0.59, 22.47673469387755, 31209.707737492892);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 820, 32051.394772049378, 2653.6432491711143, 0.535, 14.344489795918367, 29181.649825852197);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 821, 37944.25723500017, 2659.666991339309, 0.47, 33.0, 33898.4590887142);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 825, 34642.77569587716, 2302.860967639827, 0.51, 20.81877551020408, 30962.97341039617);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 830, 34229.33827062478, 2510.5859265109916, 0.53, 18.263673469387754, 30952.90771861745);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 831, 39996.264726258836, 2657.58371004675, 0.47, 33.326530612244895, 35069.88928271363);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 835, 34490.214025092755, 2466.8750060835837, 0.57, 20.572244897959184, 30363.612245102722);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 840, 33422.45833456112, 3147.1085583165345, 0.5, 17.834285714285713, 29590.651101095646);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 841, 41263.026322963335, 3760.8188151942304, 0.495, 40.37795918367347, 34148.89789234061);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 845, 37522.809498060524, 3629.920798397064, 0.79, 32.25795918367347, 31942.24951024159);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 850, 37509.93170752361, 3241.998685097413, 0.515, 23.77795918367347, 31208.790776152142);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 851, 39146.449897893595, 2729.1676549079325, 0.51, 38.49795918367347, 34573.89315388064);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 855, 34354.302798782286, 2205.16680208958, 0.625, 21.539591836734694, 30426.94692650273);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 860, 34149.22418464016, 3156.609446263468, 0.545, 15.284081632653061, 29922.828437753247);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 861, 40863.430753593195, 3199.8322743471263, 0.5, 38.87755102040816, 36392.19847469062);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 865, 33598.31087305778, 3093.814493836664, 0.59, 19.089795918367347, 28906.6655510629);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 870, 29319.283323298092, 2775.3370919034573, 0.525, 8.994285714285715, 27053.46197784893);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 871, 39819.22747107214, 3622.086590364157, 0.52, 34.25061224489796, 34393.27833192324);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 875, 34685.75654740918, 2845.1610009494775, 0.575, 22.93469387755102, 30919.914300745004);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 880, 36097.2419515764, 3177.351399771007, 0.54, 23.046530612244897, 30484.921160102556);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 881, 38927.65640786447, 2753.669481065349, 0.49, 35.988571428571426, 34824.6090506158);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 885, 36220.45330929912, 2263.671137339117, 0.545, 26.091428571428573, 31700.320480387654);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 890, 34682.33886837749, 3097.6337308190814, 0.525, 21.04408163265306, 29869.905507067204);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 891, 37610.60884454245, 2394.6755034241382, 0.53, 35.45142857142857, 32886.869645212595);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 895, 34706.19994268559, 3204.405928354505, 0.535, 20.780408163265307, 29575.527732371924);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 900, 33167.38599770793, 2792.392613647029, 0.53, 14.320816326530613, 28807.91076242834);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 901, 39278.735627336755, 3292.0008266850423, 0.51, 31.03918367346939, 32395.684773185367);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 905, 36875.03457004746, 3270.915561677247, 0.555, 22.659591836734695, 30989.626242026974);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 910, 35147.84218868081, 3251.9400190355323, 0.55, 22.569795918367348, 30567.543218467796);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 911, 38284.15676055666, 3097.649369213903, 0.525, 32.42367346938776, 33262.34562390931);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 915, 36472.80285321359, 3380.3754022163876, 0.68, 26.706122448979592, 31301.756176764193);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 920, 35011.802783239866, 2875.887698105764, 0.52, 20.644081632653062, 30770.23087240607);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 921, 39849.64164502245, 4058.4377617792243, 0.49, 38.76979591836735, 33282.17583616872);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 925, 35750.27787051394, 3552.5195689527263, 0.61, 24.01795918367347, 31807.861362963464);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 930, 33260.69185485229, 3192.237896261514, 0.555, 17.58938775510204, 28950.55659766174);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 931, 38472.99974611276, 2902.7940634089973, 0.51, 31.328163265306124, 33049.98934933542);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 935, 35012.23126548446, 2649.9587412639344, 0.58, 20.17469387755102, 31015.223911024827);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 940, 31440.173063915685, 2589.2399325147576, 0.57, 13.953469387755103, 28564.18958467412);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 941, 40558.25708698319, 2531.217818001006, 0.485, 37.92734693877551, 35476.281428025);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 945, 35198.49867867522, 2574.117003132023, 0.75, 23.620408163265306, 31622.259643867874);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 950, 33356.100579775026, 2279.226975582187, 0.525, 17.417142857142856, 28637.51961185581);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 951, 39064.13273026205, 3560.4305465208413, 0.47, 37.52979591836735, 34419.183459000335);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 955, 35593.88731337265, 3271.6972755835955, 0.575, 23.452244897959183, 30495.647513677086);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 960, 34375.13509413458, 2609.238999945113, 0.525, 20.175510204081633, 30440.391679868877);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 961, 38881.71601564217, 3226.578587004394, 0.485, 32.23591836734694, 33573.74430807682);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 965, 34791.74216907397, 3556.613584892439, 0.565, 26.64081632653061, 29898.844381550432);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 970, 33822.8665530875, 3245.3044652745034, 0.525, 21.70204081632653, 28811.29463384011);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 971, 39678.921448450834, 3504.767630956031, 0.485, 37.23755102040816, 32577.413479398583);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 975, 35402.41993017339, 2800.6668454200085, 0.585, 19.206530612244897, 30578.38063391009);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 980, 35609.08222549358, 4522.951337049101, 0.515, 19.671836734693876, 29372.195296890874);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 981, 37956.04080478293, 2164.246763555268, 0.485, 32.48, 33123.93147920055);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 985, 36631.59329540622, 3158.788307137488, 0.545, 19.300408163265306, 32790.63111421232);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 990, 34249.988700372756, 3084.157615798708, 0.54, 15.684897959183674, 29784.50117581795);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 991, 43959.86260970337, 3694.2000121381243, 0.485, 38.88734693877551, 38295.97167247759);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 995, 38292.12676030861, 2416.8840631922826, 0.765, 28.350204081632654, 32934.82903345687);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1000, 34637.97878963543, 3054.1258026510495, 0.595, 19.449795918367347, 31496.229809282446);

        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[49, 63, 39, 53, 68, 24, 80, 72, 84, 67, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 21, 15, 69, 93, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 52, 71, 20, 73, 58, 16, 14, 10, 44, 97, 22, 90, 31, 46, 92, 27, 57, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 13, 47, 99, 70, 40, 28, 51, 77, 95, 29, 49]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[85, 26, 19, 11, 54, 82, 33, 28, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 49, 68, 80, 24, 86, 8, 6, 56, 34, 60, 50, 57, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 46, 92, 27, 22, 90, 31, 44, 97, 10, 14, 16, 71, 20, 73, 58, 61, 76, 59, 84, 67, 13, 47, 99, 70, 40, 45, 2, 42, 85]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[13, 45, 2, 42, 40, 70, 99, 47, 95, 77, 51, 38, 29, 82, 54, 33, 28, 11, 26, 85, 19, 6, 56, 8, 86, 50, 80, 24, 67, 84, 49, 43, 1, 81, 39, 53, 63, 68, 60, 66, 57, 92, 27, 76, 22, 97, 90, 31, 10, 14, 16, 73, 20, 71, 58, 9, 83, 23, 37, 35, 17, 93, 87, 15, 21, 69, 65, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 48, 5, 89, 78, 52, 25, 98, 46, 44, 59, 61, 34, 72, 94, 12, 32, 75, 36, 4, 13]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[56, 86, 6, 8, 33, 54, 82, 19, 11, 26, 85, 34, 76, 59, 61, 22, 90, 97, 44, 31, 10, 14, 16, 73, 20, 71, 91, 7, 5, 48, 89, 78, 52, 18, 74, 96, 55, 41, 88, 30, 79, 3, 64, 65, 25, 69, 21, 93, 87, 15, 83, 9, 23, 37, 35, 98, 17, 58, 46, 62, 0, 92, 27, 66, 57, 50, 60, 24, 80, 72, 49, 43, 81, 94, 12, 75, 32, 77, 51, 38, 29, 95, 36, 4, 47, 13, 70, 99, 40, 42, 2, 45, 28, 67, 84, 39, 53, 63, 1, 68, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[75, 32, 12, 36, 4, 77, 51, 95, 29, 38, 47, 13, 45, 28, 2, 42, 40, 70, 99, 26, 85, 11, 19, 56, 86, 6, 8, 82, 54, 33, 67, 72, 49, 43, 39, 53, 63, 1, 68, 24, 80, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 18, 74, 96, 64, 65, 25, 3, 52, 78, 17, 87, 15, 21, 93, 69, 83, 9, 89, 48, 5, 62, 46, 10, 31, 90, 97, 22, 44, 58, 73, 20, 71, 35, 37, 23, 98, 16, 14, 76, 59, 61, 34, 84, 94, 81, 75]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[62, 46, 71, 20, 73, 58, 83, 9, 89, 48, 5, 74, 96, 55, 79, 30, 88, 41, 7, 91, 3, 65, 25, 64, 15, 21, 93, 69, 23, 37, 98, 35, 17, 87, 78, 52, 18, 0, 27, 92, 66, 57, 24, 80, 50, 60, 56, 86, 8, 6, 11, 26, 85, 82, 54, 33, 29, 28, 47, 99, 70, 40, 13, 2, 42, 45, 84, 67, 49, 72, 43, 1, 94, 81, 32, 75, 12, 36, 4, 77, 51, 95, 38, 68, 63, 39, 53, 76, 59, 61, 34, 19, 22, 44, 10, 14, 16, 97, 90, 31, 62]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 48, 5, 23, 37, 98, 35, 17, 93, 87, 15, 21, 69, 64, 3, 65, 25, 92, 27, 66, 57, 24, 80, 50, 60, 56, 86, 8, 6, 54, 82, 33, 28, 42, 45, 2, 13, 47, 99, 70, 40, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 19, 11, 26, 85, 34, 76, 59, 61, 44, 90, 97, 22, 46, 31, 10]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[55, 96, 25, 65, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 52, 15, 21, 69, 87, 93, 78, 17, 23, 37, 35, 71, 73, 20, 58, 14, 16, 10, 31, 90, 97, 22, 46, 44, 59, 61, 76, 34, 26, 11, 19, 82, 54, 33, 28, 13, 70, 40, 99, 47, 2, 42, 45, 6, 8, 86, 50, 60, 24, 80, 72, 43, 49, 1, 53, 63, 39, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 27, 92, 66, 57, 0, 5, 48, 89, 9, 83, 98, 62, 85, 56, 55]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[17, 23, 37, 93, 21, 69, 52, 78, 87, 15, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 5, 48, 89, 71, 73, 20, 58, 14, 16, 10, 31, 90, 44, 22, 97, 59, 61, 76, 34, 26, 11, 19, 56, 86, 50, 60, 24, 80, 72, 43, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 75, 12, 32, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 85, 57, 66, 92, 27, 46, 35, 83, 9, 98, 17]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 59, 61, 34, 22, 97, 90, 44, 16, 14, 10, 31, 46, 83, 9, 71, 20, 73, 58, 35, 37, 23, 17, 15, 87, 69, 93, 21, 52, 65, 64, 3, 25, 78, 18, 89, 98, 76, 54, 82, 33, 28, 13, 2, 42, 45, 99, 70, 40, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 67, 84, 49, 72, 43, 24, 80, 62]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[70, 40, 99, 13, 28, 45, 2, 42, 33, 54, 82, 6, 8, 56, 19, 76, 59, 61, 22, 34, 85, 26, 11, 86, 80, 24, 50, 60, 68, 72, 49, 43, 1, 53, 39, 63, 66, 57, 92, 27, 0, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 9, 83, 37, 35, 17, 23, 98, 78, 18, 52, 15, 87, 93, 21, 69, 64, 25, 3, 65, 89, 71, 20, 73, 58, 14, 16, 10, 31, 46, 97, 90, 44, 84, 67, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 47, 70]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[45, 2, 42, 70, 40, 47, 29, 38, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 81, 94, 75, 12, 32, 4, 36, 51, 77, 95, 99, 13, 28, 11, 54, 82, 33, 8, 6, 19, 56, 86, 50, 60, 24, 80, 85, 26, 34, 61, 59, 76, 44, 22, 97, 90, 46, 62, 9, 83, 71, 20, 73, 58, 14, 16, 10, 31, 0, 5, 48, 74, 96, 55, 41, 7, 91, 88, 30, 79, 3, 65, 64, 25, 15, 87, 78, 18, 52, 69, 21, 93, 17, 23, 37, 35, 98, 89, 92, 27, 57, 66, 45]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[54, 82, 33, 42, 2, 45, 13, 28, 8, 6, 56, 50, 60, 57, 92, 27, 66, 0, 5, 48, 62, 52, 78, 18, 74, 96, 55, 41, 88, 30, 79, 3, 64, 25, 65, 69, 87, 15, 21, 93, 17, 23, 37, 83, 9, 89, 7, 91, 46, 90, 44, 22, 97, 10, 16, 14, 73, 58, 35, 98, 31, 20, 71, 59, 61, 76, 34, 26, 19, 11, 85, 67, 84, 38, 51, 77, 95, 4, 36, 29, 70, 40, 99, 47, 12, 32, 75, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 80, 24, 86, 54]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[43, 72, 80, 24, 86, 50, 60, 57, 92, 27, 66, 91, 62, 48, 5, 9, 83, 23, 37, 98, 35, 17, 15, 21, 93, 87, 78, 18, 74, 96, 55, 41, 88, 30, 79, 3, 64, 25, 65, 69, 52, 89, 7, 0, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 76, 59, 61, 34, 26, 19, 11, 85, 56, 6, 8, 54, 82, 33, 28, 38, 51, 77, 95, 4, 36, 29, 13, 99, 47, 2, 45, 42, 70, 40, 75, 12, 32, 94, 81, 1, 53, 39, 63, 68, 67, 49, 84, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[90, 31, 10, 14, 16, 73, 58, 20, 71, 35, 17, 93, 87, 78, 52, 89, 48, 5, 9, 83, 23, 37, 98, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0, 66, 57, 92, 27, 97, 22, 44, 61, 59, 76, 11, 85, 26, 19, 60, 80, 24, 50, 56, 6, 8, 54, 82, 33, 28, 2, 45, 42, 70, 40, 99, 47, 29, 13, 38, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 72, 43, 53, 39, 63, 68, 67, 84, 49, 86, 34, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[42, 45, 2, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 53, 39, 63, 68, 67, 84, 82, 54, 33, 11, 26, 85, 19, 6, 8, 56, 86, 50, 60, 80, 24, 27, 92, 66, 57, 76, 90, 97, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 23, 37, 98, 17, 93, 87, 15, 21, 69, 3, 64, 25, 65, 89, 48, 5, 9, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 46, 62, 78, 35, 22, 59, 61, 34, 42]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 52, 78, 17, 23, 37, 98, 35, 93, 87, 15, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 46, 62, 5, 48, 89, 66, 27, 92, 86, 50, 60, 80, 24, 72, 43, 49, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 57, 61, 34, 19, 11, 26, 85, 6, 8, 56, 54, 82, 33, 45, 28, 2, 42, 70, 40, 99, 47, 13, 29, 76, 59]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[26, 85, 54, 82, 33, 29, 28, 13, 99, 47, 70, 40, 45, 42, 2, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 67, 84, 38, 80, 24, 50, 60, 57, 66, 27, 92, 0, 62, 48, 5, 74, 96, 55, 79, 30, 88, 41, 7, 91, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 52, 15, 21, 69, 87, 93, 65, 64, 3, 25, 71, 20, 73, 58, 46, 90, 44, 31, 10, 16, 14, 97, 22, 59, 61, 76, 19, 11, 56, 86, 8, 6, 34, 26]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[21, 87, 15, 93, 69, 65, 64, 3, 52, 18, 89, 78, 83, 9, 71, 20, 73, 58, 10, 14, 16, 44, 31, 46, 92, 27, 57, 66, 79, 30, 88, 41, 7, 91, 62, 48, 5, 74, 96, 55, 25, 0, 22, 97, 90, 59, 61, 76, 19, 11, 85, 26, 56, 86, 8, 6, 34, 28, 13, 99, 47, 70, 40, 45, 2, 42, 33, 54, 82, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 67, 80, 24, 50, 60, 35, 23, 37, 98, 17, 21]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[3, 65, 64, 96, 55, 25, 15, 21, 69, 52, 18, 87, 78, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 48, 5, 62, 74, 91, 7, 41, 88, 30, 79, 66, 0, 92, 27, 57, 60, 24, 80, 86, 50, 56, 8, 6, 19, 11, 26, 85, 34, 82, 54, 33, 45, 2, 42, 40, 70, 99, 47, 13, 28, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 68, 63, 39, 53, 76, 59, 61, 90, 97, 22, 46, 44, 31, 16, 14, 10, 89, 17, 93, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[51, 77, 95, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 28, 45, 2, 42, 40, 70, 99, 47, 13, 82, 54, 33, 6, 8, 56, 19, 11, 26, 85, 34, 59, 61, 90, 97, 22, 31, 10, 16, 14, 20, 71, 83, 9, 48, 5, 62, 0, 92, 27, 57, 60, 24, 80, 86, 50, 76, 44, 46, 73, 58, 35, 37, 98, 23, 17, 93, 78, 52, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 18, 89, 74, 79, 30, 88, 41, 7, 91, 66, 39, 63, 53, 68, 4, 51]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[83, 9, 71, 20, 73, 58, 35, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 74, 18, 62, 48, 5, 89, 78, 52, 55, 79, 30, 88, 41, 91, 7, 0, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 59, 61, 76, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 38, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 29, 13, 68, 63, 53, 39, 66, 97, 22, 31, 10, 14, 16, 90, 44, 46, 98, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[68, 63, 53, 39, 66, 91, 62, 48, 5, 89, 83, 9, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 44, 27, 92, 0, 88, 41, 79, 30, 55, 7, 18, 74, 96, 3, 64, 25, 65, 52, 87, 15, 69, 21, 93, 78, 23, 17, 37, 35, 98, 46, 59, 61, 76, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 95, 77, 51, 38, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 24, 80, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 57, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[43, 49, 72, 67, 84, 38, 95, 77, 51, 70, 99, 47, 13, 45, 2, 42, 40, 28, 33, 54, 82, 11, 26, 85, 34, 76, 59, 61, 19, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 57, 92, 27, 48, 89, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 64, 25, 65, 69, 21, 93, 87, 15, 52, 78, 23, 17, 37, 35, 98, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 46, 0, 66, 8, 6, 29, 36, 4, 12, 94, 81, 32, 75, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[57, 92, 27, 46, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 5, 62, 48, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 37, 35, 98, 23, 76, 59, 61, 19, 56, 86, 6, 8, 34, 26, 85, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 36, 4, 95, 77, 51, 32, 75, 12, 94, 81, 43, 63, 39, 53, 1, 68, 80, 24, 60, 72, 49, 38, 84, 67, 50, 66, 57]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 78, 17, 23, 37, 98, 35, 15, 21, 93, 87, 69, 65, 64, 25, 3, 96, 62, 5, 48, 89, 83, 9, 71, 20, 58, 73, 14, 16, 10, 44, 31, 46, 90, 97, 22, 26, 85, 56, 6, 8, 19, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 77, 51, 95, 36, 4, 38, 84, 67, 80, 24, 60, 50, 86, 76, 59, 61, 34, 57, 39, 53, 63, 68, 72, 43, 49, 1, 94, 81, 32, 75, 12, 66]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[17, 15, 21, 93, 87, 69, 65, 64, 25, 3, 96, 55, 74, 18, 52, 78, 83, 9, 71, 20, 73, 58, 14, 16, 10, 44, 31, 46, 97, 22, 90, 76, 59, 61, 34, 85, 26, 11, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 47, 13, 29, 77, 51, 95, 36, 4, 38, 84, 67, 80, 24, 60, 50, 86, 8, 6, 56, 19, 57, 68, 72, 43, 1, 32, 75, 12, 94, 81, 39, 63, 53, 49, 66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 62, 5, 48, 89, 23, 37, 35, 98, 17]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[40, 70, 99, 47, 13, 28, 45, 2, 42, 33, 82, 54, 8, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 44, 31, 46, 97, 14, 16, 10, 58, 73, 20, 71, 83, 9, 48, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 52, 15, 21, 93, 87, 78, 23, 37, 35, 98, 17, 89, 5, 74, 3, 64, 25, 65, 69, 0, 92, 27, 66, 24, 80, 60, 50, 86, 56, 57, 67, 84, 38, 51, 77, 95, 36, 4, 94, 81, 63, 39, 53, 72, 49, 43, 1, 68, 32, 75, 12, 29, 40]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[82, 54, 11, 26, 85, 19, 56, 8, 6, 86, 50, 80, 24, 60, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 47, 2, 42, 45, 13, 40, 70, 99, 28, 33, 34, 61, 76, 59, 22, 90, 44, 31, 46, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 3, 64, 65, 25, 87, 15, 21, 69, 93, 78, 52, 89, 5, 48, 62, 0, 66, 18, 9, 83, 37, 23, 17, 35, 98, 58, 73, 20, 71, 10, 16, 14, 97, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[40, 70, 99, 13, 2, 42, 45, 28, 47, 77, 51, 95, 38, 29, 67, 84, 50, 86, 56, 8, 6, 19, 11, 26, 85, 54, 82, 33, 24, 80, 72, 43, 49, 68, 63, 39, 53, 1, 66, 57, 60, 76, 59, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 21, 69, 93, 65, 64, 25, 74, 88, 30, 79, 55, 41, 7, 91, 62, 48, 5, 89, 18, 3, 96, 0, 92, 27, 61, 34, 97, 46, 81, 32, 75, 12, 94, 36, 4, 40]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 17, 78, 52, 87, 15, 21, 69, 93, 89, 5, 48, 91, 62, 0, 46, 92, 27, 66, 39, 53, 63, 68, 67, 84, 38, 29, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 24, 80, 60, 50, 56, 8, 6, 19, 85, 26, 11, 54, 82, 45, 28, 2, 42, 70, 40, 99, 13, 47, 33, 34, 76, 59, 61, 86, 57, 7, 55, 30, 79, 88, 41, 18, 3, 65, 64, 25, 74, 96, 37, 35, 98, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[90, 97, 22, 46, 9, 83, 37, 23, 98, 35, 17, 93, 21, 69, 3, 65, 64, 25, 96, 18, 52, 78, 71, 20, 73, 58, 16, 14, 10, 31, 44, 61, 59, 76, 86, 6, 8, 56, 54, 82, 33, 28, 45, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 39, 53, 63, 68, 67, 84, 38, 29, 13, 2, 42, 26, 11, 19, 85, 34, 50, 60, 24, 80, 66, 57, 92, 27, 5, 48, 89, 74, 91, 7, 41, 88, 30, 79, 55, 15, 87, 62, 0, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[61, 59, 76, 22, 97, 90, 44, 31, 46, 62, 48, 5, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 52, 78, 17, 23, 37, 98, 35, 20, 73, 58, 16, 14, 10, 83, 9, 71, 89, 74, 3, 64, 65, 25, 15, 21, 69, 87, 93, 66, 57, 27, 92, 68, 24, 80, 50, 60, 84, 67, 49, 43, 1, 39, 53, 63, 72, 81, 94, 12, 75, 32, 4, 36, 51, 77, 95, 29, 38, 47, 99, 70, 40, 11, 19, 56, 6, 8, 86, 54, 82, 33, 28, 45, 42, 2, 13, 26, 85, 34, 61]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 45, 42, 2, 40, 99, 70, 47, 13, 8, 86, 82, 54, 33, 26, 85, 11, 19, 34, 61, 59, 76, 97, 22, 90, 31, 44, 10, 14, 16, 73, 58, 20, 71, 9, 89, 83, 23, 37, 98, 35, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 74, 96, 18, 5, 48, 62, 46, 0, 91, 7, 41, 88, 30, 79, 55, 27, 92, 66, 57, 24, 80, 50, 60, 56, 6, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[3, 64, 65, 25, 21, 15, 87, 93, 17, 78, 52, 18, 5, 48, 62, 46, 0, 91, 7, 41, 88, 30, 79, 55, 74, 96, 89, 83, 9, 71, 73, 58, 20, 16, 14, 10, 31, 44, 90, 97, 22, 76, 59, 61, 6, 8, 56, 11, 26, 85, 34, 19, 82, 54, 33, 28, 45, 42, 2, 13, 99, 70, 40, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 63, 39, 53, 68, 67, 84, 38, 29, 47, 50, 60, 24, 80, 86, 57, 92, 27, 66, 37, 23, 35, 98, 69, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[29, 47, 13, 2, 45, 28, 82, 54, 33, 42, 99, 70, 40, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 1, 53, 39, 63, 72, 43, 67, 84, 38, 24, 80, 86, 56, 6, 8, 34, 26, 85, 11, 19, 61, 59, 76, 97, 22, 90, 44, 10, 31, 58, 73, 20, 16, 14, 35, 48, 5, 62, 46, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 52, 78, 23, 17, 37, 98, 71, 83, 9, 89, 87, 15, 21, 93, 69, 3, 64, 65, 25, 27, 92, 66, 57, 60, 68, 50, 29]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[38, 95, 51, 77, 29, 47, 13, 2, 45, 28, 82, 54, 33, 42, 40, 99, 70, 11, 19, 56, 6, 8, 34, 26, 85, 50, 60, 68, 72, 49, 43, 67, 84, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 66, 57, 27, 92, 7, 41, 88, 30, 79, 55, 96, 64, 65, 25, 87, 15, 21, 93, 69, 52, 78, 17, 37, 98, 23, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 62, 0, 91, 74, 18, 3, 46, 31, 16, 14, 10, 90, 44, 22, 97, 59, 61, 76, 86, 80, 24, 38]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[4, 36, 77, 95, 51, 38, 84, 67, 49, 43, 72, 39, 63, 68, 24, 80, 60, 50, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 86, 82, 33, 54, 28, 13, 29, 40, 99, 47, 70, 2, 45, 42, 59, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 83, 9, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 78, 17, 15, 21, 93, 69, 65, 25, 64, 3, 96, 23, 37, 98, 35, 87, 46, 92, 27, 57, 66, 1, 53, 94, 81, 12, 32, 75, 4]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[44, 97, 90, 22, 46, 92, 27, 57, 66, 24, 80, 60, 50, 86, 8, 56, 6, 11, 26, 85, 34, 61, 59, 76, 19, 82, 54, 33, 28, 13, 2, 45, 42, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 63, 53, 39, 72, 49, 43, 67, 84, 38, 29, 68, 41, 88, 30, 79, 7, 0, 91, 62, 74, 96, 55, 89, 5, 48, 9, 83, 23, 37, 35, 17, 15, 87, 93, 21, 69, 65, 64, 3, 52, 78, 18, 25, 98, 71, 20, 73, 58, 14, 16, 10, 31, 44]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[61, 59, 76, 85, 34, 26, 11, 19, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 67, 84, 38, 72, 49, 80, 24, 8, 56, 6, 86, 50, 60, 68, 27, 92, 66, 57, 90, 22, 97, 44, 31, 16, 14, 73, 58, 20, 71, 83, 9, 23, 37, 35, 17, 93, 15, 21, 69, 52, 78, 87, 98, 89, 5, 48, 62, 91, 7, 41, 88, 30, 79, 96, 55, 74, 18, 3, 65, 64, 25, 46, 10, 0, 63, 39, 53, 61]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[50, 60, 24, 80, 53, 39, 63, 72, 49, 43, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 68, 57, 27, 92, 66, 0, 46, 62, 5, 48, 89, 87, 15, 21, 52, 78, 83, 9, 98, 37, 35, 23, 17, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 71, 20, 73, 58, 16, 14, 10, 31, 44, 22, 97, 90, 76, 59, 61, 34, 26, 85, 11, 19, 6, 8, 56, 86, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 50]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[10, 14, 16, 73, 58, 20, 71, 9, 83, 23, 17, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 0, 48, 5, 62, 46, 90, 97, 22, 44, 31, 66, 57, 27, 92, 24, 80, 53, 39, 63, 72, 49, 43, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 1, 68, 60, 50, 8, 6, 56, 86, 11, 26, 85, 61, 34, 19, 54, 82, 33, 28, 45, 42, 2, 40, 70, 47, 99, 13, 29, 77, 95, 51, 59, 76, 89, 78, 52, 87, 15, 21, 37, 98, 35, 10]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[63, 53, 39, 1, 43, 72, 49, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 80, 24, 57, 27, 92, 0, 5, 48, 89, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 7, 91, 62, 71, 9, 83, 23, 17, 37, 35, 98, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 34, 19, 11, 26, 85, 54, 82, 33, 28, 45, 2, 42, 40, 70, 99, 13, 29, 47, 50, 8, 6, 56, 86, 68, 60, 66, 46, 41, 88, 30, 79, 63]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[25, 3, 64, 65, 96, 55, 41, 7, 91, 5, 48, 89, 78, 52, 15, 21, 69, 87, 93, 17, 37, 23, 98, 35, 20, 71, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 34, 26, 85, 19, 11, 54, 82, 86, 6, 56, 8, 33, 84, 67, 72, 49, 43, 81, 1, 53, 39, 63, 68, 57, 27, 92, 66, 24, 80, 60, 50, 28, 45, 2, 42, 47, 40, 70, 99, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 88, 30, 79, 0, 46, 62, 74, 18, 9, 83, 25]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[2, 42, 45, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 59, 61, 76, 90, 97, 22, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 78, 52, 87, 15, 21, 69, 93, 17, 37, 23, 98, 35, 58, 5, 48, 62, 46, 92, 27, 66, 57, 0, 18, 3, 64, 65, 25, 96, 55, 41, 7, 91, 74, 79, 30, 88, 72, 49, 43, 67, 84, 33, 54, 82, 29, 38, 13, 28, 2]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[94, 81, 12, 75, 32, 36, 4, 95, 77, 51, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 92, 27, 66, 57, 97, 22, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 78, 52, 87, 15, 21, 93, 69, 65, 3, 64, 25, 79, 30, 88, 41, 7, 91, 0, 62, 46, 90, 58, 37, 23, 17, 35, 98, 48, 5, 74, 18, 96, 55, 82, 33, 54, 28, 2, 42, 45, 13, 99, 70, 40, 47, 94]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[21, 15, 87, 17, 23, 37, 98, 35, 20, 71, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 61, 76, 59, 86, 8, 6, 56, 19, 85, 11, 26, 34, 82, 54, 33, 28, 2, 42, 45, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 13, 84, 67, 49, 43, 1, 53, 39, 63, 68, 72, 80, 24, 50, 60, 92, 27, 57, 66, 46, 0, 62, 5, 48, 89, 78, 52, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 9, 83, 69, 93, 3, 65, 64, 25, 21]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 44, 61, 76, 59, 86, 6, 8, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 2, 42, 45, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 13, 84, 67, 49, 43, 1, 53, 39, 63, 68, 72, 80, 24, 50, 60, 57, 66, 62, 5, 48, 89, 78, 52, 18, 74, 96, 55, 91, 7, 41, 88, 30, 79, 3, 64, 25, 65, 69, 21, 15, 87, 93, 17, 23, 37, 35, 98, 9, 83, 0, 46, 92, 27, 22, 71]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[9, 83, 71, 20, 73, 58, 35, 98, 37, 23, 17, 78, 52, 18, 74, 96, 55, 91, 7, 41, 88, 30, 79, 3, 64, 25, 65, 69, 21, 15, 87, 93, 89, 48, 5, 62, 46, 10, 16, 14, 22, 90, 97, 44, 31, 61, 86, 6, 8, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 2, 42, 45, 70, 40, 99, 47, 13, 29, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 24, 80, 50, 60, 68, 57, 27, 92, 66, 0, 63, 39, 53, 76, 59, 9]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[71, 58, 73, 20, 10, 14, 16, 46, 90, 97, 22, 31, 44, 92, 27, 66, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 13, 29, 47, 38, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 99, 40, 70, 2, 42, 45, 61, 76, 59, 62, 5, 48, 89, 83, 9, 23, 37, 98, 35, 17, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 3, 64, 25, 65, 69, 21, 15, 87, 93, 71]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[54, 82, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 80, 24, 39, 53, 63, 68, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 72, 49, 77, 51, 95, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 57, 66, 46, 0, 5, 48, 89, 74, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 62, 71, 83, 9, 35, 17, 78, 52, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 23, 37, 98, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 29, 54]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[37, 23, 17, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 78, 52, 71, 83, 9, 35, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 19, 11, 26, 85, 34, 6, 8, 56, 54, 82, 33, 28, 45, 2, 42, 47, 95, 77, 51, 29, 38, 84, 67, 68, 80, 24, 27, 92, 66, 57, 60, 50, 86, 72, 49, 43, 1, 53, 63, 39, 81, 94, 12, 32, 75, 4, 36, 99, 40, 70, 13, 0, 46, 62, 98, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[66, 92, 27, 57, 60, 50, 86, 56, 6, 8, 80, 24, 67, 72, 49, 43, 39, 63, 53, 1, 68, 84, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 28, 45, 2, 42, 47, 13, 70, 99, 40, 11, 26, 85, 34, 19, 54, 82, 33, 76, 61, 59, 22, 44, 97, 90, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 89, 5, 48, 62, 78, 17, 37, 23, 98, 35, 15, 21, 93, 69, 52, 87, 65, 25, 64, 3, 30, 88, 41, 7, 74, 96, 55, 91, 79, 0, 46, 18, 66]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[45, 2, 42, 47, 70, 40, 99, 13, 28, 33, 54, 82, 56, 6, 8, 19, 76, 85, 11, 26, 61, 34, 59, 50, 60, 57, 27, 92, 66, 46, 62, 48, 5, 74, 3, 65, 64, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 35, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 0, 91, 7, 41, 55, 79, 30, 88, 96, 18, 89, 98, 86, 24, 80, 72, 49, 1, 68, 63, 53, 39, 43, 67, 84, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 29, 45]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[97, 22, 90, 31, 44, 16, 14, 10, 73, 58, 20, 71, 35, 9, 83, 37, 23, 17, 89, 48, 5, 74, 18, 52, 15, 87, 93, 21, 69, 64, 25, 3, 65, 96, 55, 79, 30, 88, 41, 7, 0, 91, 62, 46, 27, 92, 57, 66, 24, 80, 60, 50, 56, 8, 6, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 45, 2, 42, 13, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 63, 53, 39, 72, 49, 67, 84, 95, 77, 51, 47, 99, 70, 40, 86, 78, 98, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[33, 54, 82, 6, 8, 56, 86, 50, 60, 80, 24, 63, 53, 39, 72, 49, 67, 84, 38, 95, 77, 51, 29, 47, 99, 70, 40, 2, 42, 45, 28, 13, 4, 36, 32, 75, 12, 94, 81, 43, 1, 68, 57, 66, 22, 97, 90, 31, 10, 14, 16, 73, 58, 20, 71, 83, 37, 98, 35, 9, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 89, 48, 5, 74, 52, 78, 23, 17, 87, 15, 21, 93, 69, 46, 27, 92, 0, 44, 59, 61, 76, 85, 19, 11, 26, 34, 33]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[82, 54, 33, 45, 42, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 51, 77, 95, 38, 29, 84, 67, 72, 49, 43, 63, 39, 53, 1, 68, 24, 80, 50, 60, 8, 6, 19, 11, 26, 85, 34, 59, 61, 76, 22, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 62, 46, 27, 92, 66, 57, 0, 91, 48, 5, 89, 74, 18, 52, 78, 17, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 41, 88, 30, 79, 7, 23, 37, 98, 35, 90, 97, 56, 86, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[27, 92, 66, 57, 60, 50, 56, 6, 8, 86, 80, 24, 68, 72, 49, 43, 63, 39, 53, 1, 67, 84, 38, 29, 77, 95, 51, 4, 36, 32, 75, 12, 94, 81, 28, 13, 70, 40, 99, 47, 2, 42, 45, 82, 54, 33, 11, 26, 85, 34, 61, 44, 90, 97, 22, 31, 10, 14, 16, 73, 58, 35, 37, 98, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 41, 79, 30, 88, 7, 91, 48, 5, 89, 18, 74, 0, 62, 46, 71, 83, 9, 20, 59, 76, 19, 27]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[62, 46, 71, 83, 9, 89, 48, 5, 91, 7, 27, 92, 0, 66, 57, 60, 50, 56, 6, 8, 86, 80, 24, 68, 72, 49, 43, 39, 53, 63, 1, 67, 84, 38, 29, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 28, 13, 70, 40, 99, 47, 2, 42, 45, 82, 54, 33, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 90, 44, 31, 10, 14, 16, 73, 58, 20, 35, 37, 23, 17, 93, 87, 15, 21, 69, 64, 3, 96, 55, 79, 30, 88, 41, 74, 18, 52, 78, 65, 25, 98, 62]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[79, 30, 88, 41, 7, 74, 96, 18, 78, 17, 93, 87, 15, 21, 69, 52, 5, 48, 89, 9, 83, 71, 73, 58, 20, 35, 98, 23, 37, 62, 0, 91, 27, 92, 66, 57, 50, 60, 24, 80, 49, 72, 43, 39, 53, 63, 1, 68, 76, 59, 61, 85, 34, 26, 11, 19, 6, 8, 56, 86, 54, 82, 45, 33, 28, 13, 70, 40, 99, 47, 2, 42, 29, 38, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 67, 84, 22, 90, 44, 16, 14, 10, 31, 46, 97, 55, 25, 65, 64, 3, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[5, 62, 0, 91, 7, 74, 89, 48, 9, 83, 78, 17, 23, 37, 98, 35, 58, 73, 20, 71, 14, 16, 10, 31, 44, 90, 97, 22, 61, 76, 59, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 42, 2, 13, 29, 47, 70, 99, 40, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 80, 24, 60, 50, 86, 56, 6, 8, 66, 41, 88, 30, 79, 55, 96, 65, 25, 64, 3, 18, 52, 87, 15, 21, 69, 93, 46, 92, 27, 57, 68, 63, 39, 53, 5]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[78, 52, 87, 15, 21, 69, 93, 89, 48, 5, 62, 0, 91, 74, 18, 3, 65, 25, 64, 55, 96, 30, 79, 88, 41, 7, 27, 92, 66, 80, 24, 57, 68, 63, 39, 53, 72, 67, 84, 50, 86, 60, 56, 6, 8, 54, 82, 33, 28, 45, 42, 2, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 44, 31, 46, 14, 16, 10, 58, 73, 20, 71, 83, 9, 23, 37, 98, 35, 17, 78]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[4, 36, 51, 77, 95, 38, 29, 2, 42, 45, 28, 33, 54, 82, 86, 56, 8, 6, 19, 11, 26, 85, 34, 76, 59, 61, 44, 90, 97, 22, 31, 46, 0, 91, 7, 55, 79, 30, 88, 41, 74, 18, 96, 48, 5, 62, 89, 78, 52, 87, 15, 21, 69, 93, 17, 23, 37, 35, 83, 9, 71, 73, 20, 10, 14, 16, 58, 98, 3, 65, 64, 25, 92, 27, 66, 80, 24, 68, 63, 39, 53, 43, 1, 81, 32, 75, 12, 94, 49, 72, 67, 84, 99, 13, 70, 40, 47, 50, 57, 60, 4]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[98, 35, 23, 37, 17, 87, 15, 21, 69, 93, 3, 64, 25, 65, 5, 48, 89, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0, 92, 27, 66, 57, 24, 80, 76, 61, 59, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 68, 33, 54, 82, 13, 70, 40, 99, 45, 2, 42, 28, 19, 97, 90, 44, 22, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 98]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[43, 1, 53, 39, 63, 72, 49, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 67, 84, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 6, 19, 11, 26, 85, 34, 76, 61, 59, 97, 90, 44, 22, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 98, 35, 23, 37, 17, 78, 93, 3, 64, 25, 65, 18, 87, 15, 21, 69, 52, 89, 5, 48, 62, 46, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 92, 27, 57, 60, 68, 24, 80, 50, 86, 66, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[1, 53, 39, 63, 72, 49, 43, 68, 24, 80, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 76, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 37, 98, 35, 17, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 48, 5, 89, 78, 52, 18, 74, 46, 22, 97, 90, 44, 61, 59, 54, 82, 33, 2, 42, 45, 28, 13, 40, 70, 47, 99, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 29, 38, 67, 60, 57, 66, 27, 92, 1]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[65, 3, 64, 25, 52, 18, 74, 91, 7, 88, 41, 79, 30, 96, 55, 15, 87, 69, 21, 93, 78, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 44, 90, 97, 22, 62, 5, 48, 89, 0, 66, 27, 92, 57, 24, 80, 60, 50, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 86, 8, 6, 56, 11, 54, 82, 33, 2, 13, 45, 28, 42, 40, 70, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 26, 85, 19, 34, 61, 59, 76, 17, 65]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 0, 5, 48, 89, 62, 91, 7, 41, 88, 30, 79, 96, 55, 18, 74, 78, 23, 17, 93, 87, 15, 21, 69, 52, 65, 3, 64, 25, 27, 92, 57, 80, 86, 56, 8, 6, 19, 85, 26, 11, 54, 82, 33, 2, 45, 28, 42, 40, 70, 99, 47, 13, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 43, 72, 84, 67, 50, 60, 24, 68, 63, 39, 53, 1, 66, 76, 44, 90, 97, 22, 59, 61, 34, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[65, 64, 25, 3, 96, 55, 18, 74, 5, 48, 89, 62, 0, 46, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 23, 17, 37, 98, 35, 78, 52, 69, 87, 15, 21, 93, 30, 79, 88, 41, 7, 91, 66, 92, 27, 57, 60, 24, 80, 86, 50, 76, 61, 59, 22, 97, 90, 34, 26, 85, 56, 8, 6, 11, 19, 54, 82, 33, 2, 42, 45, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 72, 67, 84, 63, 39, 53, 1, 68, 65]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[62, 48, 5, 74, 18, 0, 91, 7, 41, 88, 30, 79, 55, 64, 25, 3, 96, 52, 87, 15, 21, 93, 69, 78, 37, 98, 35, 17, 23, 83, 9, 71, 20, 58, 73, 31, 14, 16, 10, 97, 22, 44, 90, 46, 92, 27, 57, 66, 80, 24, 86, 50, 8, 56, 6, 11, 26, 85, 34, 59, 61, 76, 19, 82, 54, 33, 2, 42, 45, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 60, 67, 84, 49, 72, 43, 89, 65, 62]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 57, 66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 64, 25, 65, 3, 89, 5, 48, 62, 9, 83, 23, 37, 98, 35, 17, 78, 52, 87, 93, 15, 21, 69, 20, 73, 58, 14, 16, 10, 31, 46, 71, 44, 90, 97, 22, 59, 61, 76, 19, 82, 54, 33, 2, 45, 28, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 42, 34, 85]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[20, 73, 58, 14, 16, 10, 31, 46, 71, 44, 90, 97, 22, 76, 59, 61, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 29, 77, 51, 95, 45, 2, 42, 13, 70, 99, 40, 47, 54, 82, 33, 28, 49, 43, 1, 53, 39, 63, 68, 81, 94, 32, 75, 12, 36, 4, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 64, 25, 65, 3, 69, 87, 15, 21, 93, 17, 37, 35, 23, 98, 89, 5, 48, 62, 9, 83, 78, 52, 20]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[10, 16, 14, 73, 58, 20, 71, 44, 90, 97, 22, 31, 46, 92, 27, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 64, 25, 65, 3, 89, 5, 48, 62, 9, 83, 52, 78, 17, 37, 23, 98, 35, 15, 21, 93, 87, 69, 57, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 67, 84, 29, 28, 45, 2, 42, 13, 99, 70, 40, 47, 54, 82, 33, 56, 86, 50, 8, 6, 11, 26, 85, 34, 61, 19, 76, 59, 10]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[44, 90, 97, 22, 31, 46, 71, 20, 73, 58, 16, 14, 10, 98, 35, 37, 23, 17, 78, 93, 87, 15, 21, 69, 65, 3, 96, 55, 41, 88, 30, 79, 7, 0, 62, 48, 5, 89, 83, 9, 18, 64, 25, 52, 74, 91, 92, 27, 66, 57, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 67, 84, 29, 28, 45, 42, 2, 13, 99, 40, 47, 70, 33, 82, 54, 34, 19, 59, 61, 76, 44]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 43, 1, 63, 39, 53, 66, 57, 60, 80, 24, 86, 50, 8, 6, 56, 11, 85, 26, 19, 59, 61, 76, 44, 90, 97, 22, 31, 46, 71, 20, 73, 58, 16, 14, 10, 98, 35, 37, 23, 17, 93, 21, 15, 87, 78, 52, 96, 55, 74, 91, 7, 0, 62, 48, 5, 9, 83, 18, 64, 25, 3, 65, 69, 89, 79, 30, 41, 88, 92, 27, 68, 67, 49, 72, 84, 38, 29, 99, 40, 70, 47, 13, 45, 2, 42, 28, 33, 54, 82, 34, 51]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[83, 9, 71, 20, 73, 58, 16, 14, 44, 90, 97, 22, 31, 46, 0, 5, 48, 89, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 64, 25, 3, 65, 69, 21, 15, 87, 78, 52, 23, 17, 93, 37, 35, 98, 92, 27, 57, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 76, 59, 61, 19, 11, 26, 85, 34, 6, 56, 86, 82, 54, 33, 8, 45, 2, 42, 40, 70, 99, 47, 13, 28, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 67, 84, 66, 74, 10, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[99, 47, 13, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 56, 6, 8, 82, 54, 33, 42, 2, 28, 45, 11, 26, 85, 34, 19, 76, 59, 61, 44, 22, 90, 97, 46, 14, 16, 10, 31, 20, 73, 58, 48, 5, 62, 9, 83, 71, 89, 17, 23, 37, 35, 98, 78, 52, 21, 15, 87, 93, 69, 65, 64, 25, 3, 96, 55, 74, 18, 91, 7, 41, 88, 30, 79, 0, 92, 27, 66, 57, 72, 67, 84, 70, 40, 99]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[87, 93, 69, 65, 64, 25, 3, 96, 55, 74, 18, 52, 78, 37, 23, 17, 83, 9, 89, 5, 48, 91, 7, 41, 88, 30, 79, 0, 62, 46, 14, 16, 10, 31, 44, 22, 97, 90, 59, 61, 76, 11, 26, 85, 34, 19, 8, 6, 56, 86, 50, 60, 24, 80, 72, 67, 84, 38, 95, 77, 51, 29, 13, 99, 70, 40, 47, 45, 28, 2, 42, 54, 82, 33, 49, 1, 53, 39, 63, 68, 43, 94, 81, 32, 75, 12, 36, 4, 27, 92, 66, 57, 71, 20, 73, 58, 35, 98, 15, 21, 87]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[47, 13, 70, 40, 99, 45, 28, 2, 42, 33, 54, 82, 11, 26, 85, 34, 19, 8, 6, 56, 86, 50, 60, 24, 80, 57, 66, 27, 92, 0, 91, 7, 41, 88, 30, 79, 55, 74, 18, 52, 78, 87, 93, 15, 21, 69, 65, 64, 25, 3, 96, 48, 5, 89, 62, 46, 44, 90, 97, 22, 76, 59, 61, 14, 16, 10, 31, 9, 71, 20, 73, 58, 35, 98, 37, 23, 17, 83, 68, 63, 53, 39, 72, 67, 84, 49, 43, 1, 81, 32, 75, 12, 94, 36, 4, 95, 77, 51, 29, 38, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[79, 30, 88, 41, 7, 62, 0, 91, 48, 5, 89, 23, 17, 83, 9, 37, 98, 35, 71, 20, 73, 58, 16, 14, 90, 97, 22, 76, 59, 61, 44, 31, 10, 46, 27, 92, 66, 57, 86, 56, 8, 6, 82, 54, 33, 29, 38, 84, 67, 72, 49, 43, 1, 53, 63, 39, 68, 80, 24, 50, 60, 19, 11, 26, 85, 34, 42, 45, 28, 2, 13, 70, 40, 99, 47, 36, 4, 95, 77, 51, 12, 94, 81, 32, 75, 74, 18, 52, 78, 87, 93, 15, 21, 69, 65, 64, 25, 3, 96, 55, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[92, 27, 46, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 37, 23, 17, 87, 15, 21, 69, 93, 78, 18, 74, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 52, 35, 98, 90, 44, 22, 97, 59, 61, 76, 34, 26, 85, 19, 56, 8, 6, 33, 82, 54, 11, 45, 28, 13, 99, 70, 40, 47, 95, 77, 51, 12, 94, 81, 32, 75, 4, 36, 38, 49, 43, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 67, 84, 29, 2, 42, 72, 57, 66, 92]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[37, 98, 35, 58, 73, 20, 71, 9, 83, 23, 17, 78, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 46, 97, 22, 44, 31, 14, 16, 10, 90, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 70, 40, 13, 2, 28, 33, 82, 54, 45, 42, 92, 27, 66, 57, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 18, 89, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[62, 46, 97, 22, 44, 90, 59, 61, 76, 19, 11, 26, 85, 34, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 63, 39, 53, 68, 67, 84, 33, 82, 54, 45, 2, 28, 13, 42, 40, 70, 99, 47, 95, 77, 51, 38, 29, 4, 36, 32, 75, 12, 94, 81, 66, 48, 5, 89, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0, 10, 14, 16, 31, 58, 73, 20, 71, 9, 83, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 37, 35, 98, 57, 92, 27, 62]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[96, 55, 41, 7, 91, 74, 48, 89, 62, 5, 9, 83, 71, 73, 58, 14, 16, 10, 20, 31, 90, 97, 22, 46, 92, 27, 57, 66, 0, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 1, 72, 49, 43, 81, 95, 77, 51, 29, 38, 36, 4, 94, 12, 75, 32, 47, 13, 2, 42, 40, 70, 99, 45, 28, 33, 82, 54, 67, 84, 39, 63, 68, 53, 79, 30, 88, 52, 21, 93, 69, 87, 15, 78, 17, 37, 23, 98, 35, 65, 64, 25, 3, 18, 96]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[72, 49, 43, 1, 53, 39, 63, 68, 57, 27, 92, 90, 97, 22, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 38, 51, 95, 77, 36, 4, 47, 13, 99, 70, 40, 45, 28, 33, 82, 54, 2, 42, 29, 84, 67, 81, 94, 12, 75, 32, 66, 0, 5, 48, 62, 46, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 89, 37, 23, 98, 35, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 41, 7, 91, 74, 18, 30, 88, 79, 72]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[9, 89, 5, 48, 62, 46, 90, 97, 22, 44, 31, 10, 16, 14, 73, 58, 20, 71, 35, 83, 37, 23, 98, 69, 15, 21, 93, 87, 52, 78, 18, 74, 96, 55, 41, 7, 91, 0, 30, 88, 79, 3, 65, 64, 25, 17, 92, 27, 57, 66, 60, 50, 8, 56, 86, 80, 72, 49, 43, 1, 53, 39, 63, 68, 24, 6, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 84, 67, 26, 85, 19, 34, 61, 76, 59, 9]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[24, 80, 60, 50, 8, 56, 86, 6, 11, 26, 85, 34, 76, 59, 61, 97, 22, 90, 44, 31, 46, 92, 27, 66, 57, 0, 62, 5, 48, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 78, 87, 15, 21, 93, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 18, 52, 69, 64, 25, 65, 3, 39, 63, 68, 72, 49, 43, 1, 53, 81, 75, 12, 32, 94, 36, 4, 95, 77, 51, 13, 70, 40, 99, 47, 29, 38, 84, 67, 33, 28, 45, 2, 42, 54, 82, 19, 24]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[87, 15, 21, 93, 52, 78, 17, 23, 37, 98, 35, 83, 9, 62, 5, 48, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 46, 92, 27, 57, 0, 66, 50, 60, 80, 24, 72, 49, 43, 67, 84, 33, 82, 54, 34, 26, 85, 19, 6, 8, 56, 86, 76, 61, 59, 97, 22, 90, 31, 10, 14, 16, 73, 58, 20, 71, 44, 11, 2, 42, 40, 70, 99, 47, 13, 28, 45, 29, 77, 51, 95, 38, 36, 4, 94, 81, 1, 53, 39, 63, 68, 32, 75, 12, 18, 3, 64, 25, 65, 69, 87]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[47, 13, 2, 42, 40, 70, 99, 28, 45, 29, 77, 51, 95, 38, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 24, 80, 50, 60, 76, 61, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 62, 5, 48, 74, 96, 55, 79, 30, 88, 41, 7, 91, 66, 57, 92, 27, 46, 35, 37, 98, 23, 17, 78, 52, 18, 3, 64, 25, 65, 69, 21, 15, 87, 93, 89, 0, 86, 6, 8, 56, 54, 82, 33, 67, 84, 72, 49, 43, 11, 19, 26, 85, 34, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[51, 95, 77, 13, 2, 42, 40, 70, 99, 47, 29, 38, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 33, 82, 54, 28, 45, 6, 8, 56, 86, 60, 80, 24, 50, 57, 66, 27, 92, 46, 90, 44, 31, 10, 16, 14, 20, 73, 58, 35, 37, 98, 23, 17, 78, 52, 18, 3, 64, 25, 65, 69, 21, 15, 87, 93, 89, 48, 5, 62, 71, 83, 9, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 22, 97, 76, 59, 61, 85, 26, 34, 19, 11, 51]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[90, 44, 31, 10, 14, 16, 73, 58, 20, 46, 92, 27, 57, 66, 60, 80, 24, 50, 86, 8, 56, 19, 11, 26, 85, 34, 82, 54, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 6, 61, 59, 76, 22, 97, 0, 5, 48, 89, 83, 9, 71, 23, 17, 78, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 37, 35, 98, 93, 87, 15, 21, 69, 3, 64, 25, 65, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[50, 60, 80, 24, 43, 72, 49, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 67, 84, 6, 8, 56, 86, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 2, 13, 70, 40, 99, 47, 42, 45, 28, 57, 66, 0, 5, 48, 89, 83, 9, 71, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 92, 27, 62, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 78, 87, 15, 21, 69, 3, 64, 25, 65, 93, 52, 98, 37, 23, 17, 35, 20, 46, 50]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 29, 38, 95, 77, 51, 4, 36, 75, 12, 94, 32, 81, 1, 53, 39, 63, 68, 57, 27, 92, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 44, 97, 22, 46, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 78, 17, 37, 23, 98, 35, 87, 15, 21, 69, 93, 52, 65, 64, 25, 3, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 6]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[36, 4, 51, 77, 95, 38, 29, 13, 70, 40, 99, 47, 2, 42, 45, 28, 33, 54, 82, 11, 19, 76, 59, 61, 97, 22, 90, 31, 10, 16, 14, 20, 73, 58, 9, 71, 35, 37, 23, 17, 78, 83, 98, 15, 21, 69, 93, 87, 52, 65, 64, 25, 3, 96, 55, 30, 79, 41, 88, 0, 92, 27, 57, 24, 80, 72, 49, 43, 67, 84, 68, 39, 63, 53, 66, 7, 91, 74, 18, 89, 48, 5, 62, 46, 44, 34, 85, 26, 56, 6, 8, 86, 50, 60, 1, 94, 81, 12, 75, 32, 36]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[8, 6, 56, 86, 61, 59, 76, 57, 66, 27, 92, 0, 91, 7, 41, 30, 79, 88, 5, 48, 9, 71, 20, 73, 58, 10, 14, 16, 31, 90, 97, 22, 46, 62, 89, 52, 78, 83, 23, 17, 15, 93, 87, 69, 21, 65, 64, 3, 96, 55, 74, 18, 25, 37, 35, 98, 44, 60, 24, 80, 49, 43, 72, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 13, 70, 40, 99, 47, 2, 45, 42, 33, 28, 11, 26, 85, 19, 34, 82, 54, 50, 8]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 91, 7, 41, 30, 79, 88, 55, 96, 52, 78, 17, 23, 37, 35, 98, 9, 71, 20, 73, 58, 10, 14, 16, 31, 46, 62, 48, 5, 74, 18, 25, 65, 64, 3, 87, 15, 21, 93, 69, 89, 83, 44, 90, 97, 22, 76, 59, 61, 19, 11, 26, 85, 34, 8, 6, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 13, 70, 40, 99, 47, 2, 45, 28, 42, 33, 82, 54, 57, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[10, 14, 16, 31, 46, 62, 48, 5, 74, 18, 25, 65, 64, 3, 96, 55, 41, 88, 30, 79, 91, 7, 0, 66, 57, 27, 92, 60, 80, 24, 86, 50, 8, 6, 56, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 12, 75, 32, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 76, 59, 61, 19, 11, 26, 85, 34, 90, 44, 22, 97, 71, 20, 73, 58, 35, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 89, 83, 9, 98, 10]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[16, 14, 10, 20, 73, 58, 31, 44, 90, 97, 22, 59, 61, 34, 26, 85, 11, 19, 8, 54, 82, 33, 28, 45, 42, 2, 40, 99, 70, 13, 47, 29, 38, 51, 77, 95, 4, 36, 12, 75, 32, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 50, 60, 80, 24, 86, 56, 6, 76, 92, 27, 66, 57, 91, 7, 0, 62, 46, 9, 83, 71, 48, 5, 74, 18, 3, 96, 55, 41, 88, 30, 79, 64, 65, 25, 69, 21, 15, 87, 93, 37, 98, 23, 17, 78, 52, 89, 35, 16]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[93, 21, 15, 87, 52, 18, 74, 96, 55, 88, 30, 79, 7, 91, 62, 48, 5, 9, 83, 71, 20, 73, 58, 31, 16, 14, 10, 44, 90, 97, 22, 46, 92, 27, 0, 41, 66, 57, 60, 50, 68, 67, 84, 49, 72, 43, 1, 63, 39, 53, 24, 80, 86, 8, 6, 56, 82, 54, 33, 11, 26, 85, 61, 59, 76, 19, 34, 28, 2, 42, 45, 38, 29, 13, 99, 70, 40, 47, 4, 36, 51, 77, 95, 32, 12, 75, 94, 81, 89, 78, 17, 23, 37, 35, 98, 69, 65, 64, 3, 25, 93]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[26, 85, 34, 19, 11, 8, 6, 56, 82, 54, 33, 42, 45, 28, 13, 99, 70, 40, 2, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 43, 1, 72, 49, 38, 29, 67, 84, 68, 63, 39, 53, 24, 80, 60, 50, 86, 57, 92, 27, 66, 46, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 23, 37, 17, 15, 21, 93, 87, 52, 18, 74, 96, 55, 79, 30, 41, 88, 7, 0, 5, 48, 89, 9, 83, 78, 69, 64, 3, 65, 25, 62, 91, 22, 97, 59, 61, 76, 26]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CADTSP mmas_cadtsp = new MMAS_CADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(26887.432804258024);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 74, 18, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11]");

        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 50, 30232.19361819689, 3316.9724912814877, 0.515, 12.349387755102041, 26884.60831389844);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 100, 29228.82347601397, 3440.723019774415, 0.5, 10.509387755102042, 26121.66826161053);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 101, 29170.461845006856, 2785.480308231243, 0.5, 10.01469387755102, 26121.66826161053);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 150, 29490.647829628677, 2788.9043496536406, 0.5, 12.696326530612245, 25629.69486140439);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 200, 28208.806877061324, 2503.6164524624733, 0.5, 8.922448979591836, 25629.69486140439);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 201, 38284.863003710176, 2123.5254740845257, 0.475, 31.325714285714287, 34181.96823779519);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 250, 33016.61218862824, 3492.222014271719, 0.5, 15.98530612244898, 28332.364541135612);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 300, 32174.089544486804, 2679.368238440418, 0.5, 15.004081632653062, 27585.36359159293);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 301, 39160.71046101882, 2561.5338805321753, 0.485, 34.68244897959184, 33365.256770530126);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 350, 32026.181430032044, 3554.42689250507, 0.515, 14.604897959183674, 27604.635228535055);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 400, 31956.40319324997, 4003.976256589469, 0.525, 16.68734693877551, 27562.254476292906);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 401, 39710.911235222615, 3179.0727472930066, 0.5, 35.64244897959183, 32179.30044163081);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 450, 33505.99924136585, 3339.247504869342, 0.495, 19.898775510204082, 27099.709519696466);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 500, 31620.729376650575, 4158.194542616219, 0.5, 12.33061224489796, 27029.335569492283);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 501, 39640.62741107687, 3410.775206513622, 0.47, 38.03918367346939, 32795.96794873733);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 550, 30618.44751415884, 3262.496394817827, 0.5, 15.409795918367347, 27072.149583704628);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 600, 29310.65844612638, 2819.9821576401373, 0.5, 9.614693877551021, 26213.474993157877);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 601, 40419.5296470275, 2724.282823551949, 0.475, 35.58857142857143, 36273.73535956904);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 650, 32946.283444979854, 2791.7959263764265, 0.5, 17.04734693877551, 27740.637044481486);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 700, 29876.054789459406, 2482.070889441175, 0.5, 12.973877551020408, 26571.639976178027);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 701, 39672.33585562356, 2495.077807605331, 0.495, 29.14938775510204, 33742.236319072996);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 750, 33463.61226368743, 4098.795611354273, 0.52, 13.592653061224489, 28384.01849298056);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 800, 31608.148945334066, 3162.506907770865, 0.5, 13.13795918367347, 27896.524392828287);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 801, 39574.14723705458, 2691.181859881499, 0.485, 38.49551020408163, 35143.43118378676);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 850, 31501.635266528167, 2916.8216128255067, 0.525, 14.693877551020408, 26583.652604269188);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 900, 31320.766765002674, 3315.5254354681642, 0.515, 14.31265306122449, 26296.742984516713);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 901, 38607.34808526366, 2714.629445879097, 0.49, 32.96326530612245, 33558.875116767296);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 950, 31812.09246929259, 2940.5870035498115, 0.51, 12.264489795918367, 27304.537813150673);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1000, 31349.089980980967, 4669.219427037692, 0.5, 9.62204081632653, 26887.432804258024);

        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[49, 63, 39, 53, 68, 24, 80, 72, 84, 67, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 21, 15, 69, 93, 87, 78, 17, 37, 23, 98, 35, 83, 9, 89, 52, 71, 20, 73, 58, 16, 14, 10, 44, 97, 22, 90, 31, 46, 92, 27, 57, 60, 50, 86, 56, 6, 8, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 13, 47, 99, 70, 40, 28, 51, 77, 95, 29, 49]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[80, 24, 60, 50, 86, 76, 59, 61, 34, 26, 85, 56, 6, 8, 19, 11, 54, 82, 33, 42, 2, 45, 13, 47, 99, 70, 40, 28, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 44, 97, 22, 90, 31, 46, 92, 27, 57, 80]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[16, 14, 10, 44, 97, 22, 90, 31, 46, 92, 27, 57, 80, 24, 60, 50, 86, 76, 59, 61, 34, 26, 85, 56, 6, 8, 19, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 44, 97, 22, 90, 31, 46, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[39, 63, 72, 84, 67, 49, 68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 41, 88, 30, 79, 74, 18, 3, 64, 65, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 30, 79, 88, 41, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 30, 79, 88, 41, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 30, 79, 88, 41, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 80, 24, 60, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 29, 38, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 84, 67, 49, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 91, 62, 48, 5, 0, 7, 96, 55, 30, 79, 88, 41, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 29]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[42, 2, 45, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 7, 91, 62, 48, 5, 96, 55, 30, 79, 88, 41, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 66, 0, 62, 48, 5, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 52, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 24, 80, 50, 86, 56, 6, 8, 19, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[93, 87, 15, 21, 52, 78, 17, 23, 37, 35, 83, 9, 89, 0, 62, 48, 5, 74, 18, 3, 65, 64, 25, 69, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 46, 92, 27, 57, 60, 50, 86, 8, 19, 85, 11, 54, 82, 33, 28, 2, 45, 42, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 80, 24, 6, 56, 76, 59, 61, 34, 26, 66, 30, 79, 88, 41, 7, 91, 55, 96, 98, 93]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 8, 6, 56, 19, 86, 60, 50, 80, 24, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 2, 45, 42, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[40, 70, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 8, 6, 56, 19, 86, 60, 50, 80, 24, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 8, 6, 56, 19, 86, 60, 50, 80, 24, 76, 59, 61, 34, 26, 85, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 98, 35, 37, 23, 17]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 18, 3, 65, 64, 25, 69, 15, 21, 52, 78, 83, 9, 89, 0, 62, 5, 48, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 86, 60, 50, 80, 24, 56, 8, 6, 11, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 68, 39, 53, 66, 46, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 3, 65, 64, 25, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 76, 59, 61, 34, 85, 26, 19, 11, 56, 6, 8, 86, 50, 80, 24, 60, 68, 39, 53, 63, 1, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 38, 29, 13, 70, 40, 99, 47, 28, 2, 45, 42, 33, 54, 82, 67, 49, 72, 43, 84, 66, 46, 10, 31, 14, 16, 44, 90, 97, 22, 0, 62, 5, 48, 89, 78, 83, 9, 18, 52, 58]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[38, 29, 13, 70, 40, 99, 47, 28, 42, 2, 45, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 66, 46, 10, 31, 14, 16, 44, 90, 97, 22, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 3, 65, 64, 25, 18, 52, 78, 83, 9, 89, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 0, 62, 76, 59, 61, 34, 85, 26, 19, 11, 84, 67, 49, 72, 43, 1, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 38]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[44, 90, 97, 22, 46, 10, 31, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 3, 65, 64, 25, 18, 52, 78, 83, 9, 89, 48, 5, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 38, 29, 13, 70, 40, 99, 47, 28, 42, 2, 45, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 11, 85, 26, 34, 76, 59, 61, 44]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[87, 15, 21, 69, 52, 78, 83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 11, 85, 26, 34, 76, 59, 61, 44, 90, 97, 22, 46, 10, 31, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 76, 59, 61, 44, 90, 97, 22, 46, 10, 31, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 34]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 76, 59, 61, 44, 97, 22, 90, 31, 46, 10, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 76, 59, 61, 44, 97, 22, 90, 31, 46, 10, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 76, 59, 61, 44, 97, 22, 90, 31, 46, 10, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[76, 59, 61, 44, 97, 22, 90, 31, 46, 10, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 11, 26, 85, 34, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[76, 59, 61, 44, 97, 22, 90, 31, 46, 10, 14, 16, 58, 73, 20, 71, 98, 35, 37, 23, 17, 93, 87, 15, 21, 69, 52, 78, 83, 9, 89, 48, 5, 74, 18, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 0, 92, 27, 57, 66, 63, 39, 53, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 28, 2, 42, 45, 33, 54, 82, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 84, 19, 11, 26, 85, 34, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[71, 73, 20, 58, 14, 16, 10, 90, 97, 22, 44, 31, 46, 27, 92, 66, 57, 60, 24, 80, 68, 67, 84, 38, 29, 13, 70, 40, 99, 47, 2, 42, 45, 33, 54, 82, 11, 26, 85, 34, 76, 59, 61, 19, 6, 8, 56, 86, 50, 39, 53, 63, 1, 43, 72, 49, 81, 94, 12, 32, 75, 36, 4, 77, 51, 95, 28, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 89, 48, 5, 62, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[14, 16, 10, 90, 97, 22, 44, 31, 46, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 39, 53, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 89, 48, 5, 62, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 90, 97, 22, 44, 31, 46, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 90, 97, 22, 44, 31, 46, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 90, 97, 22, 44, 31, 46, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[39, 63, 68, 24, 80, 86, 50, 60, 57, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 65, 64, 25, 3, 52, 78, 83, 9, 62, 5, 48, 89, 74, 21, 69, 87, 15, 93, 17, 37, 23, 98, 35, 71, 73, 20, 58, 14, 16, 10, 31, 46, 97, 90, 44, 22, 76, 59, 61, 19, 6, 8, 56, 26, 85, 34, 11, 33, 54, 82, 45, 28, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 49, 72, 67, 84, 53, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[58, 73, 20, 71, 83, 9, 62, 5, 48, 89, 74, 18, 65, 64, 25, 3, 52, 78, 17, 37, 23, 98, 35, 93, 21, 69, 87, 15, 96, 55, 7, 41, 88, 30, 79, 91, 27, 92, 66, 0, 46, 31, 10, 16, 14, 22, 90, 44, 97, 59, 61, 76, 56, 6, 8, 54, 82, 45, 28, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 43, 53, 39, 63, 68, 24, 80, 86, 50, 60, 57, 72, 49, 67, 84, 33, 42, 2, 85, 26, 34, 11, 19, 58]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[53, 39, 63, 72, 80, 24, 60, 57, 92, 27, 66, 0, 74, 18, 52, 78, 17, 37, 23, 98, 35, 93, 21, 15, 87, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 56, 6, 8, 54, 82, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 50, 86, 11, 19, 68, 53]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[43, 49, 80, 24, 60, 57, 92, 27, 66, 0, 74, 18, 52, 78, 17, 37, 23, 98, 35, 93, 21, 15, 87, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 56, 6, 8, 54, 82, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 50, 86, 11, 19, 68, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[5, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 50, 86, 6, 8, 56, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 17, 37, 23, 98, 35, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 50, 86, 6, 8, 56, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 17, 37, 23, 98, 35, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 95]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 50, 86, 6, 8, 56, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 17, 37, 23, 98, 35, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 95, 77]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 50, 86, 6, 8, 56, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 17, 37, 23, 98, 35, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 50, 86, 6, 8, 56, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 17, 37, 23, 98, 35, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[54, 82, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 49, 43, 68, 24, 60, 80, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 17, 37, 23, 98, 35, 83, 9, 20, 73, 58, 16, 14, 10, 71, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 50, 86, 6, 8, 56, 54]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[82, 54, 33, 42, 2, 45, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 43, 49, 68, 24, 60, 80, 57, 92, 27, 66, 0, 62, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 89, 17, 37, 23, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 50, 86, 56, 6, 8, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[34, 26, 85, 11, 19, 61, 59, 76, 22, 97, 90, 31, 46, 44, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 5, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 92, 27, 57, 66, 80, 24, 60, 50, 86, 56, 6, 8, 54, 82, 33, 28, 2, 45, 42, 40, 99, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 72, 67, 84, 29, 38, 43, 49, 68, 13, 37, 23, 17, 98, 35, 34]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[34, 61, 59, 76, 22, 97, 90, 31, 46, 44, 10, 14, 16, 73, 58, 20, 71, 37, 23, 17, 98, 35, 83, 9, 89, 5, 48, 74, 18, 52, 78, 93, 87, 15, 21, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 92, 27, 57, 66, 80, 24, 60, 50, 54, 82, 33, 28, 2, 45, 42, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 72, 67, 84, 29, 38, 43, 49, 1, 68, 86, 8, 6, 56, 19, 11, 26, 85, 34]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[37, 23, 17, 78, 21, 15, 87, 93, 69, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 60, 50, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 72, 67, 84, 29, 38, 43, 49, 1, 68, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 31, 46, 44, 10, 14, 16, 73, 58, 20, 71, 9, 89, 0, 62, 5, 48, 74, 18, 52, 83, 98, 35, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[25, 64, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 60, 50, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 72, 67, 84, 29, 38, 43, 49, 1, 68, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 52, 78, 21, 15, 87, 93, 69, 25]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[81, 12, 32, 75, 4, 36, 77, 95, 51, 47, 70, 40, 99, 13, 28, 2, 45, 42, 82, 54, 33, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 78, 52, 96, 55, 30, 79, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 68, 72, 67, 84, 29, 38, 43, 1, 63, 39, 53, 49, 94, 81]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[84, 29, 38, 43, 1, 39, 53, 63, 68, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 67, 84]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[32, 75, 12, 94, 81, 49, 72, 67, 84, 29, 38, 43, 1, 39, 53, 63, 68, 60, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 87, 15, 21, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 50, 86, 8, 6, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 50, 86, 8, 6, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 67, 84, 29, 38, 43, 1, 39, 53, 63, 68, 60, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 50, 86, 8, 6, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 60, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 98, 35, 37, 23, 17, 89, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 93, 21, 15, 87, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 92, 27, 57, 66, 80, 24, 50, 86, 8, 6, 54, 82, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 60, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[85, 26, 11, 6, 8, 56, 19, 86, 50, 60, 24, 80, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 66, 57, 92, 27, 0, 62, 5, 48, 74, 18, 3, 65, 64, 25, 69, 21, 15, 93, 87, 78, 52, 96, 55, 79, 30, 88, 41, 7, 91, 89, 9, 83, 23, 17, 37, 35, 98, 14, 16, 73, 58, 20, 71, 10, 44, 31, 46, 97, 90, 22, 59, 61, 76, 34, 82, 54, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 85]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[42, 45, 2, 28, 13, 70, 40, 99, 47, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 29, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 66, 57, 92, 27, 0, 62, 5, 48, 74, 18, 52, 78, 21, 15, 93, 87, 69, 64, 25, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 89, 9, 83, 23, 17, 37, 35, 98, 14, 16, 10, 73, 58, 20, 71, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 82, 54, 33, 19, 42]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 80, 24, 50, 60, 92, 27, 0, 62, 5, 48, 74, 18, 52, 78, 21, 15, 93, 87, 69, 64, 25, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 89, 9, 83, 23, 17, 37, 35, 98, 14, 16, 10, 73, 58, 20, 71, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 57, 66, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 77]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 8, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 0, 62, 5, 48, 74, 18, 52, 78, 21, 15, 93, 87, 69, 64, 25, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 89, 9, 83, 23, 17, 37, 35, 98, 14, 16, 10, 73, 58, 20, 71, 44, 90, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[64, 25, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 9, 83, 23, 17, 37, 35, 98, 20, 71, 73, 58, 14, 16, 10, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 60, 80, 24, 57, 66, 27, 92, 0, 62, 74, 18, 52, 78, 87, 15, 93, 21, 69, 64]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 60, 80, 24, 57, 66, 27, 92, 0, 62, 74, 18, 52, 78, 87, 15, 93, 21, 69, 64, 25, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 9, 83, 23, 17, 37, 35, 98, 71, 20, 73, 58, 14, 16, 10, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[37, 23, 17, 15, 93, 21, 69, 64, 25, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 9, 83, 71, 20, 73, 58, 14, 16, 10, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 39, 53, 1, 43, 63, 68, 60, 80, 24, 57, 66, 27, 92, 0, 62, 74, 18, 52, 78, 87, 98, 35, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 39, 53, 1, 43, 63, 68, 60, 24, 80, 66, 57, 92, 27, 0, 62, 74, 18, 52, 78, 87, 15, 21, 69, 64, 25, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 9, 17, 93, 37, 23, 98, 35, 83, 71, 20, 73, 58, 14, 16, 10, 44, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[17, 93, 15, 21, 69, 64, 25, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 9, 83, 71, 20, 73, 58, 14, 16, 10, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 39, 53, 1, 43, 63, 68, 60, 24, 80, 66, 57, 92, 27, 0, 62, 74, 18, 52, 78, 87, 98, 35, 37, 23, 17]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[17, 93, 15, 21, 69, 64, 25, 65, 3, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 9, 83, 71, 20, 73, 58, 14, 16, 10, 44, 90, 22, 97, 31, 46, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 38, 29, 95, 77, 51, 84, 67, 49, 72, 39, 53, 1, 43, 63, 68, 60, 24, 80, 66, 57, 92, 27, 0, 62, 74, 18, 52, 78, 87, 98, 35, 37, 23, 17]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[93, 21, 69, 87, 15, 52, 78, 83, 9, 98, 35, 71, 20, 73, 58, 14, 16, 10, 31, 46, 97, 90, 22, 44, 59, 61, 76, 34, 85, 26, 11, 6, 8, 56, 86, 50, 19, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 67, 84, 38, 29, 95, 77, 51, 43, 63, 68, 60, 24, 80, 66, 57, 92, 27, 79, 30, 88, 41, 7, 91, 89, 48, 5, 96, 55, 74, 18, 3, 64, 25, 65, 17, 23, 37, 62, 0, 72, 49, 1, 53, 39, 93]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 40, 70, 99, 47, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 71, 20, 73, 58, 14, 16, 10, 9, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 18, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[95, 77, 51, 36, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 18, 96, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[95, 77, 51, 36, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 18, 96, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 3, 64, 65, 25, 74, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 9, 46, 92, 27, 57, 50, 60, 24, 80, 66, 68, 63, 39, 53, 1, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 38, 29, 95, 77, 51, 36, 4, 47]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 52, 78, 17, 23, 37, 98, 35, 87, 15, 21, 93, 69, 25, 65, 64, 3, 74, 46, 92, 27, 57, 50, 60, 24, 80, 8, 56, 86, 6, 19, 11, 26, 85, 34, 61, 76, 33, 82, 54, 28, 45, 42, 2, 70, 40, 99, 13, 47, 95, 77, 51, 36, 4, 29, 38, 12, 75, 32, 94, 81, 49, 43, 72, 67, 84, 39, 53, 1, 68, 63, 66, 59]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[90, 44, 22, 97, 59, 61, 76, 34, 85, 26, 19, 11, 6, 8, 56, 86, 60, 80, 24, 82, 54, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 49, 43, 72, 67, 84, 50, 68, 63, 39, 53, 1, 66, 92, 27, 57, 46, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[76, 59, 61, 34, 85, 26, 19, 11, 6, 8, 56, 86, 50, 60, 80, 24, 82, 54, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 72, 67, 84, 49, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[26, 19, 11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 7, 91, 74, 18, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 0, 62, 46, 71, 83, 9, 89, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 26]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[3, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 52, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 48, 5, 0, 62, 87, 15, 21, 93, 69, 25, 65, 64, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 15, 21, 93, 87, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 5, 0, 62, 48, 89, 74, 18, 52, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[46, 71, 83, 9, 15, 21, 93, 87, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 89, 74, 18, 52, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 74, 18, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 74, 18, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 74, 18, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[11, 6, 8, 56, 86, 50, 60, 80, 24, 72, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 66, 57, 92, 27, 46, 71, 83, 9, 89, 74, 18, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 62, 48, 5, 78, 17, 37, 23, 98, 35, 20, 73, 58, 16, 14, 10, 31, 90, 44, 22, 97, 76, 59, 61, 34, 85, 26, 19, 54, 82, 33, 42, 2, 28, 13, 47, 99, 70, 40, 45, 11]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CADTSP mmas_cadtsp = new MMAS_CADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(38518.538124267456);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[131, 111, 28, 33, 54, 82, 148, 11, 19, 149, 61, 109, 76, 59, 31, 130, 27, 92, 57, 124, 50, 139, 134, 84, 67, 49, 115, 1, 143, 43, 113, 68, 72, 63, 39, 53, 137, 132, 30, 79, 121, 88, 41, 138, 55, 142, 118, 3, 65, 64, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 105, 136, 93, 103, 98, 101, 110, 37, 23, 17, 35, 126, 140, 58, 73, 20, 71, 112, 9, 83, 10, 14, 16, 44, 97, 22, 90, 108, 46, 62, 5, 48, 89, 18, 74, 96, 7, 91, 129, 0, 141, 104, 147, 66, 107, 60, 24, 80, 86, 144, 6, 116, 8, 56, 34, 85, 26, 119, 114, 42, 2, 45, 122, 135, 127, 99, 70, 40, 13, 47, 51, 95, 77, 4, 36, 146, 81, 125, 94, 75, 12, 32, 145, 102, 120, 29, 106, 38, 100, 131]");

        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 5, 41990.15227829513, 2166.8236595593203, 0.73, 33.85061224489796, 38234.87289216364);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 10, 41811.95201003226, 3111.045216125332, 0.5533333333333333, 26.325714285714287, 37364.58783592688);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 11, 41140.62597901002, 2699.929486122616, 0.5266666666666666, 24.97714285714286, 37364.58783592688);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 15, 40397.60480966081, 2850.0553086861896, 0.5, 20.431020408163267, 36552.88365802472);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 20, 41151.55125431687, 2801.1978372550607, 0.5066666666666667, 22.230204081632653, 36287.92786536175);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 21, 49065.39400413939, 2582.3751375224324, 0.4766666666666667, 51.49306122448979, 44012.88373079734);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 25, 44478.62350573698, 2550.001701980468, 0.5833333333333334, 36.65795918367347, 40292.02173844304);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 30, 43672.94217816588, 3234.31310650375, 0.5166666666666667, 32.81061224489796, 38521.955899441855);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 31, 50008.73683276537, 2975.9543340953737, 0.47333333333333333, 61.79673469387755, 43710.82843992012);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 35, 45192.18840863948, 2925.979750412094, 0.5766666666666667, 32.924897959183674, 40682.01068275978);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 40, 41133.21277971716, 3174.1053426661706, 0.6466666666666666, 29.488979591836735, 36670.60151375705);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 41, 49825.43661157398, 3307.6391256774946, 0.5633333333333334, 56.27591836734694, 43474.52686433351);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 45, 48137.444551926405, 2731.095215000724, 0.5633333333333334, 42.08816326530612, 43474.52686433351);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 50, 44511.84682582914, 2574.6368607457375, 0.5566666666666666, 34.06938775510204, 39516.52035609818);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 51, 47906.80374236106, 2585.2350454819593, 0.47333333333333333, 55.691428571428574, 42428.80783286213);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 55, 42766.789497045145, 2912.2790950163503, 0.6366666666666667, 32.46530612244898, 38096.92975523984);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 60, 39870.45158348532, 2379.4861406430155, 0.5433333333333333, 20.732244897959184, 36559.72318648312);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 61, 49490.85979560501, 3025.296277073545, 0.49666666666666665, 50.391020408163264, 43702.65758777752);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 65, 44387.176870767835, 2417.3657368479435, 0.5933333333333334, 34.3004081632653, 40803.70626279418);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 70, 45314.59417682008, 2816.8418434586906, 0.5033333333333333, 38.8930612244898, 38205.78621155785);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 71, 48926.794563107054, 2640.3329682011918, 0.57, 53.5730612244898, 43472.264071317004);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 75, 46640.902783774065, 3294.3126892531104, 0.52, 33.6334693877551, 41554.52409534645);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 80, 45106.98551804467, 3055.2890920940195, 0.6, 34.87428571428571, 39518.73077106261);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 81, 50652.82048357136, 3222.2616478721848, 0.5566666666666666, 55.06122448979592, 44379.81085248215);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 85, 46218.89361161303, 3589.9674334348906, 0.5566666666666666, 28.983673469387757, 41735.888188728415);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 90, 45364.69327252276, 2930.3684144356525, 0.5366666666666666, 21.858775510204083, 41222.25292682622);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 91, 49031.50295261192, 2936.4715531143333, 0.48, 52.878367346938774, 43229.91406117579);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 95, 42933.69286089437, 2384.2623071466533, 0.5966666666666667, 29.89387755102041, 39072.918460546905);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 100, 40298.249950002784, 2666.0552451287376, 0.5366666666666666, 21.58122448979592, 36732.472692187395);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 101, 47517.85817556155, 2255.516793486004, 0.52, 42.415510204081635, 42717.57928665525);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 105, 44645.322127121624, 2585.037415939147, 0.61, 25.688979591836734, 41001.26589404277);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 110, 44548.76377810756, 3073.005954940789, 0.6433333333333333, 35.733877551020406, 39504.78514759218);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 111, 48838.937329875036, 2921.555520874432, 0.5033333333333333, 56.07265306122449, 42601.63740550828);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 115, 44499.38958358205, 2604.038571772393, 0.5966666666666667, 32.96081632653061, 40564.10965613731);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 120, 43967.66400180725, 3240.3275066670762, 0.6, 32.93877551020408, 38774.57651455234);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 121, 48686.715340779556, 2385.026583659762, 0.4866666666666667, 48.74204081632653, 44716.010166372565);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 125, 46611.22020892118, 2517.188315809869, 0.5333333333333333, 29.55265306122449, 41639.099437748024);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 130, 46265.122748782516, 3586.525903117992, 0.51, 27.261224489795918, 41470.26911798092);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 131, 46774.49154263885, 3139.76819007657, 0.48333333333333334, 51.59102040816327, 40794.82525927102);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 135, 43183.11330636553, 2699.5766350930116, 0.5666666666666667, 25.61387755102041, 38825.2579226228);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 140, 43307.61953887294, 2819.753710662929, 0.5, 18.75755102040816, 37260.12364889996);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 141, 48665.032901217484, 3689.2258779161657, 0.49666666666666665, 50.416326530612245, 41303.56669853759);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 145, 45877.77615164645, 2984.448144592581, 0.5466666666666666, 30.624489795918368, 40580.1730257571);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 150, 45070.84709895054, 2548.6191875072186, 0.55, 33.2530612244898, 40501.70911155626);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 151, 49381.58203637627, 2624.481850828308, 0.48333333333333334, 57.34530612244898, 44701.460981273696);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 155, 45718.82035926042, 3548.5406756364237, 0.6566666666666666, 39.12897959183673, 38632.8491917294);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 160, 42562.97163765083, 2720.959597953525, 0.5533333333333333, 27.18938775510204, 38586.55322868475);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 161, 49756.37494564749, 3305.2858274985015, 0.48333333333333334, 44.99265306122449, 43207.59174882126);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 165, 44033.66259261717, 3058.931892698763, 0.6166666666666667, 31.372244897959185, 39416.37043990301);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 170, 43511.38020559253, 3076.755719307326, 0.49333333333333335, 28.52408163265306, 39191.01414823564);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 171, 48858.82519335594, 2371.177927025301, 0.5333333333333333, 50.31836734693878, 43090.01516519424);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 175, 43873.9387764962, 2665.0799982649837, 0.5866666666666667, 36.628571428571426, 37974.23965686334);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 180, 40662.21872147027, 3308.209065302066, 0.52, 29.63673469387755, 36655.365037810225);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 181, 48623.72871653471, 3565.7748196562325, 0.4866666666666667, 51.373877551020406, 43057.63226276178);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 185, 42350.57588577527, 2766.454753479612, 0.5433333333333333, 24.466938775510204, 38645.837086636486);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 190, 42519.19779057269, 2302.5913263966972, 0.5133333333333333, 23.86122448979592, 37141.37317024079);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 191, 50989.70650071961, 2792.925988545901, 0.49, 65.25387755102041, 45610.49080218885);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 195, 46577.52174103041, 2636.4549170760824, 0.7033333333333334, 44.06448979591837, 41901.25860439815);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 200, 44649.367185495605, 2877.1249779635373, 0.67, 36.304489795918364, 39303.03980234501);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 201, 50498.39740464378, 3413.530214666408, 0.6233333333333333, 60.38775510204081, 46186.04726995052);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 205, 45474.47308882665, 2328.302187060704, 0.65, 41.15591836734694, 40470.444514322444);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 210, 43672.77807256594, 2751.1795022330098, 0.55, 32.38775510204081, 37773.49936863099);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 211, 49902.011608098175, 3034.0718332373112, 0.5066666666666667, 62.758367346938776, 43300.628704052055);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 215, 44000.91167006456, 2166.3165932017173, 0.69, 36.66122448979592, 39538.55020999864);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 220, 44471.77103618226, 3183.1979203158025, 0.5133333333333333, 33.70367346938775, 39095.62841066798);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 221, 48958.889646105374, 3235.880911765678, 0.4766666666666667, 45.924897959183674, 42913.10996015422);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 225, 43672.539963520656, 2266.6163128459357, 0.57, 32.674285714285716, 39589.63768678759);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 230, 42916.81266893188, 3222.0430489729556, 0.55, 33.994285714285716, 37991.19967358937);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 231, 49096.95536126882, 2397.020410905169, 0.5333333333333333, 60.63428571428572, 44790.685948820996);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 235, 45186.000607662936, 3228.6736457702777, 0.6666666666666666, 38.85061224489796, 39817.345287266515);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 240, 43004.91503738247, 2513.750707845661, 0.49333333333333335, 29.97877551020408, 39675.2795276497);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 241, 50544.86391573257, 2986.6096865894156, 0.48, 52.23183673469388, 45581.775795413676);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 245, 47046.7547611085, 3437.5053310278454, 0.5533333333333333, 31.954285714285714, 41961.49757205276);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 250, 46291.68683030241, 3245.193199116457, 0.53, 27.52326530612245, 40878.62252860375);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 251, 47542.89967719852, 2786.3277284734204, 0.4866666666666667, 48.559183673469384, 41546.604852879515);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 255, 42034.715030021056, 3001.2856026185245, 0.6366666666666667, 29.58530612244898, 38484.59605561302);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 260, 41748.38709693667, 2402.5794525421697, 0.5733333333333334, 26.06612244897959, 37680.13731609429);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 261, 47776.675136307815, 2376.1060334187932, 0.5, 52.037551020408166, 43442.767799637426);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 265, 43774.33614445908, 2947.308598904485, 0.62, 30.28816326530612, 39099.00246933184);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 270, 43392.20311337654, 2577.7706797314113, 0.65, 28.78857142857143, 38350.49018074331);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 271, 49019.09975336761, 3087.396107740636, 0.47333333333333333, 45.75918367346939, 43245.06265684413);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 275, 43372.45284380901, 3065.316646463908, 0.6033333333333334, 28.42204081632653, 38715.848634704904);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 280, 41570.158165073226, 2837.345603894148, 0.5166666666666667, 29.515102040816327, 38052.439815063844);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 281, 50375.93393886759, 2699.6250333445473, 0.48333333333333334, 50.21061224489796, 45132.682413130344);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 285, 46889.133804011224, 3294.533295802134, 0.57, 31.802448979591837, 41996.1395683636);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 290, 44865.75677356436, 2652.3383346362957, 0.53, 33.69877551020408, 40559.66198591238);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 291, 48312.37401294954, 2778.226450549473, 0.5233333333333333, 55.757551020408165, 43032.108266477604);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 295, 44623.80884765538, 3424.938284424787, 0.6366666666666667, 34.6, 39089.402934863596);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 300, 43903.21054137115, 3147.823132769426, 0.5166666666666667, 26.51265306122449, 38646.12114517885);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 301, 49329.38567749827, 2696.4257245448334, 0.48, 55.98285714285714, 45277.31221015883);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 305, 44937.49834633645, 2205.5614556534733, 0.5633333333333334, 30.835102040816327, 40618.53565983916);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 310, 42828.02086600668, 2360.0165565640054, 0.5933333333333334, 27.36408163265306, 39140.497833202295);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 311, 50827.65112730828, 3583.700985155983, 0.4866666666666667, 58.440816326530616, 44946.005938924995);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 315, 46074.824826863354, 3191.4319134340712, 0.6366666666666667, 30.466122448979593, 40627.27965768645);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 320, 44347.402970591065, 2972.1344142058383, 0.5333333333333333, 22.358367346938774, 39500.81796591621);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 321, 49851.31743304142, 2371.494165373436, 0.5033333333333333, 59.08408163265306, 45501.68707380203);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 325, 45073.24891537614, 2594.3118137782967, 0.6633333333333333, 25.489795918367346, 41443.270622637574);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 330, 42426.13276012866, 2805.923126243415, 0.58, 21.495510204081633, 38640.93676336459);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 331, 48825.551057127836, 2645.9097987171263, 0.4866666666666667, 51.35918367346939, 43762.80129082471);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 335, 45251.24837339411, 3049.9874420256956, 0.6033333333333334, 26.580408163265307, 39350.62084737072);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 340, 43857.73256200253, 2715.3274433913, 0.49666666666666665, 25.103673469387754, 39053.8927835767);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 341, 49260.7533467824, 3318.157929799692, 0.4766666666666667, 54.61142857142857, 45154.41071062715);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 345, 43936.62512916204, 1979.3173165170092, 0.6666666666666666, 28.674285714285713, 39969.2945632944);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 350, 43247.110976609656, 2238.3072936182302, 0.5033333333333333, 26.40244897959184, 39013.71504305359);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 351, 49787.26078595521, 2699.475022840715, 0.47333333333333333, 56.09224489795918, 44559.29021096027);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 355, 45372.44079449337, 2908.803569838086, 0.6833333333333333, 32.924897959183674, 40113.402784837715);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 360, 45727.78451137321, 3044.697910222217, 0.5, 27.339591836734694, 39557.9790413026);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 361, 50684.93703746311, 2841.6531170392473, 0.51, 53.64489795918367, 45539.17368766596);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 365, 47634.255523873864, 2401.1106163376517, 0.57, 40.182040816326534, 42813.23393586748);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 370, 45827.74437679609, 2815.120266251076, 0.54, 32.77795918367347, 41103.619120196025);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 371, 49382.43191458242, 3114.080106519104, 0.4766666666666667, 60.200816326530614, 44547.92077426305);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 375, 47019.147948988575, 3898.4445278965495, 0.75, 42.564897959183675, 41324.48072231267);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 380, 45087.38519180096, 2605.60662063999, 0.51, 27.59265306122449, 40291.18185059617);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 381, 49673.356812216916, 2301.3648722429616, 0.4766666666666667, 51.01632653061225, 45724.90989506761);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 385, 44505.88753511522, 2628.251268919729, 0.6833333333333333, 34.60979591836735, 39284.22115665472);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 390, 42193.19826194682, 2605.1448198498233, 0.5033333333333333, 23.364897959183672, 38443.4110293546);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 391, 49038.36887674598, 3024.813522450317, 0.4666666666666667, 51.38367346938775, 44312.183421647096);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 395, 45216.44788606292, 2907.5495852682534, 0.6233333333333333, 33.94857142857143, 40830.906776233474);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 400, 45910.98454206466, 3220.090055161483, 0.5066666666666667, 26.506122448979593, 39990.56359550245);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 401, 51595.80298780627, 2995.0430707172536, 0.49, 53.96081632653061, 44299.12713475846);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 405, 44540.33242477218, 2584.5788613554014, 0.69, 32.537142857142854, 40231.96685524006);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 410, 44466.52251653304, 3266.0581149985996, 0.5266666666666666, 23.565714285714286, 39742.8664899722);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 411, 48561.91352266613, 3532.288837360089, 0.5266666666666666, 53.630204081632655, 43370.694284931975);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 415, 45523.89650608494, 2967.6155452364615, 0.64, 37.93795918367347, 39810.91889112856);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 420, 43872.003410155994, 2913.9355783495703, 0.5366666666666666, 26.323265306122448, 38506.47171668172);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 421, 51677.93219217205, 3426.4676732875264, 0.47333333333333333, 58.13142857142857, 43177.54565278044);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 425, 44758.61972905426, 2805.912964052585, 0.6433333333333333, 37.45224489795918, 41217.22937576384);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 430, 45538.9661246516, 2946.06577030388, 0.51, 36.840816326530614, 40473.86926228458);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 431, 48773.99337547943, 2573.1046139134264, 0.4866666666666667, 59.902857142857144, 43815.99236841873);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 435, 43959.29889231643, 2838.013635312313, 0.56, 24.332244897959185, 39427.998227635246);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 440, 43398.877389850684, 3308.648206109899, 0.5566666666666666, 25.44, 37846.430900771156);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 441, 50843.8757099832, 3131.9952148257107, 0.47, 60.86938775510204, 45010.58084935546);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 445, 45110.81353893051, 2674.085107195786, 0.66, 38.92734693877551, 40442.11017350777);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 450, 44020.06565165267, 2856.6938405602727, 0.5366666666666666, 27.616326530612245, 38482.54175827736);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 451, 48916.04465997785, 2801.9345774079184, 0.4766666666666667, 53.013061224489796, 44735.87149508785);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 455, 43761.009309414185, 1993.542481814984, 0.6933333333333334, 43.224489795918366, 40175.627197660724);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 460, 42807.8731532397, 2270.3871199053556, 0.5433333333333333, 31.15020408163265, 38286.86722167535);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 461, 49941.816363273814, 2534.5614220345665, 0.48333333333333334, 48.90857142857143, 44709.59301633973);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 465, 44120.41447024716, 2869.5997699665418, 0.6133333333333333, 30.846530612244898, 39752.449554683124);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 470, 44506.06959637166, 2826.978607965698, 0.6133333333333333, 25.238367346938777, 39752.449554683124);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 471, 50751.36760298484, 2947.066627464981, 0.44333333333333336, 64.4791836734694, 45012.01427574605);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 475, 43950.1040063806, 2831.409187188347, 0.77, 39.779591836734696, 39328.811281712384);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 480, 44846.01099715828, 3487.887463477668, 0.5433333333333333, 38.64326530612245, 38666.92276147363);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 481, 50630.663488518105, 2789.502550169039, 0.5, 59.33714285714286, 46032.26717782559);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 485, 46126.82284262661, 2946.730848329888, 0.7033333333333334, 34.51183673469388, 38986.155620950754);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 490, 45126.76258693227, 3241.0157390184786, 0.49666666666666665, 24.33061224489796, 38934.68368151562);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 491, 48917.11810837164, 3106.224625991172, 0.4866666666666667, 57.8334693877551, 44358.259350067245);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 495, 43958.03389298597, 3130.5689356634043, 0.64, 33.75265306122449, 39196.12920202112);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 500, 43241.55249543498, 3822.400035951516, 0.5166666666666667, 20.898775510204082, 38271.25330988304);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 501, 50883.51973601746, 2553.385238900275, 0.5, 51.304489795918364, 44723.72565043253);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 505, 45840.66638598972, 2419.956892717655, 0.6133333333333333, 38.691428571428574, 41502.69325797123);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 510, 44634.33060586813, 2462.6368184261432, 0.5033333333333333, 32.06775510204081, 39502.1135868452);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 511, 48628.48182281313, 2548.375223947118, 0.4866666666666667, 56.95836734693878, 44454.857836665426);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 515, 45840.750222691524, 3739.6840631393075, 0.5233333333333333, 31.790204081632652, 39291.456164833406);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 520, 44843.81230842669, 3482.7572697381875, 0.49666666666666665, 22.41469387755102, 38792.7503716601);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 521, 48687.3675676894, 1928.3070569308088, 0.51, 42.83102040816326, 44472.27995163462);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 525, 44317.896759018106, 2593.642857518719, 0.67, 30.866938775510203, 40148.76076912865);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 530, 43946.63220447093, 2923.9122377596727, 0.53, 27.431836734693878, 39493.20683412429);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 531, 47891.07309874792, 2372.1159165816475, 0.47333333333333333, 54.691428571428574, 41946.06103679208);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 535, 43965.89975209443, 2785.6894012030316, 0.5833333333333334, 31.185306122448978, 39117.434904354544);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 540, 42021.13194998443, 2455.848897498041, 0.5833333333333334, 24.444081632653063, 37711.214371308626);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 541, 50234.51599506911, 2844.1779021345787, 0.48, 45.60979591836735, 44548.20337951986);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 545, 45015.627906071, 2388.4753845222276, 0.61, 30.39673469387755, 41379.56494120044);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 550, 45387.14729833347, 3317.296982855477, 0.49, 28.15918367346939, 40431.72289026597);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 551, 49635.76766874156, 2152.0453302441256, 0.4766666666666667, 52.120816326530615, 45568.763652857546);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 555, 43106.64113675709, 2789.4081711700014, 0.5533333333333333, 28.354285714285716, 38897.6925203891);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 560, 43611.695810894395, 3694.051668034375, 0.5166666666666667, 30.32734693877551, 37937.8176308292);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 561, 47405.17635114255, 2647.7903108124706, 0.4866666666666667, 38.89224489795918, 43261.271057694816);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 565, 44619.76758911407, 3199.5385336331283, 0.66, 32.88979591836735, 39065.95555143211);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 570, 43427.18151367751, 3095.0424397181196, 0.51, 24.2, 38679.454268307934);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 571, 46135.561565019045, 3490.6387531006812, 0.48, 42.89632653061224, 41613.15106719716);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 575, 42152.26920411431, 2192.3473287508355, 0.6833333333333333, 31.50938775510204, 38884.10873283569);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 580, 42080.46911847534, 2920.860284751434, 0.5066666666666667, 26.226938775510202, 37289.978779431694);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 581, 48393.84626906281, 2925.4077026469754, 0.47333333333333333, 51.034285714285716, 43265.076859254325);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 585, 45955.756362210355, 3389.470968036404, 0.64, 36.89224489795918, 40504.968168281564);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 590, 43585.62052271615, 2252.4039790542356, 0.5233333333333333, 28.63673469387755, 39038.48066958613);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 591, 50003.26509850349, 3212.689155842649, 0.48333333333333334, 52.48408163265306, 42431.416427124765);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 595, 44696.91431101541, 2395.0848201920458, 0.5433333333333333, 32.50448979591837, 40195.505341501215);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 600, 43571.45885388198, 3106.0667382549173, 0.54, 34.6865306122449, 38627.28429386976);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 601, 49374.686346876246, 3114.023703032943, 0.5233333333333333, 53.49795918367347, 44227.86782787797);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 605, 46135.90563568609, 2303.90375171679, 0.69, 38.44, 42842.812245253444);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 610, 45994.498135577, 2488.643722120248, 0.5033333333333333, 29.383673469387755, 41853.912966958145);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 611, 48765.82441701791, 3280.5718225638184, 0.4766666666666667, 56.30285714285714, 44111.328811616535);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 615, 43120.37762458865, 2130.0536033546505, 0.62, 34.85551020408163, 39662.75902670374);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 620, 41855.379941498184, 1955.8349656077507, 0.51, 28.28816326530612, 37969.153009192894);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 621, 47707.3797889737, 2552.4605320238234, 0.48, 51.19183673469388, 43721.53745971918);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 625, 45462.91865122096, 2698.82135366821, 0.5633333333333334, 33.2530612244898, 40109.05853881413);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 630, 43878.78176129853, 2537.936702743141, 0.5066666666666667, 27.102040816326532, 39241.42904062667);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 631, 48422.48528217671, 2731.879700082823, 0.48, 54.9134693877551, 42912.82156026455);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 635, 43343.5382295036, 2369.3997112699476, 0.57, 28.378775510204083, 40282.87986180124);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 640, 43444.21142015254, 3963.83441947649, 0.5066666666666667, 22.96734693877551, 39062.52664132728);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 641, 50219.366763745726, 2776.2909052243385, 0.4666666666666667, 62.7665306122449, 43991.517252203485);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 645, 45893.663975594194, 3432.8456022018145, 0.5766666666666667, 34.29551020408163, 40540.57485734349);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 650, 44856.50125089057, 2825.2738287156044, 0.5133333333333333, 32.51183673469388, 39967.18878445561);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 651, 47784.15475347632, 2466.2387238120723, 0.53, 54.56734693877551, 42448.03118758146);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 655, 45921.361178755666, 2321.576533060603, 0.53, 35.91265306122449, 41605.64446848826);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 660, 44903.182092378345, 2128.2183061887526, 0.5166666666666667, 31.540408163265305, 40506.228846084734);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 661, 48139.80080040377, 3035.699542487488, 0.48, 52.54775510204082, 42092.08401944673);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 665, 42672.71629984824, 2627.05640280868, 0.5966666666666667, 29.17795918367347, 39149.329879865145);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 670, 43105.9442181434, 3535.257319505994, 0.5433333333333333, 24.913469387755104, 38145.26465482904);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 671, 49043.63479958528, 2313.7704675307505, 0.5733333333333334, 53.608163265306125, 45883.42467222821);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 675, 45305.55019364842, 2382.36171170894, 0.6733333333333333, 38.81387755102041, 39410.78179333703);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 680, 44085.21042024899, 2752.5667495981143, 0.5633333333333334, 35.76244897959184, 38493.12008317903);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 681, 50613.8863955999, 3371.869181856259, 0.5566666666666666, 61.00408163265306, 44965.65601829533);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 685, 46042.43547403341, 2659.8059275114565, 0.5566666666666666, 32.90938775510204, 40676.06886990011);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 690, 45190.041308984284, 3257.716774950605, 0.5033333333333333, 25.036734693877552, 39123.264712724544);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 691, 49338.12568864925, 3252.0969696490765, 0.49, 51.689795918367345, 44050.04271731828);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 695, 41602.971924483194, 3213.216864124717, 0.67, 18.808163265306124, 36989.0945176132);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 700, 41424.18225851942, 3351.135995762501, 0.5233333333333333, 15.804897959183673, 36225.69727650403);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 701, 48067.956731427286, 2242.6305635015124, 0.5033333333333333, 44.04, 43215.56207647987);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 705, 45444.25357809241, 2995.2460595495404, 0.6833333333333333, 36.66448979591837, 40398.259723413445);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 710, 43348.931235792516, 2536.706355137617, 0.5033333333333333, 31.08734693877551, 38696.746777049266);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 711, 50885.81110317053, 2885.807289219781, 0.4766666666666667, 60.49061224489796, 45246.823061283154);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 715, 46908.4346935748, 3444.155347423473, 0.68, 37.41142857142857, 40776.331173998944);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 720, 46672.83051122978, 3194.8199346964166, 0.5033333333333333, 29.456326530612245, 40101.18450911707);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 721, 50709.73308690139, 3329.3319312956864, 0.47, 53.715102040816326, 44506.648469410764);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 725, 47152.017462831034, 2891.4813023446436, 0.68, 40.40081632653061, 43002.985596100414);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 730, 45097.11912042301, 2402.884155797946, 0.5, 31.874285714285715, 41333.013166483914);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 731, 49640.56307527519, 3244.216837241814, 0.4766666666666667, 65.81795918367347, 43342.9348303985);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 735, 43060.50735900023, 2320.7366059285555, 0.6233333333333333, 33.63836734693878, 39360.46655020067);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 740, 41580.619578384205, 2752.870391007662, 0.54, 32.034285714285716, 36943.142686342246);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 741, 47662.04134372222, 2061.7881760626783, 0.5, 48.47102040816326, 43663.03889563121);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 745, 46431.45781294312, 2896.1271078514474, 0.55, 42.541224489795916, 41446.07481636139);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 750, 45378.43848001082, 3091.2876943828323, 0.5533333333333333, 36.38040816326531, 39054.13945549991);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 751, 49366.03030088155, 3327.9596733562694, 0.53, 49.2465306122449, 43020.38694565367);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 755, 46670.082012771294, 2642.575258439759, 0.5433333333333333, 39.715102040816326, 41876.80892106969);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 760, 46065.85270446097, 2867.661926021255, 0.5433333333333333, 36.39836734693878, 41876.80892106969);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 761, 49861.00812191626, 2218.114371930186, 0.47333333333333333, 48.263673469387754, 45262.68714706535);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 765, 46236.05476018405, 2670.77838033632, 0.6033333333333334, 36.93632653061224, 41796.946114058905);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 770, 45228.82808987072, 3315.47665166598, 0.5133333333333333, 23.867755102040817, 40369.000145871774);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 771, 48620.02281651377, 2695.0055573662585, 0.47, 46.94938775510204, 43308.647927085345);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 775, 43400.1349008585, 3256.8936090195307, 0.69, 36.354285714285716, 38995.16408624494);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 780, 41801.46065889414, 2722.056617590903, 0.57, 23.568163265306122, 37821.189993316155);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 781, 48225.851450881266, 2291.715477474901, 0.5266666666666666, 50.284897959183674, 45054.29180067138);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 785, 46165.53453658133, 3006.4016843309464, 0.6166666666666667, 33.02122448979592, 40386.60130397035);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 790, 42261.5439062948, 3340.1671153440243, 0.5533333333333333, 22.497142857142858, 37749.40174128931);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 791, 48751.50661620297, 3678.3047057173176, 0.51, 48.84571428571429, 44398.38781884307);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 795, 45359.232395459076, 3046.023396628176, 0.6366666666666667, 45.82122448979592, 41071.05378326296);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 800, 43439.74192130526, 3166.7838028487986, 0.6133333333333333, 36.80897959183673, 39357.15598745868);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 801, 49180.186181732824, 3840.4684180012505, 0.55, 60.142857142857146, 41982.68544918375);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 805, 44727.0032799812, 3065.781908000247, 0.54, 26.73469387755102, 39008.21750628467);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 810, 43814.959145225905, 3318.53653400226, 0.55, 26.85795918367347, 38115.28800296866);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 811, 47927.79696941299, 2911.1058958606723, 0.4866666666666667, 45.38040816326531, 43334.469538984034);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 815, 43951.689110464715, 2866.6697772335506, 0.5666666666666667, 21.28, 39729.72773642514);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 820, 43859.500300764004, 2229.3736329794733, 0.5, 25.037551020408163, 38965.324559626206);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 821, 50248.75356283687, 3090.096123172938, 0.4666666666666667, 56.623673469387754, 44570.56689597059);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 825, 46358.71693815853, 2690.75052735691, 0.57, 33.244897959183675, 40648.732304688674);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 830, 43856.748764417505, 2512.6036850460537, 0.5166666666666667, 30.344489795918367, 39281.58627671085);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 831, 51222.56858552411, 3659.2385570580013, 0.49, 48.40734693877551, 45492.84409807546);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 835, 44141.80099727677, 1973.497319605364, 0.7066666666666667, 33.9134693877551, 40038.819469177724);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 840, 43398.10276353403, 2776.390513433625, 0.5, 24.98857142857143, 38517.72817438986);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 841, 50063.633550861094, 3178.761244694912, 0.4666666666666667, 55.49469387755102, 43569.398890946024);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 845, 47562.64799832662, 3187.4283667942636, 0.51, 41.5730612244898, 42295.048097707186);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 850, 46482.26100529447, 3170.928808114222, 0.49333333333333335, 35.480816326530615, 41105.749716409366);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 851, 48827.31357239017, 3213.5159080314697, 0.55, 63.13142857142857, 43293.17221313458);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 855, 42497.313007626384, 3032.5795841127883, 0.6366666666666667, 32.30367346938775, 37678.30617956214);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 860, 41340.73395087666, 2656.0654455219023, 0.5266666666666666, 20.700408163265305, 36429.91184935947);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 861, 47838.61819790866, 2658.449152694839, 0.4866666666666667, 52.758367346938776, 43614.676975907496);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 865, 44901.77565651504, 3344.349476444174, 0.5366666666666666, 30.444897959183674, 39903.967958904825);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 870, 43254.56633923988, 2778.099304919957, 0.54, 33.3004081632653, 38122.869881186685);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 871, 50522.13277767601, 3235.089824943112, 0.5266666666666666, 60.756734693877554, 44817.329400084025);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 875, 46690.41249963569, 2891.4793741015774, 0.5833333333333334, 35.65387755102041, 40347.252227915495);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 880, 44211.16156168312, 3110.5896958550616, 0.57, 30.635102040816328, 39723.401391210806);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 881, 49034.38023416559, 2813.2041533353854, 0.51, 52.25632653061224, 43073.97937983407);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 885, 44071.832722423685, 2414.4635338289377, 0.5433333333333333, 34.95673469387755, 40310.36873698384);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 890, 44168.613378710055, 2900.9519066972007, 0.58, 28.57061224489796, 39353.423236646275);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 891, 48733.99264349027, 2298.4191180243697, 0.4533333333333333, 60.33387755102041, 44739.67646246502);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 895, 44014.829327278036, 2001.36750841545, 0.6333333333333333, 32.83755102040816, 40286.25604944674);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 900, 40729.97463051537, 2468.0936191397736, 0.53, 20.433469387755103, 36919.32103123439);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 901, 48841.16488115147, 2542.8390799793774, 0.5066666666666667, 46.4, 43938.1297925247);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 905, 45297.70819561443, 2629.3267023081785, 0.7166666666666667, 37.36, 40131.53840103808);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 910, 46417.38314428564, 2761.2338688937507, 0.7166666666666667, 35.07020408163265, 40131.53840103808);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 911, 49366.86409997585, 2920.9757023821, 0.4766666666666667, 55.94938775510204, 44324.316656633295);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 915, 44786.238709193, 2774.4734513551734, 0.6533333333333333, 36.40816326530612, 39492.705552673324);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 920, 44547.27660714552, 2550.8343099285166, 0.6533333333333333, 26.889795918367348, 39492.705552673324);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 921, 50189.71946260464, 2505.300203830174, 0.4766666666666667, 51.056326530612246, 44561.94734281454);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 925, 46277.95689486359, 1984.9698501158707, 0.6533333333333333, 38.61387755102041, 41276.9589283171);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 930, 44469.05431934146, 3068.5588635703934, 0.49, 26.666122448979593, 39564.627554878454);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 931, 46755.45295547444, 2800.9430564396857, 0.47333333333333333, 55.86693877551021, 42204.81750512359);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 935, 44485.61604544674, 3088.8244114961453, 0.6866666666666666, 36.797551020408164, 40213.204826107474);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 940, 43639.137110198906, 3536.5400067852524, 0.5733333333333334, 27.88, 38917.98428923626);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 941, 48346.55413862157, 2317.4105002841534, 0.5933333333333334, 53.36734693877551, 44081.44470223616);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 945, 45717.45022917622, 2921.251071712185, 0.55, 41.19020408163265, 40000.99149719185);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 950, 42456.75295658336, 2813.2197141050033, 0.5433333333333333, 26.255510204081634, 37317.36922470462);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 951, 49000.29635396813, 3054.9869383898204, 0.51, 55.36163265306122, 42912.39100043817);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 955, 45214.191071529276, 2397.4419546470667, 0.5633333333333334, 32.2530612244898, 41358.88010181326);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 960, 45995.07219649505, 2715.205372036907, 0.52, 33.480816326530615, 41112.45701487648);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 961, 50564.94178743827, 2535.830108230551, 0.48333333333333334, 55.496326530612244, 44418.82527311151);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 965, 46885.943665723775, 2131.2282222340114, 0.7, 34.13224489795918, 42252.52915603112);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 970, 45251.181808755755, 2348.1098968213328, 0.53, 31.535510204081632, 41090.62948018299);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 971, 48111.13044276842, 1848.2733465118547, 0.5766666666666667, 66.35428571428571, 43881.542786906124);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 975, 44572.09603605527, 2106.3391366883016, 0.54, 25.22530612244898, 39875.443843271445);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 980, 43226.119307372624, 2680.0311517110817, 0.49666666666666665, 22.064489795918366, 39007.84146929997);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 981, 49674.946736383354, 2825.2428762921572, 0.48333333333333334, 51.391836734693875, 42326.91939675354);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 985, 43731.01466899624, 3248.4366198556254, 0.5466666666666666, 23.93387755102041, 38427.375378656616);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 990, 42042.3213459534, 3522.643737106283, 0.5133333333333333, 20.39673469387755, 37671.43328770106);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 991, 48935.47061374124, 3337.04000578041, 0.49, 57.16571428571429, 43789.36066523801);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 995, 45294.33171140383, 2540.762290202159, 0.58, 35.49387755102041, 39707.105872242675);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1000, 43368.016380333844, 3271.97122943731, 0.5333333333333333, 25.70530612244898, 38518.538124267456);

        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[149, 56, 11, 26, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 140, 73, 20, 71, 126, 58, 35, 103, 37, 101, 98, 110, 23, 17, 136, 87, 15, 21, 69, 93, 52, 133, 78, 105, 89, 48, 5, 91, 7, 121, 41, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 9, 83, 46, 44, 14, 16, 112, 62, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 50, 124, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 68, 72, 67, 113, 63, 39, 53, 1, 143, 137, 132, 107, 86, 144, 8, 116, 6, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 2, 45, 28, 127, 33, 34, 19, 149]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[19, 149, 34, 85, 56, 8, 116, 6, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 113, 143, 1, 53, 39, 63, 43, 49, 84, 134, 139, 33, 82, 54, 148, 11, 26, 119, 114, 42, 135, 13, 99, 47, 111, 131, 28, 45, 2, 127, 70, 40, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 57, 27, 92, 97, 22, 90, 108, 31, 44, 59, 76, 109, 61, 130, 141, 147, 66, 104, 107, 137, 132, 121, 41, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 101, 98, 110, 103, 35, 58, 140, 73, 20, 71, 126, 14, 16, 10, 83, 9, 89, 48, 5, 91, 7, 0, 129, 112, 62, 46, 122, 19]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[82, 54, 148, 33, 45, 2, 42, 122, 127, 99, 47, 51, 77, 95, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 13, 135, 70, 40, 114, 119, 11, 19, 149, 61, 59, 109, 76, 85, 26, 34, 116, 6, 56, 86, 144, 8, 139, 134, 84, 67, 72, 113, 143, 63, 68, 80, 24, 124, 50, 60, 57, 107, 66, 141, 147, 104, 27, 92, 130, 22, 97, 90, 108, 31, 44, 10, 14, 16, 112, 71, 73, 58, 140, 20, 126, 35, 37, 101, 98, 110, 103, 23, 17, 136, 87, 15, 21, 69, 93, 133, 52, 78, 105, 83, 9, 5, 62, 89, 18, 74, 96, 3, 64, 65, 128, 123, 25, 117, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0, 46, 48, 43, 49, 115, 81, 125, 94, 145, 102, 32, 12, 75, 39, 53, 1, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[78, 105, 52, 133, 15, 87, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 142, 55, 138, 121, 79, 30, 88, 41, 7, 91, 5, 48, 112, 71, 73, 20, 140, 58, 9, 83, 37, 23, 17, 136, 93, 110, 103, 101, 98, 35, 126, 14, 16, 10, 31, 44, 90, 108, 97, 22, 59, 109, 76, 61, 149, 85, 26, 34, 19, 56, 8, 139, 134, 116, 6, 11, 54, 82, 148, 33, 45, 2, 42, 122, 127, 114, 119, 144, 86, 124, 50, 60, 80, 24, 68, 104, 141, 147, 66, 63, 39, 53, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 146, 36, 4, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 13, 135, 70, 40, 99, 47, 51, 84, 67, 72, 113, 143, 1, 137, 132, 107, 57, 27, 92, 130, 129, 0, 46, 62, 18, 74, 96, 89, 78]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[74, 18, 52, 133, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 121, 79, 30, 88, 41, 7, 91, 5, 48, 62, 0, 129, 92, 57, 60, 144, 86, 124, 50, 76, 109, 59, 22, 97, 90, 108, 130, 27, 66, 107, 147, 141, 104, 24, 80, 84, 67, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 122, 127, 135, 13, 70, 40, 99, 47, 77, 51, 95, 72, 113, 143, 1, 68, 63, 39, 53, 43, 139, 134, 33, 54, 82, 148, 11, 19, 56, 6, 8, 116, 114, 119, 26, 34, 149, 61, 85, 44, 31, 10, 16, 14, 58, 140, 73, 20, 71, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 89, 105, 78, 83, 9, 112, 126, 46, 138, 55, 142, 96, 137, 132, 74]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[143, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 33, 82, 54, 148, 26, 85, 11, 34, 149, 61, 59, 76, 109, 19, 8, 116, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 53, 1, 43, 113, 67, 84, 134, 139, 45, 2, 42, 122, 127, 135, 13, 99, 47, 77, 51, 95, 40, 70, 119, 114, 22, 97, 90, 108, 31, 10, 16, 14, 112, 62, 0, 129, 130, 44, 71, 20, 73, 58, 140, 126, 46, 91, 5, 48, 9, 83, 23, 17, 37, 103, 35, 110, 101, 98, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 138, 55, 142, 96, 89, 18, 52, 133, 105, 74, 7, 41, 121, 79, 30, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 137, 63, 39, 143]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[92, 130, 0, 129, 91, 74, 7, 48, 5, 62, 89, 112, 71, 20, 73, 58, 140, 126, 35, 23, 17, 37, 103, 98, 101, 110, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 96, 55, 79, 30, 88, 41, 121, 138, 147, 141, 104, 66, 27, 57, 107, 60, 124, 50, 85, 11, 6, 56, 86, 144, 8, 116, 148, 33, 45, 2, 127, 135, 13, 99, 70, 40, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 42, 122, 114, 119, 54, 82, 134, 139, 24, 80, 63, 68, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 84, 67, 72, 19, 149, 26, 34, 61, 109, 76, 59, 90, 22, 97, 108, 31, 44, 16, 14, 10, 46, 9, 83, 78, 105, 136, 52, 133, 18, 132, 137, 92]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[57, 107, 141, 104, 66, 147, 0, 129, 74, 18, 133, 52, 15, 87, 136, 78, 105, 89, 112, 71, 20, 73, 140, 58, 126, 35, 23, 17, 37, 103, 98, 101, 110, 93, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 79, 30, 88, 41, 121, 138, 96, 62, 5, 48, 7, 91, 27, 92, 130, 46, 90, 108, 31, 44, 22, 97, 10, 14, 16, 83, 9, 132, 137, 63, 39, 53, 143, 1, 113, 43, 49, 72, 67, 84, 38, 100, 29, 120, 106, 111, 28, 45, 2, 42, 122, 127, 135, 40, 70, 99, 47, 131, 13, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 125, 94, 115, 81, 68, 60, 144, 86, 124, 50, 8, 116, 6, 56, 19, 11, 85, 26, 34, 149, 61, 109, 76, 59, 54, 82, 148, 33, 114, 119, 134, 139, 24, 80, 57]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[135, 29, 120, 106, 111, 28, 45, 2, 42, 122, 127, 148, 54, 82, 33, 114, 119, 11, 85, 26, 34, 149, 61, 59, 76, 109, 19, 6, 56, 8, 116, 139, 24, 80, 68, 72, 67, 84, 38, 100, 77, 51, 4, 36, 146, 115, 75, 32, 12, 145, 102, 94, 125, 81, 43, 49, 113, 63, 39, 53, 143, 1, 107, 66, 147, 141, 104, 129, 0, 5, 48, 62, 91, 7, 41, 121, 138, 55, 79, 30, 88, 137, 132, 142, 96, 74, 18, 133, 52, 64, 65, 128, 123, 25, 117, 3, 118, 89, 112, 126, 9, 83, 35, 23, 17, 37, 103, 98, 101, 110, 93, 21, 69, 15, 87, 136, 78, 105, 71, 20, 73, 58, 140, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 130, 92, 27, 57, 60, 50, 124, 86, 144, 134, 131, 13, 70, 40, 99, 47, 95, 135]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[89, 48, 5, 74, 3, 64, 65, 128, 123, 25, 117, 118, 138, 55, 142, 96, 18, 133, 52, 87, 15, 21, 69, 93, 136, 78, 105, 9, 83, 35, 23, 17, 37, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 112, 62, 0, 129, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 60, 24, 80, 68, 107, 56, 8, 116, 6, 85, 26, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 130, 92, 27, 86, 144, 82, 54, 148, 11, 19, 119, 114, 42, 122, 127, 135, 13, 28, 131, 111, 2, 45, 33, 134, 84, 67, 72, 113, 143, 1, 43, 49, 115, 75, 32, 12, 145, 102, 94, 125, 81, 146, 38, 100, 106, 29, 120, 4, 36, 77, 51, 95, 47, 99, 70, 40, 139, 124, 50, 39, 53, 63, 46, 89]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[68, 72, 113, 143, 1, 53, 63, 39, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 28, 131, 42, 122, 2, 135, 13, 47, 99, 70, 40, 45, 82, 54, 148, 33, 8, 56, 6, 116, 139, 134, 144, 86, 124, 50, 60, 24, 80, 107, 57, 66, 141, 147, 7, 41, 121, 79, 30, 88, 137, 132, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 136, 78, 105, 9, 83, 35, 23, 37, 103, 110, 101, 98, 112, 62, 0, 129, 104, 27, 92, 130, 46, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 71, 73, 140, 58, 126, 48, 5, 74, 18, 133, 52, 15, 87, 21, 17, 89, 91, 109, 76, 61, 59, 85, 149, 19, 11, 26, 34, 114, 119, 127, 51, 77, 95, 67, 84, 68]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 146, 38, 120, 29, 106, 111, 28, 45, 131, 135, 127, 42, 122, 2, 70, 40, 13, 47, 99, 77, 95, 51, 84, 80, 24, 60, 50, 124, 144, 86, 56, 6, 116, 8, 148, 33, 54, 82, 85, 26, 34, 149, 61, 76, 109, 59, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 7, 91, 74, 18, 133, 52, 93, 87, 15, 21, 69, 3, 64, 65, 128, 123, 25, 117, 55, 142, 96, 118, 30, 88, 121, 79, 138, 41, 132, 137, 68, 104, 66, 141, 147, 92, 27, 130, 46, 9, 83, 112, 71, 107, 57, 139, 134, 11, 19, 114, 119, 100, 67]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[127, 42, 45, 2, 135, 13, 47, 99, 70, 40, 28, 131, 111, 29, 120, 106, 100, 51, 95, 77, 4, 36, 146, 32, 75, 12, 145, 102, 94, 81, 115, 43, 143, 72, 67, 84, 80, 24, 60, 50, 124, 144, 86, 56, 6, 116, 8, 148, 11, 19, 85, 26, 34, 149, 61, 76, 109, 59, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 140, 58, 126, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 91, 74, 18, 133, 52, 93, 87, 15, 21, 69, 3, 64, 65, 128, 123, 25, 117, 55, 142, 96, 118, 138, 79, 30, 88, 121, 41, 132, 137, 104, 141, 147, 129, 0, 7, 92, 27, 57, 107, 66, 130, 112, 71, 20, 9, 83, 46, 68, 39, 53, 63, 1, 49, 113, 125, 38, 134, 82, 54, 139, 33, 119, 114, 122, 127]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 42, 127, 119, 114, 122, 54, 82, 33, 134, 139, 6, 116, 8, 56, 86, 144, 80, 24, 60, 124, 50, 57, 107, 66, 104, 141, 147, 137, 132, 91, 74, 18, 133, 52, 93, 87, 15, 21, 69, 3, 64, 65, 128, 25, 123, 117, 55, 142, 96, 118, 138, 79, 30, 88, 121, 41, 7, 0, 129, 130, 92, 27, 31, 44, 16, 14, 10, 73, 140, 58, 126, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 112, 71, 20, 9, 83, 46, 90, 108, 97, 22, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 148, 84, 67, 72, 39, 53, 63, 68, 49, 113, 143, 1, 115, 125, 81, 146, 36, 4, 51, 77, 95, 102, 32, 75, 12, 145, 94, 43, 38]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[27, 92, 57, 107, 66, 141, 147, 104, 129, 0, 91, 62, 48, 5, 89, 105, 52, 78, 136, 87, 15, 21, 69, 3, 64, 65, 128, 25, 123, 117, 93, 133, 18, 74, 96, 118, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 7, 130, 46, 90, 97, 22, 76, 109, 59, 61, 85, 26, 34, 149, 19, 11, 148, 82, 54, 56, 86, 144, 124, 50, 60, 24, 80, 134, 139, 116, 8, 6, 33, 45, 2, 42, 127, 122, 135, 13, 131, 28, 111, 106, 29, 120, 100, 38, 77, 95, 102, 32, 75, 12, 145, 94, 125, 81, 146, 36, 4, 51, 47, 99, 70, 40, 114, 119, 84, 67, 49, 72, 68, 1, 143, 113, 43, 115, 63, 39, 53, 112, 71, 126, 35, 23, 37, 103, 110, 101, 98, 17, 73, 140, 58, 20, 9, 83, 10, 14, 16, 44, 108, 31, 27]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[76, 109, 59, 61, 149, 85, 26, 34, 19, 56, 6, 116, 8, 139, 134, 33, 82, 54, 148, 11, 119, 114, 122, 135, 2, 42, 127, 45, 131, 29, 120, 100, 106, 38, 77, 95, 51, 4, 36, 145, 102, 32, 12, 75, 146, 81, 125, 94, 115, 1, 143, 113, 43, 49, 72, 68, 39, 53, 63, 84, 67, 80, 24, 124, 50, 86, 144, 60, 57, 107, 66, 104, 141, 147, 92, 27, 130, 46, 112, 89, 48, 5, 62, 0, 129, 91, 121, 41, 88, 79, 30, 137, 132, 7, 138, 142, 55, 96, 118, 3, 64, 65, 128, 25, 123, 117, 18, 74, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 23, 37, 103, 110, 101, 98, 83, 9, 17, 126, 35, 73, 140, 58, 20, 71, 10, 14, 16, 31, 108, 44, 22, 90, 97, 28, 111, 47, 99, 70, 40, 13, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 138, 142, 55, 96, 118, 3, 64, 65, 128, 25, 123, 117, 93, 69, 21, 15, 87, 136, 78, 105, 52, 133, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 112, 10, 14, 16, 44, 31, 108, 90, 97, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 146, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 28, 111, 47, 99, 70, 40, 13, 135, 2, 42, 127, 122, 45, 33, 54, 82, 114, 119, 148, 76, 109, 57, 107, 66, 104, 141, 147, 92, 27, 130, 46, 60, 24, 80, 50, 124, 86, 144, 131, 102, 32, 145, 12, 75, 1, 43, 113, 143, 63, 39, 53, 68, 137]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[101, 98, 35, 103, 110, 37, 23, 17, 136, 78, 105, 52, 133, 69, 21, 15, 87, 93, 83, 9, 89, 48, 5, 62, 0, 129, 91, 7, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 79, 88, 121, 41, 30, 137, 132, 147, 104, 141, 66, 57, 107, 60, 24, 80, 68, 1, 143, 63, 39, 53, 43, 113, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 29, 120, 111, 131, 28, 33, 82, 54, 148, 114, 119, 122, 45, 2, 42, 127, 135, 13, 99, 47, 100, 106, 38, 146, 67, 84, 134, 139, 50, 124, 144, 86, 116, 8, 6, 19, 11, 26, 34, 85, 149, 61, 59, 109, 76, 108, 90, 97, 22, 44, 31, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 92, 27, 56, 49, 72, 70, 40, 74, 18, 101]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[80, 24, 124, 50, 86, 144, 6, 116, 8, 56, 11, 26, 34, 85, 149, 61, 59, 109, 76, 130, 92, 27, 129, 0, 91, 74, 18, 105, 136, 93, 15, 87, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 96, 55, 79, 30, 137, 132, 147, 66, 57, 107, 60, 104, 141, 41, 121, 88, 7, 138, 5, 62, 46, 112, 71, 35, 37, 103, 23, 78, 17, 48, 89, 9, 83, 52, 133, 101, 98, 110, 140, 58, 73, 20, 126, 14, 16, 10, 108, 90, 97, 22, 44, 31, 148, 82, 54, 139, 134, 84, 67, 72, 49, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 131, 111, 28, 33, 45, 122, 42, 127, 135, 2, 13, 47, 99, 70, 40, 114, 119, 19, 68, 80]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[79, 30, 121, 88, 132, 137, 41, 7, 91, 74, 18, 133, 52, 15, 87, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 96, 48, 5, 62, 105, 89, 9, 112, 71, 35, 37, 103, 110, 101, 98, 23, 17, 136, 93, 78, 83, 126, 58, 140, 73, 20, 10, 14, 16, 31, 90, 108, 97, 22, 44, 109, 76, 61, 149, 19, 56, 11, 85, 26, 34, 148, 54, 82, 33, 111, 28, 45, 13, 47, 99, 70, 40, 95, 51, 77, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 49, 113, 43, 143, 63, 39, 53, 72, 68, 80, 24, 60, 57, 107, 130, 27, 92, 147, 66, 141, 104, 129, 0, 46, 59, 8, 6, 116, 134, 84, 67, 38, 100, 120, 29, 106, 146, 115, 1, 124, 50, 144, 86, 139, 114, 119, 122, 135, 2, 131, 42, 127, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[80, 24, 60, 50, 124, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 120, 29, 38, 100, 106, 131, 28, 45, 2, 135, 127, 42, 122, 33, 54, 148, 11, 85, 26, 34, 149, 61, 19, 56, 8, 6, 116, 114, 119, 82, 111, 70, 40, 99, 47, 13, 86, 144, 76, 109, 59, 97, 22, 90, 108, 31, 44, 10, 58, 140, 126, 73, 20, 71, 83, 9, 112, 62, 48, 5, 91, 74, 18, 133, 52, 78, 136, 93, 15, 87, 21, 69, 105, 89, 96, 142, 55, 138, 7, 129, 0, 92, 147, 141, 104, 66, 27, 130, 46, 14, 16, 35, 37, 23, 17, 101, 110, 103, 98, 3, 64, 65, 128, 123, 25, 117, 118, 121, 41, 88, 30, 79, 137, 132, 107, 57, 68, 63, 39, 53, 143, 113, 43, 1, 80]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 129, 130, 109, 76, 59, 61, 19, 56, 8, 6, 116, 114, 119, 82, 54, 148, 11, 85, 26, 34, 149, 124, 50, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 120, 29, 38, 100, 106, 2, 135, 122, 42, 127, 99, 70, 40, 47, 13, 111, 131, 28, 45, 33, 24, 80, 68, 63, 39, 53, 143, 113, 43, 1, 137, 132, 121, 30, 79, 88, 118, 3, 64, 65, 128, 123, 25, 117, 138, 55, 74, 96, 142, 41, 7, 91, 62, 48, 5, 17, 23, 37, 35, 9, 112, 71, 83, 89, 78, 105, 136, 93, 21, 69, 15, 87, 52, 133, 18, 103, 110, 101, 98, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 90, 108, 46, 92, 27, 104, 66, 147, 141, 107, 57, 60, 22, 97, 0]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[54, 82, 148, 33, 45, 42, 127, 122, 2, 135, 13, 28, 131, 111, 106, 120, 29, 95, 77, 51, 4, 36, 146, 38, 100, 49, 113, 43, 1, 63, 39, 53, 143, 72, 68, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 11, 85, 26, 34, 149, 19, 76, 109, 59, 61, 90, 108, 44, 10, 14, 16, 58, 140, 73, 20, 126, 71, 9, 83, 37, 103, 110, 101, 98, 35, 23, 136, 93, 21, 87, 17, 133, 52, 105, 89, 78, 18, 74, 96, 79, 88, 41, 121, 30, 137, 132, 7, 91, 138, 55, 118, 142, 3, 64, 65, 128, 123, 25, 117, 69, 15, 48, 5, 62, 0, 129, 92, 27, 57, 130, 46, 112, 31, 97, 22, 104, 141, 147, 66, 107, 139, 134, 84, 67, 81, 125, 94, 12, 75, 32, 145, 102, 47, 99, 70, 40, 114, 119, 115, 54]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[139, 56, 6, 116, 8, 124, 50, 60, 24, 80, 68, 104, 141, 147, 66, 107, 57, 27, 92, 130, 46, 112, 62, 0, 129, 7, 91, 138, 41, 121, 88, 132, 137, 79, 30, 55, 118, 142, 3, 64, 65, 128, 123, 25, 117, 69, 15, 87, 136, 93, 21, 23, 37, 103, 110, 101, 98, 35, 126, 140, 58, 73, 20, 71, 9, 83, 89, 48, 5, 105, 78, 52, 133, 96, 74, 18, 17, 16, 14, 10, 44, 108, 97, 22, 90, 31, 76, 109, 59, 61, 149, 34, 85, 26, 19, 11, 148, 82, 54, 33, 114, 119, 122, 2, 135, 13, 131, 111, 134, 84, 67, 72, 49, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 120, 29, 95, 77, 51, 45, 42, 127, 28, 47, 99, 70, 40, 86, 144, 139]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[130, 92, 27, 57, 68, 72, 49, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 120, 29, 95, 77, 51, 131, 111, 28, 45, 2, 135, 70, 40, 99, 47, 13, 42, 127, 122, 114, 119, 82, 54, 148, 11, 19, 149, 34, 26, 85, 61, 59, 76, 109, 8, 116, 56, 6, 139, 134, 84, 67, 80, 24, 60, 50, 124, 86, 144, 33, 107, 141, 147, 66, 104, 129, 0, 5, 48, 46, 10, 44, 31, 108, 16, 14, 20, 71, 73, 58, 140, 126, 17, 23, 103, 110, 101, 98, 35, 83, 9, 112, 62, 91, 7, 55, 142, 96, 74, 18, 133, 52, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 138, 121, 41, 132, 137, 79, 30, 88, 89, 105, 78, 37, 22, 97, 90, 130]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[14, 16, 10, 73, 58, 140, 126, 35, 23, 17, 37, 110, 101, 103, 98, 83, 9, 112, 71, 20, 90, 108, 31, 44, 97, 22, 76, 109, 61, 59, 149, 34, 26, 85, 19, 11, 148, 82, 54, 116, 56, 6, 8, 139, 134, 84, 67, 80, 24, 60, 50, 124, 86, 144, 57, 107, 27, 92, 130, 0, 129, 91, 7, 41, 121, 79, 30, 88, 132, 137, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 95, 77, 51, 2, 135, 70, 40, 99, 47, 13, 28, 45, 33, 42, 127, 119, 114, 122, 131, 111, 49, 113, 143, 63, 39, 72, 43, 68, 66, 147, 141, 104, 48, 5, 74, 18, 133, 52, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 96, 118, 142, 55, 138, 89, 105, 78, 62, 46, 14]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[3, 65, 128, 123, 25, 117, 64, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0, 62, 48, 5, 105, 52, 133, 136, 93, 21, 69, 87, 15, 101, 98, 35, 23, 17, 37, 103, 110, 83, 9, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 44, 97, 90, 22, 76, 109, 61, 59, 149, 34, 85, 26, 11, 19, 116, 8, 56, 144, 86, 50, 124, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 120, 29, 95, 77, 51, 99, 70, 40, 13, 28, 131, 111, 84, 67, 139, 134, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 45, 47, 33, 6, 49, 72, 68, 147, 141, 104, 66, 92, 130, 46, 108, 31, 57, 107, 27, 74, 18, 78, 89, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[80, 24, 60, 50, 124, 86, 144, 8, 56, 6, 116, 139, 134, 82, 54, 148, 119, 114, 122, 42, 2, 45, 33, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 44, 90, 108, 31, 10, 16, 14, 73, 140, 58, 126, 35, 23, 17, 37, 103, 110, 101, 98, 83, 9, 78, 105, 52, 133, 136, 93, 21, 15, 87, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 5, 48, 89, 62, 91, 129, 0, 7, 30, 88, 132, 137, 79, 121, 41, 147, 141, 104, 66, 92, 27, 130, 46, 112, 71, 20, 57, 107, 68, 72, 49, 113, 43, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 102, 145, 32, 75, 146, 38, 100, 106, 120, 29, 95, 51, 77, 47, 13, 131, 111, 28, 135, 127, 99, 70, 40, 4, 36, 84, 67, 11, 19, 80]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[87, 15, 21, 93, 69, 133, 52, 136, 78, 105, 89, 62, 5, 48, 74, 18, 9, 83, 35, 23, 17, 37, 103, 110, 101, 98, 126, 73, 140, 58, 71, 20, 112, 0, 129, 91, 7, 121, 41, 132, 137, 79, 30, 88, 138, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 46, 90, 108, 31, 10, 16, 14, 44, 97, 22, 61, 59, 109, 76, 19, 56, 8, 116, 6, 11, 85, 26, 34, 149, 148, 54, 82, 33, 139, 134, 86, 144, 50, 124, 60, 24, 80, 72, 49, 115, 43, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 77, 51, 95, 4, 36, 146, 38, 106, 100, 29, 120, 111, 28, 2, 135, 127, 42, 45, 122, 114, 119, 131, 70, 40, 99, 47, 13, 84, 67, 113, 68, 66, 104, 141, 147, 92, 27, 130, 57, 107, 87]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[50, 124, 80, 24, 60, 144, 86, 6, 8, 116, 139, 134, 131, 28, 2, 135, 127, 42, 45, 122, 114, 119, 11, 56, 19, 149, 85, 26, 34, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 126, 35, 23, 17, 37, 110, 101, 98, 103, 83, 9, 71, 112, 46, 130, 0, 129, 91, 74, 18, 52, 133, 87, 15, 93, 136, 78, 105, 89, 62, 5, 48, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 96, 7, 121, 41, 30, 79, 88, 132, 137, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 77, 51, 95, 4, 36, 146, 38, 100, 29, 120, 111, 84, 67, 113, 143, 63, 39, 72, 49, 115, 43, 68, 66, 104, 141, 147, 27, 92, 57, 107, 33, 54, 82, 148, 106, 70, 40, 99, 47, 13, 50]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[45, 122, 42, 127, 2, 135, 13, 47, 99, 70, 40, 77, 51, 95, 102, 145, 32, 12, 75, 94, 125, 81, 146, 38, 100, 106, 29, 120, 111, 28, 131, 82, 148, 54, 116, 8, 6, 56, 86, 144, 124, 50, 60, 80, 24, 139, 134, 84, 67, 72, 68, 49, 43, 113, 143, 63, 39, 53, 1, 115, 36, 4, 119, 114, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 126, 35, 23, 17, 37, 101, 98, 103, 110, 83, 9, 71, 112, 46, 48, 5, 62, 89, 105, 133, 52, 18, 65, 69, 21, 87, 15, 93, 136, 78, 96, 142, 55, 138, 118, 3, 64, 128, 25, 123, 117, 30, 79, 88, 132, 137, 41, 121, 7, 91, 74, 129, 0, 27, 92, 57, 107, 66, 104, 141, 147, 130, 85, 149, 11, 26, 34, 33, 45]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[7, 41, 121, 30, 79, 88, 132, 137, 147, 66, 107, 57, 27, 92, 104, 129, 0, 91, 74, 96, 118, 117, 123, 25, 128, 65, 64, 3, 142, 55, 138, 18, 105, 133, 52, 21, 87, 15, 93, 136, 78, 23, 17, 37, 101, 98, 103, 110, 83, 9, 89, 48, 5, 62, 46, 112, 71, 20, 73, 140, 58, 126, 35, 10, 14, 16, 31, 90, 97, 108, 44, 22, 59, 61, 76, 109, 19, 149, 85, 26, 34, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 45, 2, 135, 13, 47, 99, 70, 40, 131, 28, 111, 29, 120, 106, 100, 115, 49, 72, 67, 38, 95, 51, 77, 36, 4, 146, 81, 94, 125, 75, 32, 12, 145, 102, 43, 113, 143, 63, 39, 53, 1, 68, 124, 50, 86, 144, 6, 56, 8, 116, 139, 134, 84, 80, 24, 60, 130, 141, 69, 7]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[9, 105, 133, 52, 21, 87, 15, 93, 69, 136, 78, 23, 17, 37, 101, 98, 103, 110, 83, 35, 126, 58, 140, 73, 20, 71, 112, 62, 5, 48, 89, 96, 118, 117, 123, 25, 128, 65, 64, 3, 18, 74, 91, 7, 79, 30, 121, 41, 88, 137, 132, 55, 138, 142, 129, 0, 141, 147, 104, 66, 92, 27, 130, 31, 10, 14, 16, 108, 44, 22, 59, 61, 76, 109, 19, 149, 85, 26, 34, 148, 54, 82, 33, 114, 119, 122, 42, 127, 45, 2, 135, 40, 70, 99, 47, 13, 131, 28, 111, 29, 120, 106, 100, 38, 115, 43, 113, 143, 63, 39, 53, 1, 68, 80, 24, 60, 50, 124, 86, 144, 8, 11, 56, 6, 116, 139, 134, 84, 67, 72, 49, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 107, 57, 90, 97, 46, 9]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[55, 142, 96, 118, 123, 25, 128, 15, 21, 69, 93, 52, 133, 78, 105, 89, 48, 5, 112, 62, 0, 129, 91, 7, 74, 18, 9, 83, 35, 37, 101, 98, 103, 110, 23, 17, 136, 87, 3, 117, 64, 65, 41, 121, 30, 88, 137, 132, 147, 104, 66, 141, 27, 92, 57, 107, 60, 50, 124, 86, 144, 8, 6, 116, 139, 134, 84, 67, 72, 49, 113, 143, 63, 39, 53, 1, 115, 43, 12, 145, 102, 36, 4, 51, 77, 95, 47, 13, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 146, 32, 75, 94, 125, 81, 68, 80, 24, 56, 19, 149, 34, 85, 26, 11, 54, 82, 33, 114, 119, 122, 42, 127, 135, 99, 70, 40, 148, 61, 59, 109, 76, 90, 108, 44, 97, 22, 130, 10, 14, 16, 140, 73, 20, 71, 58, 126, 46, 31, 79, 138, 55]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 60, 124, 50, 86, 144, 80, 24, 139, 134, 116, 8, 56, 19, 11, 54, 82, 33, 114, 119, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 100, 38, 146, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 120, 29, 84, 67, 49, 43, 115, 63, 39, 53, 1, 72, 113, 143, 81, 12, 145, 102, 32, 75, 94, 125, 68, 27, 92, 130, 46, 112, 71, 20, 58, 140, 126, 35, 37, 101, 98, 103, 110, 23, 17, 136, 78, 105, 89, 74, 41, 121, 7, 138, 55, 142, 96, 118, 123, 25, 117, 64, 3, 65, 128, 69, 87, 15, 21, 18, 133, 52, 93, 48, 5, 62, 91, 129, 0, 9, 83, 73, 16, 14, 10, 108, 31, 44, 90, 97, 22, 59, 109, 76, 61, 85, 34, 149, 26, 148, 6, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[61, 85, 26, 34, 149, 6, 116, 8, 56, 19, 11, 54, 82, 148, 114, 119, 33, 111, 28, 45, 122, 42, 2, 70, 40, 99, 13, 131, 135, 127, 47, 29, 120, 106, 100, 38, 146, 36, 4, 102, 32, 12, 75, 145, 51, 77, 95, 84, 67, 139, 134, 124, 50, 86, 144, 80, 24, 60, 57, 107, 66, 104, 27, 92, 130, 46, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 17, 133, 52, 93, 15, 21, 69, 87, 136, 78, 105, 89, 48, 5, 62, 91, 129, 0, 141, 147, 132, 137, 68, 39, 53, 143, 63, 43, 72, 49, 113, 115, 1, 81, 94, 125, 88, 121, 30, 79, 55, 142, 96, 118, 123, 25, 117, 64, 3, 65, 128, 74, 41, 7, 138, 18, 83, 9, 103, 110, 101, 98, 14, 16, 10, 108, 31, 44, 90, 97, 22, 59, 109, 76, 61]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[21, 69, 87, 15, 93, 136, 78, 105, 89, 52, 133, 17, 37, 23, 110, 101, 98, 103, 83, 9, 71, 20, 73, 58, 140, 126, 35, 14, 16, 10, 31, 44, 90, 97, 22, 59, 109, 76, 61, 85, 26, 34, 149, 6, 116, 8, 56, 19, 11, 148, 54, 82, 33, 114, 119, 122, 42, 2, 135, 127, 13, 131, 111, 28, 45, 70, 40, 99, 47, 29, 120, 106, 100, 38, 146, 36, 4, 102, 32, 12, 75, 145, 94, 125, 81, 115, 43, 49, 113, 143, 63, 39, 53, 1, 72, 67, 139, 134, 84, 95, 77, 51, 80, 24, 60, 57, 107, 68, 124, 50, 86, 144, 66, 147, 104, 141, 129, 0, 91, 7, 74, 18, 48, 5, 62, 112, 92, 27, 130, 108, 46, 138, 142, 96, 118, 117, 123, 25, 128, 65, 64, 3, 55, 79, 30, 41, 121, 132, 137, 88, 21]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[113, 143, 63, 39, 53, 1, 72, 67, 84, 95, 77, 51, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 115, 146, 38, 100, 106, 29, 120, 111, 28, 45, 122, 42, 2, 135, 127, 70, 40, 99, 47, 13, 131, 33, 54, 82, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 107, 27, 92, 57, 109, 76, 22, 90, 97, 44, 31, 10, 14, 16, 140, 126, 20, 73, 58, 71, 112, 62, 91, 7, 74, 18, 133, 52, 9, 103, 101, 98, 110, 23, 37, 35, 83, 5, 48, 89, 78, 105, 17, 87, 15, 21, 69, 93, 136, 65, 64, 3, 123, 25, 128, 117, 79, 30, 132, 137, 88, 121, 41, 138, 55, 142, 96, 118, 0, 129, 104, 66, 147, 141, 130, 108, 46, 85, 11, 26, 34, 149, 61, 59, 19, 119, 114, 148, 139, 134, 49, 43, 113]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[1, 115, 146, 38, 100, 106, 29, 120, 111, 28, 131, 45, 122, 42, 2, 135, 127, 114, 119, 148, 82, 54, 116, 8, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 39, 53, 63, 143, 49, 43, 113, 72, 67, 84, 134, 139, 33, 19, 149, 85, 11, 26, 34, 61, 76, 109, 59, 130, 27, 92, 104, 141, 147, 66, 107, 57, 97, 22, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 31, 108, 90, 0, 129, 7, 96, 118, 142, 55, 138, 74, 18, 91, 62, 5, 48, 89, 78, 105, 136, 93, 21, 15, 87, 133, 52, 69, 3, 123, 25, 128, 117, 64, 65, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 41, 121, 30, 79, 88, 132, 137, 125, 94, 75, 32, 12, 102, 145, 4, 36, 95, 77, 51, 47, 13, 70, 40, 99, 81, 1]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 112, 126, 140, 58, 73, 20, 71, 83, 35, 23, 103, 110, 101, 98, 17, 37, 133, 52, 69, 21, 15, 87, 136, 78, 105, 93, 9, 89, 48, 5, 62, 0, 129, 7, 91, 96, 118, 142, 55, 138, 74, 18, 64, 65, 123, 25, 128, 117, 3, 30, 79, 121, 41, 88, 132, 137, 104, 66, 141, 147, 107, 57, 27, 92, 130, 109, 76, 149, 85, 11, 26, 34, 19, 116, 8, 6, 56, 86, 144, 139, 134, 84, 67, 72, 43, 113, 143, 63, 39, 53, 94, 125, 81, 49, 115, 1, 68, 80, 24, 60, 50, 124, 33, 54, 82, 148, 119, 114, 135, 127, 122, 42, 2, 28, 45, 131, 111, 29, 120, 106, 100, 38, 51, 77, 95, 146, 36, 4, 12, 75, 32, 145, 102, 13, 70, 40, 99, 47, 61, 59, 14]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[88, 30, 79, 121, 41, 132, 137, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 84, 67, 38, 100, 106, 29, 120, 111, 28, 45, 2, 40, 70, 99, 47, 77, 51, 95, 36, 4, 12, 75, 32, 145, 102, 125, 81, 94, 146, 115, 43, 113, 72, 49, 143, 63, 39, 53, 1, 107, 66, 104, 141, 147, 92, 27, 130, 31, 10, 14, 16, 140, 58, 73, 20, 71, 83, 35, 23, 103, 110, 101, 98, 17, 37, 78, 87, 15, 21, 69, 93, 136, 133, 52, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 64, 65, 123, 25, 128, 117, 3, 142, 55, 138, 96, 118, 9, 112, 126, 46, 90, 108, 44, 97, 22, 76, 109, 59, 61, 19, 149, 85, 26, 34, 11, 148, 54, 82, 6, 8, 116, 56, 33, 119, 114, 122, 42, 135, 13, 131, 127, 57, 88]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[132, 137, 88, 41, 121, 79, 30, 141, 147, 104, 66, 129, 0, 62, 5, 48, 89, 78, 17, 37, 23, 103, 110, 101, 98, 136, 105, 133, 52, 93, 21, 87, 15, 69, 18, 3, 64, 65, 128, 117, 123, 25, 142, 55, 138, 74, 96, 118, 7, 91, 9, 112, 126, 58, 140, 73, 20, 71, 83, 35, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 107, 60, 50, 124, 144, 86, 8, 11, 85, 26, 34, 149, 61, 19, 109, 76, 59, 82, 54, 148, 33, 28, 45, 2, 40, 70, 99, 47, 77, 51, 95, 106, 29, 120, 111, 131, 13, 42, 135, 122, 127, 119, 114, 6, 56, 116, 139, 134, 84, 67, 72, 49, 115, 146, 36, 4, 38, 100, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 75, 32, 145, 102, 12, 24, 80, 68, 132]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 53, 39, 63, 113, 43, 143, 115, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 51, 95, 77, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 1, 49, 72, 67, 139, 134, 84, 33, 54, 82, 148, 114, 119, 34, 149, 85, 26, 76, 109, 59, 61, 44, 16, 14, 10, 108, 31, 90, 97, 22, 130, 104, 141, 147, 66, 107, 57, 27, 92, 129, 0, 91, 62, 5, 48, 89, 78, 133, 52, 93, 136, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 9, 112, 46, 138, 121, 41, 88, 30, 79, 55, 142, 118, 96, 74, 18, 3, 64, 65, 128, 25, 123, 117, 21, 87, 15, 69, 83, 7, 132, 137, 11, 122, 127, 42, 19]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[59, 61, 149, 85, 26, 34, 11, 54, 82, 148, 114, 119, 122, 42, 2, 45, 131, 28, 33, 111, 29, 120, 106, 100, 84, 67, 139, 116, 8, 56, 6, 19, 144, 86, 124, 50, 60, 24, 80, 68, 72, 43, 143, 53, 39, 63, 113, 115, 1, 49, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 125, 81, 94, 47, 99, 13, 70, 40, 135, 127, 134, 109, 76, 22, 97, 44, 16, 14, 10, 31, 90, 108, 130, 27, 92, 57, 107, 104, 141, 147, 66, 132, 137, 79, 30, 121, 41, 88, 7, 129, 0, 46, 83, 89, 48, 5, 62, 91, 138, 96, 74, 18, 105, 78, 136, 133, 52, 15, 21, 87, 93, 69, 3, 64, 65, 128, 25, 123, 117, 55, 142, 118, 9, 73, 20, 71, 35, 126, 140, 58, 103, 101, 98, 110, 23, 37, 17, 112, 59]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[11, 26, 34, 85, 61, 149, 59, 76, 109, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 43, 143, 53, 39, 63, 113, 49, 115, 146, 95, 77, 51, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 1, 67, 139, 134, 82, 54, 148, 114, 119, 28, 131, 13, 2, 45, 122, 42, 127, 135, 40, 70, 99, 47, 29, 120, 106, 100, 84, 38, 33, 19, 97, 22, 90, 108, 44, 31, 10, 16, 14, 20, 73, 140, 58, 112, 62, 83, 9, 89, 48, 5, 0, 129, 88, 30, 79, 121, 41, 138, 55, 142, 96, 74, 18, 105, 52, 133, 78, 136, 87, 93, 69, 3, 64, 65, 128, 25, 123, 117, 118, 132, 137, 27, 92, 57, 107, 66, 104, 141, 147, 46, 71, 35, 126, 110, 101, 98, 103, 37, 23, 17, 15, 21, 91, 7, 130, 111, 11]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[137, 132, 66, 104, 141, 147, 107, 68, 72, 67, 84, 134, 139, 33, 82, 54, 148, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 90, 108, 44, 31, 10, 16, 14, 20, 73, 140, 58, 126, 110, 101, 98, 103, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 129, 0, 91, 7, 41, 121, 30, 79, 88, 118, 138, 55, 142, 96, 74, 3, 64, 65, 128, 123, 25, 117, 69, 15, 21, 87, 93, 133, 52, 18, 9, 83, 71, 35, 112, 46, 130, 27, 92, 57, 60, 124, 50, 24, 80, 6, 8, 116, 56, 86, 144, 111, 131, 28, 45, 42, 127, 135, 13, 2, 47, 99, 70, 40, 29, 120, 106, 100, 38, 95, 77, 51, 146, 36, 4, 102, 145, 32, 12, 75, 94, 125, 81, 1, 53, 39, 63, 43, 143, 113, 49, 115, 114, 119, 122, 97, 137]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[98, 103, 110, 101, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 129, 0, 91, 138, 96, 74, 41, 121, 30, 79, 88, 118, 142, 55, 18, 133, 52, 15, 87, 93, 21, 69, 65, 64, 128, 123, 25, 117, 3, 9, 83, 71, 20, 73, 140, 58, 126, 35, 10, 16, 14, 44, 31, 90, 108, 97, 22, 61, 59, 76, 109, 149, 85, 26, 34, 82, 54, 148, 11, 19, 8, 116, 6, 56, 86, 144, 124, 50, 24, 80, 60, 107, 66, 141, 147, 57, 104, 92, 27, 130, 46, 112, 7, 132, 137, 63, 39, 53, 1, 143, 72, 67, 84, 68, 115, 49, 43, 113, 81, 125, 94, 75, 32, 12, 102, 145, 146, 36, 4, 51, 95, 77, 29, 120, 106, 131, 111, 28, 45, 2, 42, 135, 13, 47, 99, 70, 40, 100, 38, 134, 139, 33, 114, 119, 127, 122, 98]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[144, 86, 50, 124, 24, 80, 60, 56, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 22, 90, 108, 97, 31, 44, 130, 27, 92, 57, 104, 141, 147, 66, 107, 63, 137, 132, 88, 41, 121, 30, 79, 7, 91, 129, 0, 5, 48, 112, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 21, 15, 87, 93, 69, 65, 64, 3, 18, 89, 62, 46, 58, 140, 73, 20, 71, 103, 110, 101, 98, 35, 126, 16, 14, 10, 74, 138, 96, 118, 142, 55, 128, 123, 25, 117, 53, 39, 68, 115, 43, 113, 143, 72, 49, 1, 81, 94, 125, 12, 75, 32, 145, 102, 4, 36, 146, 95, 77, 51, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 100, 38, 67, 84, 134, 139, 8, 116, 6, 33, 54, 82, 148, 119, 114, 122, 42, 127, 144]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 129, 91, 7, 118, 96, 138, 142, 55, 79, 30, 121, 41, 88, 137, 132, 104, 141, 147, 66, 107, 60, 50, 124, 86, 144, 8, 116, 56, 11, 19, 149, 85, 26, 34, 61, 59, 109, 76, 22, 90, 108, 31, 44, 16, 14, 10, 73, 20, 71, 83, 9, 17, 136, 78, 105, 89, 5, 48, 74, 18, 133, 52, 117, 25, 123, 128, 64, 65, 3, 69, 21, 15, 93, 87, 35, 103, 110, 101, 98, 37, 23, 126, 58, 140, 46, 130, 27, 92, 57, 80, 24, 72, 43, 113, 143, 63, 39, 53, 68, 49, 115, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 134, 84, 67, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 95, 77, 70, 40, 99, 47, 13, 6, 97, 62, 112, 0]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[127, 42, 45, 2, 135, 99, 70, 40, 95, 77, 51, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 33, 54, 82, 148, 11, 26, 34, 85, 149, 76, 109, 59, 61, 19, 56, 6, 8, 116, 139, 134, 84, 67, 72, 1, 53, 39, 63, 143, 43, 113, 49, 115, 125, 94, 12, 75, 32, 145, 102, 81, 68, 80, 24, 60, 50, 124, 86, 144, 57, 27, 92, 130, 108, 31, 44, 97, 22, 90, 10, 73, 20, 71, 83, 9, 112, 0, 129, 91, 7, 41, 121, 79, 30, 138, 74, 18, 133, 52, 136, 78, 105, 89, 48, 5, 62, 46, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 21, 15, 87, 93, 69, 65, 3, 64, 117, 118, 142, 55, 96, 123, 128, 25, 88, 137, 132, 104, 141, 147, 66, 107, 119, 114, 122, 13, 47, 127]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[99, 47, 13, 131, 111, 2, 135, 127, 42, 122, 45, 28, 33, 54, 82, 148, 119, 114, 26, 34, 85, 149, 19, 56, 8, 116, 6, 11, 144, 86, 50, 124, 60, 24, 80, 68, 72, 49, 115, 1, 53, 39, 63, 143, 43, 113, 84, 67, 100, 106, 29, 120, 38, 146, 4, 36, 95, 77, 51, 12, 75, 32, 145, 102, 81, 94, 125, 134, 139, 76, 109, 59, 61, 108, 31, 44, 97, 22, 90, 14, 16, 10, 73, 20, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 46, 0, 129, 27, 92, 104, 141, 147, 66, 107, 137, 132, 121, 79, 30, 138, 88, 41, 7, 91, 74, 18, 133, 52, 93, 15, 87, 21, 69, 128, 25, 123, 117, 64, 65, 3, 96, 118, 142, 55, 9, 83, 71, 112, 130, 57, 40, 70, 99]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[77, 51, 95, 4, 36, 146, 81, 125, 94, 12, 75, 32, 145, 102, 38, 100, 106, 29, 120, 131, 111, 28, 2, 135, 127, 42, 122, 45, 13, 47, 99, 70, 40, 114, 119, 11, 19, 56, 8, 116, 6, 33, 82, 54, 149, 61, 76, 109, 22, 90, 108, 97, 44, 16, 14, 10, 73, 20, 71, 9, 83, 112, 62, 91, 74, 18, 133, 52, 93, 15, 87, 21, 69, 65, 3, 64, 128, 25, 123, 117, 96, 118, 142, 55, 138, 121, 79, 30, 132, 137, 7, 88, 41, 147, 66, 107, 57, 24, 80, 60, 124, 50, 144, 86, 139, 134, 84, 67, 72, 68, 49, 115, 43, 113, 143, 1, 53, 39, 63, 104, 141, 27, 92, 0, 129, 130, 48, 5, 89, 136, 78, 105, 35, 98, 101, 110, 103, 23, 17, 37, 126, 58, 140, 31, 46, 59, 85, 26, 34, 148, 77]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[55, 142, 96, 118, 3, 64, 65, 117, 25, 123, 128, 52, 133, 136, 78, 105, 89, 48, 5, 62, 0, 129, 130, 27, 92, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 139, 134, 84, 67, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 51, 77, 95, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 2, 131, 13, 47, 99, 70, 40, 135, 127, 42, 54, 82, 33, 116, 6, 8, 11, 148, 122, 114, 119, 26, 34, 85, 61, 149, 19, 56, 80, 24, 68, 137, 132, 41, 121, 79, 30, 138, 7, 88, 91, 74, 18, 69, 21, 15, 87, 93, 23, 17, 37, 35, 98, 101, 110, 103, 83, 9, 112, 73, 20, 71, 58, 140, 126, 46, 90, 108, 31, 10, 16, 14, 44, 22, 59, 76, 109, 97, 55]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[87, 15, 21, 69, 78, 105, 89, 48, 5, 62, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 50, 124, 144, 86, 116, 56, 8, 6, 19, 26, 34, 85, 149, 61, 59, 76, 109, 108, 31, 90, 97, 22, 44, 16, 14, 10, 73, 20, 71, 58, 140, 126, 46, 130, 27, 92, 60, 24, 80, 68, 107, 67, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 51, 77, 95, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 2, 135, 127, 42, 122, 114, 119, 54, 82, 148, 33, 134, 139, 84, 131, 13, 47, 99, 70, 40, 11, 0, 129, 91, 74, 18, 133, 52, 136, 17, 37, 35, 83, 9, 112, 23, 103, 98, 101, 110, 65, 64, 3, 96, 118, 142, 55, 138, 7, 117, 123, 25, 128, 93, 87]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[111, 28, 45, 13, 47, 131, 95, 51, 77, 4, 36, 146, 38, 100, 106, 29, 120, 135, 127, 42, 122, 114, 119, 148, 33, 134, 139, 116, 8, 6, 56, 144, 86, 50, 124, 60, 24, 80, 57, 107, 66, 104, 141, 147, 91, 74, 18, 133, 52, 15, 87, 136, 78, 105, 89, 48, 62, 0, 129, 7, 121, 41, 88, 30, 79, 138, 55, 142, 96, 118, 3, 64, 65, 128, 117, 123, 25, 93, 21, 69, 5, 112, 46, 108, 31, 90, 97, 22, 44, 16, 14, 10, 73, 20, 71, 58, 140, 126, 35, 37, 103, 98, 101, 110, 23, 17, 9, 83, 130, 27, 92, 76, 109, 59, 61, 149, 85, 26, 34, 19, 11, 54, 82, 84, 67, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 2, 70, 40, 99, 137, 132, 68, 111]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[37, 103, 98, 101, 110, 23, 17, 9, 83, 35, 140, 58, 73, 20, 71, 112, 126, 16, 14, 10, 44, 108, 31, 90, 97, 22, 76, 109, 59, 61, 149, 85, 26, 34, 19, 11, 148, 82, 54, 33, 116, 8, 6, 56, 144, 86, 50, 124, 60, 24, 80, 68, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 131, 95, 51, 77, 84, 67, 139, 134, 122, 114, 119, 2, 70, 40, 99, 47, 135, 127, 42, 13, 66, 107, 57, 104, 147, 141, 129, 7, 91, 74, 18, 5, 48, 62, 0, 46, 130, 27, 92, 132, 137, 79, 30, 88, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 133, 52, 93, 21, 15, 87, 136, 78, 105, 89, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[10, 31, 90, 97, 22, 44, 108, 46, 112, 126, 35, 103, 98, 101, 110, 23, 37, 140, 58, 73, 20, 71, 9, 83, 105, 89, 48, 5, 62, 0, 129, 91, 74, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 93, 87, 52, 133, 78, 136, 17, 15, 21, 18, 88, 7, 41, 121, 79, 30, 138, 55, 147, 141, 137, 132, 66, 104, 27, 92, 57, 107, 60, 24, 80, 68, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 28, 45, 2, 135, 127, 42, 122, 114, 119, 85, 8, 116, 56, 6, 11, 148, 82, 54, 26, 34, 149, 61, 59, 109, 76, 19, 50, 124, 86, 144, 33, 139, 134, 67, 84, 131, 13, 70, 40, 99, 47, 77, 51, 95, 130, 16, 14, 10]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[105, 89, 48, 5, 62, 0, 129, 91, 74, 18, 9, 83, 23, 17, 15, 21, 87, 52, 133, 78, 136, 93, 69, 64, 65, 128, 25, 123, 117, 3, 96, 118, 138, 55, 142, 79, 121, 41, 30, 88, 132, 147, 141, 104, 66, 27, 92, 130, 90, 97, 22, 44, 108, 46, 31, 16, 14, 10, 58, 140, 73, 20, 71, 126, 35, 103, 110, 101, 98, 37, 112, 76, 109, 59, 61, 149, 26, 34, 85, 8, 116, 139, 134, 6, 114, 119, 122, 42, 127, 33, 82, 54, 148, 11, 19, 56, 144, 86, 124, 50, 60, 24, 80, 68, 72, 143, 1, 53, 39, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 40, 70, 146, 84, 67, 107, 57, 137, 7, 105]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[27, 92, 130, 76, 109, 59, 61, 19, 11, 54, 82, 148, 26, 34, 85, 149, 144, 86, 6, 56, 8, 116, 139, 134, 111, 131, 28, 45, 2, 42, 135, 13, 47, 146, 38, 100, 106, 29, 120, 84, 67, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 95, 77, 99, 70, 40, 122, 127, 114, 119, 33, 124, 50, 60, 24, 80, 57, 107, 68, 72, 143, 1, 53, 39, 63, 113, 43, 66, 104, 141, 147, 88, 30, 79, 121, 41, 138, 55, 142, 118, 65, 128, 25, 123, 117, 64, 3, 69, 87, 15, 52, 133, 78, 105, 136, 93, 21, 18, 74, 96, 7, 91, 62, 0, 129, 46, 31, 108, 90, 97, 22, 44, 14, 16, 10, 58, 140, 73, 20, 71, 126, 35, 37, 23, 103, 110, 101, 98, 17, 9, 83, 112, 48, 5, 89, 132, 137, 27]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 95, 77, 120, 29, 106, 100, 38, 67, 143, 72, 68, 39, 53, 63, 113, 43, 49, 115, 84, 134, 139, 144, 86, 50, 124, 24, 80, 60, 104, 141, 147, 66, 107, 57, 27, 92, 130, 0, 129, 91, 62, 5, 48, 89, 133, 52, 21, 87, 15, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 138, 121, 41, 88, 132, 137, 79, 30, 96, 74, 18, 105, 78, 136, 93, 23, 110, 101, 98, 103, 17, 9, 83, 37, 35, 126, 58, 140, 73, 20, 71, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 112, 7, 109, 76, 149, 59, 61, 19, 11, 85, 26, 34, 148, 54, 82, 33, 111, 131, 28, 45, 2, 42, 135, 13, 47, 99, 70, 40, 127, 114, 119, 122, 8, 116, 6, 56, 146, 1, 81]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[88, 132, 137, 79, 30, 41, 121, 7, 91, 74, 18, 96, 142, 55, 138, 48, 5, 0, 129, 27, 92, 147, 66, 104, 141, 107, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 85, 26, 34, 148, 54, 82, 33, 139, 24, 80, 68, 143, 72, 39, 53, 63, 113, 43, 146, 1, 49, 115, 84, 67, 38, 120, 29, 77, 51, 95, 4, 36, 102, 32, 145, 75, 12, 94, 125, 81, 106, 100, 111, 131, 28, 45, 2, 42, 122, 127, 135, 13, 47, 99, 70, 40, 114, 119, 134, 149, 59, 61, 19, 109, 76, 44, 108, 31, 22, 97, 46, 112, 9, 83, 110, 101, 98, 103, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 23, 37, 35, 126, 58, 140, 73, 20, 71, 14, 16, 10, 130, 90, 62, 89, 3, 64, 65, 128, 123, 25, 117, 118, 88]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[20, 71, 73, 58, 140, 126, 35, 103, 110, 101, 98, 17, 78, 136, 87, 15, 21, 69, 93, 23, 37, 83, 9, 133, 52, 105, 18, 3, 64, 65, 128, 123, 25, 117, 118, 142, 96, 55, 79, 30, 41, 121, 138, 91, 7, 88, 132, 137, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 95, 77, 51, 99, 70, 40, 28, 45, 2, 135, 13, 47, 111, 131, 33, 82, 54, 148, 11, 85, 26, 34, 149, 59, 61, 19, 109, 76, 60, 57, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 80, 24, 63, 143, 43, 113, 49, 115, 116, 6, 8, 56, 122, 42, 127, 119, 114, 22, 44, 90, 97, 108, 31, 46, 130, 0, 129, 141, 147, 66, 104, 27, 92, 62, 5, 48, 89, 74, 112, 14, 16, 10, 20]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[41, 30, 79, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 52, 133, 18, 74, 96, 138, 91, 129, 0, 62, 5, 48, 89, 105, 9, 83, 71, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 23, 136, 78, 17, 21, 69, 87, 15, 93, 46, 31, 108, 97, 90, 22, 44, 10, 14, 16, 112, 27, 92, 57, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 63, 39, 53, 1, 143, 43, 113, 49, 115, 145, 102, 32, 12, 75, 94, 125, 81, 146, 36, 4, 51, 77, 95, 100, 106, 29, 120, 38, 111, 131, 28, 45, 2, 70, 40, 99, 13, 47, 135, 42, 122, 127, 54, 82, 148, 33, 8, 116, 6, 109, 76, 59, 61, 85, 26, 34, 149, 19, 11, 56, 119, 114, 147, 141, 104, 66, 130, 7, 121, 88, 132, 137, 41]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[36, 4, 51, 77, 95, 100, 106, 29, 120, 38, 146, 84, 134, 139, 33, 82, 54, 148, 11, 85, 26, 34, 149, 19, 56, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 115, 145, 102, 32, 12, 75, 94, 125, 81, 1, 143, 43, 113, 39, 53, 63, 137, 132, 147, 66, 107, 57, 104, 141, 92, 27, 130, 97, 90, 22, 44, 108, 31, 10, 14, 16, 58, 140, 73, 20, 71, 112, 62, 46, 0, 129, 91, 5, 48, 89, 9, 83, 35, 126, 37, 103, 110, 101, 98, 23, 17, 21, 69, 87, 15, 93, 133, 52, 105, 78, 136, 3, 64, 65, 128, 123, 25, 117, 142, 55, 88, 30, 79, 121, 41, 7, 138, 96, 118, 18, 74, 109, 76, 59, 61, 114, 119, 122, 42, 127, 135, 2, 28, 45, 131, 13, 47, 99, 70, 40, 111, 116, 6, 8, 36]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[146, 38, 100, 106, 29, 120, 131, 13, 2, 135, 70, 40, 99, 47, 77, 51, 95, 4, 36, 145, 102, 32, 75, 12, 94, 125, 81, 49, 115, 43, 113, 143, 39, 53, 63, 1, 72, 67, 24, 80, 68, 66, 104, 141, 92, 27, 130, 97, 90, 108, 31, 10, 14, 16, 140, 73, 20, 71, 112, 62, 5, 48, 89, 0, 129, 91, 7, 41, 121, 79, 88, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 93, 18, 74, 52, 133, 78, 136, 87, 15, 21, 69, 105, 17, 23, 37, 103, 110, 101, 98, 126, 58, 35, 83, 9, 46, 44, 61, 76, 109, 59, 22, 149, 85, 26, 34, 11, 54, 148, 82, 56, 6, 8, 116, 139, 134, 84, 111, 28, 45, 122, 42, 127, 33, 119, 114, 19, 50, 124, 86, 144, 60, 57, 107, 147, 132, 137, 146]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[122, 42, 127, 135, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 85, 149, 61, 59, 76, 109, 19, 8, 116, 139, 134, 84, 67, 6, 56, 144, 86, 124, 50, 60, 80, 24, 43, 49, 113, 143, 63, 39, 53, 1, 72, 68, 107, 147, 141, 104, 66, 57, 46, 130, 92, 27, 129, 0, 62, 5, 48, 89, 18, 74, 52, 133, 78, 136, 105, 17, 23, 37, 103, 110, 101, 98, 126, 73, 20, 140, 58, 35, 83, 9, 71, 112, 108, 31, 90, 97, 22, 44, 16, 14, 10, 91, 7, 41, 121, 79, 88, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 93, 21, 87, 15, 69, 132, 137, 115, 81, 125, 94, 32, 75, 12, 145, 102, 77, 51, 95, 4, 36, 146, 38, 100, 106, 29, 120, 70, 40, 99, 47, 114, 119, 122]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[67, 72, 68, 39, 63, 43, 49, 113, 143, 1, 53, 137, 132, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 93, 21, 69, 87, 15, 52, 133, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 112, 58, 140, 126, 20, 73, 16, 14, 10, 31, 90, 97, 22, 44, 46, 108, 130, 0, 129, 91, 62, 27, 92, 147, 141, 104, 66, 57, 107, 60, 80, 24, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 26, 34, 85, 11, 54, 82, 33, 148, 114, 119, 122, 45, 127, 135, 13, 28, 131, 111, 106, 38, 100, 95, 77, 51, 4, 36, 146, 115, 81, 125, 94, 102, 32, 75, 12, 145, 29, 120, 84, 134, 139, 76, 109, 59, 61, 5, 48, 89, 18, 74, 7, 41, 88, 47, 99, 70, 40, 42, 2, 67]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[49, 115, 81, 125, 94, 145, 75, 12, 32, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 45, 122, 127, 135, 2, 28, 131, 13, 47, 99, 70, 40, 42, 119, 114, 116, 8, 139, 134, 84, 67, 72, 113, 43, 143, 1, 53, 39, 63, 68, 80, 24, 124, 50, 60, 144, 86, 56, 19, 149, 61, 34, 26, 85, 11, 54, 82, 33, 148, 6, 76, 109, 59, 22, 97, 90, 108, 46, 0, 129, 91, 62, 5, 48, 89, 18, 74, 7, 66, 107, 57, 104, 141, 147, 92, 27, 130, 112, 71, 20, 73, 140, 58, 126, 35, 23, 37, 110, 101, 98, 103, 17, 136, 78, 105, 15, 87, 133, 52, 69, 93, 21, 83, 9, 10, 31, 44, 16, 14, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 88, 41, 121, 79, 30, 137, 132, 51, 77, 95, 49]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[7, 41, 121, 79, 30, 137, 132, 147, 104, 66, 107, 57, 80, 24, 124, 50, 60, 144, 86, 56, 8, 116, 6, 11, 54, 82, 33, 148, 114, 119, 45, 122, 42, 2, 28, 131, 13, 47, 99, 70, 40, 135, 127, 111, 106, 100, 38, 120, 29, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 49, 115, 43, 143, 1, 53, 39, 63, 68, 113, 72, 67, 84, 139, 134, 26, 85, 34, 149, 61, 19, 76, 109, 59, 22, 97, 90, 108, 46, 0, 129, 91, 62, 5, 48, 89, 112, 71, 83, 9, 17, 136, 78, 105, 133, 52, 21, 15, 87, 93, 69, 64, 65, 128, 123, 25, 117, 3, 118, 74, 18, 23, 37, 110, 101, 98, 103, 35, 73, 140, 58, 126, 20, 10, 31, 44, 16, 14, 141, 27, 92, 130, 138, 142, 55, 96, 88, 7]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[83, 9, 112, 14, 16, 10, 31, 108, 46, 130, 97, 22, 90, 44, 73, 20, 71, 126, 58, 140, 35, 37, 110, 101, 98, 103, 23, 17, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 96, 118, 55, 138, 142, 79, 30, 41, 121, 137, 88, 132, 147, 141, 104, 66, 57, 27, 92, 107, 60, 24, 80, 50, 124, 144, 86, 6, 8, 56, 116, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 19, 76, 109, 59, 114, 119, 45, 122, 42, 127, 135, 13, 47, 51, 77, 95, 100, 38, 120, 29, 106, 111, 131, 28, 40, 70, 99, 2, 139, 134, 84, 67, 72, 43, 49, 115, 125, 81, 94, 75, 32, 145, 102, 12, 36, 4, 146, 113, 143, 1, 53, 39, 63, 68, 64, 65, 128, 123, 25, 117, 3, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[124, 50, 60, 24, 80, 86, 144, 6, 8, 116, 54, 82, 148, 11, 19, 149, 26, 85, 34, 61, 59, 109, 76, 56, 134, 84, 67, 72, 43, 49, 115, 1, 53, 39, 63, 143, 113, 81, 94, 75, 32, 12, 102, 145, 4, 146, 36, 51, 77, 95, 100, 38, 120, 29, 106, 111, 131, 28, 33, 114, 119, 127, 135, 13, 70, 99, 47, 2, 45, 42, 122, 40, 139, 68, 104, 141, 147, 66, 107, 57, 27, 92, 130, 97, 22, 90, 44, 108, 10, 14, 16, 58, 140, 73, 20, 71, 126, 35, 37, 110, 101, 98, 103, 23, 17, 78, 105, 89, 48, 5, 62, 46, 31, 83, 9, 112, 0, 129, 74, 96, 118, 142, 55, 138, 91, 41, 121, 79, 30, 88, 132, 7, 18, 133, 52, 15, 87, 136, 93, 21, 69, 65, 128, 123, 25, 117, 64, 3, 137, 125, 124]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[130, 27, 92, 104, 141, 147, 66, 107, 57, 24, 80, 60, 124, 50, 144, 86, 8, 116, 6, 19, 149, 85, 11, 26, 34, 56, 148, 82, 54, 33, 111, 131, 28, 2, 135, 13, 70, 99, 40, 127, 114, 119, 45, 42, 122, 134, 84, 100, 120, 29, 106, 38, 146, 36, 4, 77, 51, 95, 47, 102, 145, 32, 75, 12, 81, 94, 125, 72, 67, 139, 49, 115, 1, 53, 39, 63, 143, 113, 43, 68, 137, 132, 5, 62, 48, 138, 96, 74, 18, 133, 52, 15, 87, 105, 89, 9, 112, 0, 129, 7, 91, 41, 121, 79, 30, 88, 118, 142, 55, 3, 64, 65, 128, 123, 25, 117, 69, 21, 93, 78, 136, 23, 37, 103, 101, 98, 110, 17, 83, 35, 126, 73, 20, 71, 140, 58, 16, 14, 10, 31, 90, 44, 108, 97, 22, 59, 109, 76, 61, 46, 130]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[96, 55, 138, 79, 30, 88, 132, 137, 41, 121, 7, 91, 129, 0, 141, 147, 66, 104, 27, 92, 130, 108, 31, 140, 58, 73, 20, 71, 112, 62, 48, 5, 9, 83, 35, 103, 101, 98, 110, 17, 136, 78, 105, 89, 23, 37, 126, 14, 16, 10, 46, 90, 97, 22, 44, 76, 109, 61, 59, 149, 85, 11, 26, 34, 19, 6, 8, 116, 56, 86, 144, 60, 50, 124, 139, 134, 84, 67, 72, 49, 43, 113, 63, 143, 1, 53, 39, 68, 80, 24, 107, 57, 33, 82, 54, 148, 114, 119, 122, 42, 45, 2, 135, 70, 40, 127, 13, 47, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 81, 94, 125, 146, 38, 120, 29, 100, 106, 111, 131, 28, 99, 115, 74, 18, 52, 133, 87, 93, 21, 15, 69, 64, 65, 128, 123, 25, 117, 3, 142, 118, 96]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[1, 53, 39, 63, 143, 43, 113, 49, 115, 146, 38, 100, 106, 29, 120, 131, 28, 33, 82, 54, 148, 114, 119, 122, 42, 45, 2, 135, 13, 47, 99, 40, 70, 127, 111, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 56, 6, 19, 85, 11, 26, 34, 149, 61, 59, 76, 109, 97, 22, 90, 130, 92, 27, 104, 141, 147, 66, 57, 107, 137, 132, 41, 121, 79, 30, 88, 5, 48, 62, 0, 129, 91, 7, 74, 18, 52, 133, 87, 15, 21, 69, 78, 105, 89, 112, 73, 20, 71, 58, 140, 126, 37, 101, 98, 110, 17, 23, 103, 35, 83, 9, 136, 93, 65, 128, 123, 25, 117, 64, 3, 118, 96, 142, 55, 138, 46, 31, 108, 44, 16, 14, 10, 139, 134, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 1]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[37, 23, 17, 136, 93, 21, 69, 15, 87, 52, 133, 105, 89, 48, 5, 62, 0, 129, 91, 7, 138, 55, 142, 118, 96, 18, 65, 128, 123, 25, 117, 64, 3, 74, 41, 121, 79, 30, 88, 137, 132, 104, 141, 147, 66, 57, 107, 27, 92, 130, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 90, 97, 108, 44, 22, 76, 109, 149, 61, 59, 85, 11, 26, 34, 19, 6, 82, 54, 148, 114, 119, 122, 42, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 53, 39, 63, 143, 43, 113, 49, 72, 68, 80, 24, 60, 124, 50, 86, 144, 8, 56, 116, 134, 139, 67, 84, 115, 99, 70, 40, 13, 47, 135, 127, 33, 46, 9, 103, 35, 78, 110, 101, 98, 83, 37]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[52, 133, 105, 78, 136, 87, 15, 21, 69, 93, 103, 110, 101, 98, 83, 112, 71, 35, 37, 23, 17, 89, 48, 5, 62, 0, 129, 91, 7, 138, 55, 142, 118, 96, 74, 41, 121, 79, 30, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 76, 109, 149, 85, 11, 26, 34, 19, 6, 116, 8, 144, 86, 124, 50, 60, 80, 24, 56, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 2, 135, 127, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 53, 39, 63, 143, 43, 113, 49, 72, 68, 115, 84, 67, 28, 131, 13, 47, 99, 70, 40, 45, 61, 59, 22, 97, 108, 46, 90, 31, 140, 58, 20, 73, 126, 16, 14, 10, 44, 57, 107, 3, 64, 65, 128, 123, 25, 117, 18, 9, 52]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[61, 59, 109, 76, 130, 27, 92, 57, 50, 124, 24, 80, 68, 72, 49, 115, 84, 67, 38, 100, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 1, 53, 39, 63, 143, 43, 113, 86, 144, 60, 107, 141, 147, 66, 104, 7, 138, 55, 142, 118, 96, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 103, 110, 101, 98, 37, 23, 17, 105, 83, 9, 89, 48, 5, 62, 91, 129, 0, 108, 46, 112, 10, 31, 90, 97, 22, 44, 16, 14, 73, 58, 140, 126, 20, 71, 35, 3, 64, 65, 128, 25, 123, 117, 74, 41, 121, 79, 30, 88, 137, 132, 139, 33, 82, 54, 148, 114, 119, 122, 42, 127, 111, 106, 29, 120, 131, 13, 47, 99, 70, 40, 45, 2, 135, 11, 26, 34, 19, 149, 85, 8, 6, 116, 56, 134, 28, 61]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[81, 1, 53, 39, 63, 143, 113, 68, 72, 49, 115, 43, 125, 94, 12, 32, 75, 145, 102, 4, 36, 146, 77, 95, 51, 38, 100, 106, 29, 120, 131, 111, 33, 82, 54, 148, 114, 119, 122, 42, 127, 2, 135, 13, 47, 99, 70, 40, 28, 45, 139, 134, 60, 24, 80, 50, 124, 86, 144, 8, 116, 6, 56, 19, 149, 85, 11, 26, 34, 61, 59, 76, 109, 22, 44, 108, 46, 31, 90, 97, 14, 16, 10, 73, 58, 140, 126, 20, 112, 71, 35, 83, 9, 89, 48, 5, 62, 0, 129, 91, 7, 74, 18, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 17, 105, 37, 103, 110, 101, 98, 96, 55, 142, 79, 30, 88, 137, 132, 104, 141, 147, 66, 27, 92, 130, 138, 121, 41, 118, 3, 64, 65, 128, 25, 123, 117, 107, 57, 67, 84, 81]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[14, 16, 10, 73, 58, 140, 126, 20, 71, 9, 23, 17, 136, 78, 105, 52, 133, 93, 21, 69, 65, 128, 25, 123, 117, 3, 64, 96, 18, 89, 48, 5, 62, 0, 129, 147, 141, 104, 66, 27, 92, 130, 90, 108, 46, 31, 44, 22, 97, 109, 76, 59, 61, 85, 11, 26, 34, 149, 19, 56, 8, 116, 6, 82, 54, 148, 114, 119, 122, 42, 127, 2, 135, 13, 47, 99, 70, 40, 28, 45, 33, 131, 111, 120, 29, 100, 106, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 125, 81, 94, 143, 1, 53, 39, 63, 137, 132, 30, 88, 121, 41, 7, 91, 74, 142, 55, 79, 138, 118, 15, 87, 110, 101, 98, 103, 37, 35, 83, 112, 107, 57, 144, 86, 50, 124, 60, 24, 80, 113, 43, 49, 115, 84, 67, 72, 68, 134, 139, 14]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[110, 101, 98, 103, 23, 37, 136, 78, 105, 52, 133, 87, 15, 21, 69, 65, 128, 25, 123, 117, 3, 64, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 147, 141, 104, 66, 92, 27, 57, 107, 60, 50, 124, 86, 144, 8, 116, 6, 56, 26, 34, 149, 59, 109, 76, 19, 11, 148, 82, 54, 33, 134, 84, 67, 72, 49, 115, 81, 94, 125, 32, 12, 75, 145, 102, 36, 4, 95, 51, 77, 47, 99, 70, 40, 13, 135, 127, 122, 42, 45, 131, 111, 120, 29, 106, 38, 100, 139, 24, 80, 68, 143, 1, 53, 39, 63, 43, 113, 146, 28, 2, 119, 114, 85, 61, 97, 22, 44, 16, 14, 10, 108, 46, 130, 31, 90, 20, 73, 140, 58, 126, 35, 83, 112, 71, 62, 0, 129, 7, 91, 74, 18, 96, 118, 48, 5, 89, 9, 17, 93, 110]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[23, 37, 103, 110, 101, 98, 17, 93, 87, 15, 21, 69, 136, 78, 105, 89, 48, 5, 62, 0, 129, 92, 27, 57, 107, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 11, 148, 82, 54, 33, 139, 134, 84, 67, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 66, 104, 141, 147, 41, 121, 79, 30, 137, 132, 88, 55, 138, 74, 18, 96, 118, 117, 123, 25, 3, 64, 65, 128, 52, 133, 9, 83, 35, 112, 71, 140, 58, 73, 20, 126, 14, 16, 10, 31, 90, 108, 46, 130, 22, 44, 97, 59, 76, 109, 61, 149, 34, 26, 85, 122, 45, 28, 2, 42, 127, 135, 13, 70, 40, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 12, 75, 146, 94, 125, 81, 115, 38, 120, 29, 111, 131, 100, 106, 119, 114, 91, 7, 142, 23]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[97, 44, 31, 90, 108, 46, 22, 76, 109, 61, 149, 34, 85, 8, 6, 56, 144, 86, 124, 50, 60, 57, 27, 92, 147, 141, 104, 66, 130, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 59, 19, 116, 139, 134, 26, 11, 148, 82, 54, 33, 114, 119, 122, 45, 28, 131, 111, 120, 29, 100, 106, 38, 95, 77, 51, 4, 36, 146, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 72, 84, 81, 125, 94, 75, 12, 32, 145, 102, 47, 13, 99, 70, 40, 2, 42, 127, 135, 107, 137, 132, 88, 30, 41, 121, 79, 142, 55, 138, 74, 18, 3, 64, 65, 128, 52, 133, 87, 15, 21, 69, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 96, 118, 123, 25, 117, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[123, 25, 117, 64, 65, 128, 96, 118, 142, 55, 138, 74, 7, 91, 129, 0, 62, 48, 5, 89, 105, 136, 78, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 22, 97, 90, 108, 46, 112, 17, 133, 52, 18, 3, 69, 21, 15, 87, 93, 30, 79, 41, 121, 88, 132, 137, 147, 141, 104, 66, 130, 76, 109, 61, 149, 19, 116, 6, 8, 56, 144, 86, 124, 50, 139, 134, 84, 67, 143, 113, 43, 49, 72, 63, 68, 80, 24, 60, 57, 27, 92, 107, 53, 39, 1, 115, 81, 125, 94, 75, 12, 32, 145, 102, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 122, 42, 127, 135, 2, 13, 99, 70, 40, 47, 51, 77, 95, 148, 82, 54, 33, 114, 119, 11, 26, 85, 34, 59, 123]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[110, 101, 98, 103, 23, 37, 35, 83, 9, 17, 133, 52, 15, 87, 93, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 138, 74, 18, 89, 5, 48, 62, 46, 112, 71, 20, 73, 58, 140, 126, 16, 14, 10, 31, 44, 22, 97, 90, 108, 109, 76, 59, 61, 149, 85, 26, 148, 82, 54, 33, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 122, 42, 2, 135, 127, 114, 119, 34, 11, 19, 56, 6, 116, 8, 144, 86, 124, 50, 60, 80, 24, 107, 57, 66, 104, 147, 141, 27, 92, 129, 0, 91, 79, 30, 121, 41, 88, 7, 132, 63, 39, 53, 143, 113, 43, 115, 81, 125, 94, 75, 12, 32, 145, 102, 72, 49, 1, 68, 84, 67, 134, 139, 130, 137, 96, 105, 78, 136, 110]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[116, 6, 56, 8, 144, 86, 124, 50, 60, 80, 24, 107, 57, 27, 92, 129, 0, 91, 7, 121, 41, 88, 30, 79, 137, 132, 104, 147, 141, 66, 63, 39, 53, 143, 113, 43, 49, 1, 68, 72, 67, 134, 139, 82, 54, 148, 11, 19, 149, 85, 26, 34, 61, 59, 76, 109, 97, 90, 108, 31, 44, 22, 73, 58, 140, 126, 20, 71, 83, 35, 98, 103, 110, 101, 37, 23, 17, 136, 87, 93, 15, 21, 69, 105, 78, 133, 52, 18, 64, 65, 128, 25, 123, 117, 3, 118, 138, 55, 142, 96, 5, 48, 89, 112, 62, 74, 9, 46, 14, 16, 10, 130, 33, 114, 119, 122, 42, 2, 135, 127, 45, 28, 131, 111, 29, 120, 38, 100, 106, 51, 95, 77, 146, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 84, 47, 13, 70, 40, 99, 116]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[115, 84, 67, 29, 120, 38, 100, 106, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 1, 143, 63, 39, 53, 137, 132, 41, 121, 30, 79, 88, 7, 91, 129, 0, 62, 5, 48, 89, 112, 71, 83, 9, 46, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 98, 101, 103, 110, 37, 35, 23, 17, 93, 15, 21, 69, 52, 133, 87, 136, 105, 78, 18, 3, 118, 142, 96, 55, 74, 65, 128, 25, 123, 117, 64, 138, 147, 141, 104, 66, 57, 60, 24, 80, 50, 124, 86, 144, 8, 116, 6, 56, 19, 149, 85, 34, 61, 59, 76, 109, 26, 11, 148, 82, 54, 114, 119, 122, 42, 127, 135, 70, 40, 99, 47, 13, 2, 45, 28, 131, 111, 33, 134, 139, 72, 113, 43, 68, 107, 27, 92, 130, 115]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[45, 131, 111, 28, 2, 42, 127, 135, 13, 47, 99, 70, 40, 114, 119, 122, 148, 82, 54, 116, 6, 8, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 9, 46, 112, 0, 129, 62, 5, 48, 89, 78, 136, 105, 52, 133, 87, 15, 21, 69, 3, 118, 142, 96, 55, 138, 41, 121, 88, 79, 30, 132, 147, 141, 104, 66, 57, 107, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 7, 91, 74, 18, 65, 128, 25, 123, 117, 64, 17, 93, 103, 110, 37, 35, 23, 101, 98, 83, 130, 92, 27, 60, 124, 50, 86, 144, 24, 80, 139, 134, 84, 67, 38, 100, 106, 120, 29, 77, 51, 95, 146, 102, 145, 32, 75, 12, 125, 81, 94, 36, 4, 33, 45]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[112, 71, 20, 73, 58, 140, 126, 35, 23, 37, 83, 9, 89, 48, 62, 5, 91, 74, 18, 65, 128, 25, 123, 117, 64, 3, 118, 142, 96, 55, 138, 41, 121, 88, 79, 30, 7, 129, 0, 92, 27, 57, 107, 68, 72, 113, 43, 49, 115, 1, 143, 63, 39, 53, 137, 132, 147, 141, 104, 66, 24, 80, 60, 50, 124, 86, 144, 19, 11, 82, 54, 33, 148, 119, 114, 42, 127, 135, 2, 45, 122, 131, 111, 28, 13, 47, 99, 70, 40, 77, 51, 95, 146, 4, 36, 102, 145, 32, 75, 12, 125, 81, 94, 38, 100, 106, 120, 29, 84, 67, 134, 139, 8, 116, 6, 56, 85, 26, 34, 149, 61, 109, 76, 44, 108, 31, 90, 97, 22, 59, 130, 46, 14, 16, 10, 103, 110, 101, 98, 17, 136, 93, 69, 21, 15, 87, 133, 52, 105, 78, 112]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[139, 144, 86, 50, 124, 60, 24, 80, 68, 143, 63, 39, 53, 1, 43, 113, 49, 115, 145, 32, 75, 12, 125, 81, 94, 146, 4, 36, 102, 77, 51, 95, 38, 100, 106, 120, 29, 111, 28, 2, 45, 122, 42, 127, 131, 13, 47, 135, 70, 40, 99, 33, 148, 19, 11, 82, 54, 114, 119, 26, 34, 85, 61, 149, 76, 109, 59, 116, 6, 56, 8, 134, 84, 67, 72, 57, 27, 92, 0, 129, 7, 91, 5, 48, 62, 105, 78, 136, 93, 87, 15, 21, 69, 133, 52, 17, 23, 83, 9, 89, 112, 71, 20, 73, 58, 140, 126, 35, 103, 37, 110, 101, 98, 16, 14, 10, 31, 90, 97, 22, 108, 46, 130, 104, 66, 141, 147, 41, 121, 88, 79, 30, 138, 55, 142, 96, 74, 18, 25, 123, 117, 64, 65, 128, 3, 118, 132, 137, 107, 44, 139]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[123, 117, 64, 65, 128, 25, 142, 55, 79, 30, 88, 121, 41, 138, 91, 7, 129, 0, 62, 5, 48, 136, 78, 105, 89, 112, 71, 20, 73, 58, 140, 126, 35, 83, 9, 46, 90, 97, 22, 108, 31, 44, 76, 109, 59, 61, 149, 34, 85, 26, 11, 148, 82, 54, 56, 8, 116, 6, 144, 86, 50, 124, 60, 24, 80, 68, 57, 27, 92, 130, 104, 66, 141, 147, 107, 137, 132, 118, 3, 18, 52, 133, 87, 15, 21, 69, 93, 17, 23, 37, 110, 101, 98, 103, 10, 14, 16, 19, 119, 114, 2, 45, 122, 42, 127, 135, 70, 40, 99, 47, 13, 131, 111, 28, 29, 120, 106, 38, 100, 95, 77, 51, 146, 4, 36, 94, 81, 125, 32, 75, 12, 145, 102, 115, 49, 1, 113, 143, 63, 39, 53, 43, 72, 67, 84, 134, 139, 33, 74, 96, 123]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[140, 58, 73, 20, 71, 112, 89, 48, 5, 62, 91, 129, 0, 27, 92, 130, 104, 141, 147, 107, 137, 132, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 52, 133, 87, 15, 21, 69, 136, 78, 105, 9, 46, 108, 31, 44, 16, 14, 10, 90, 97, 22, 76, 109, 61, 59, 149, 34, 85, 26, 11, 19, 6, 56, 8, 116, 86, 144, 82, 54, 148, 119, 114, 2, 33, 28, 45, 122, 42, 127, 135, 70, 40, 99, 47, 13, 131, 111, 106, 38, 100, 95, 77, 51, 36, 4, 146, 125, 94, 81, 12, 75, 32, 145, 102, 120, 29, 84, 134, 139, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 57, 66, 88, 30, 79, 7, 18, 74, 83, 37, 23, 98, 103, 35, 126, 101, 110, 17, 93, 140]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[133, 52, 105, 78, 136, 93, 87, 15, 21, 69, 3, 118, 142, 55, 79, 30, 88, 121, 41, 138, 96, 74, 7, 91, 5, 48, 89, 9, 83, 37, 23, 103, 101, 110, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 0, 129, 141, 147, 107, 57, 104, 66, 92, 27, 130, 46, 90, 108, 31, 44, 16, 14, 10, 97, 22, 59, 61, 76, 109, 86, 144, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 32, 12, 145, 102, 4, 36, 77, 51, 95, 100, 120, 29, 106, 111, 28, 45, 122, 42, 127, 135, 70, 40, 99, 47, 13, 131, 2, 33, 82, 54, 148, 119, 114, 134, 139, 116, 8, 6, 11, 19, 149, 34, 85, 26, 56, 84, 38, 146, 137, 132, 18, 65, 128, 25, 123, 117, 64, 17, 133]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[79, 30, 138, 55, 142, 3, 64, 65, 128, 25, 123, 117, 118, 41, 121, 7, 91, 129, 0, 5, 48, 71, 112, 62, 89, 74, 18, 133, 52, 17, 136, 87, 15, 21, 69, 93, 23, 103, 101, 110, 98, 35, 37, 78, 105, 9, 83, 20, 73, 140, 58, 126, 14, 16, 10, 97, 22, 59, 61, 76, 109, 34, 85, 26, 82, 54, 148, 134, 33, 116, 139, 144, 86, 56, 6, 8, 60, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 125, 81, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 106, 100, 84, 67, 120, 29, 38, 146, 94, 111, 131, 28, 45, 2, 135, 70, 40, 99, 47, 13, 42, 127, 122, 114, 119, 11, 19, 149, 90, 108, 31, 44, 46, 130, 92, 27, 104, 66, 141, 147, 107, 57, 132, 137, 88, 96, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[137, 132, 41, 121, 30, 79, 88, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 136, 17, 78, 105, 89, 48, 5, 112, 73, 20, 58, 140, 126, 35, 37, 23, 83, 9, 46, 130, 92, 27, 104, 66, 141, 147, 107, 57, 60, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 146, 38, 120, 29, 100, 106, 111, 131, 28, 45, 2, 135, 122, 42, 127, 70, 40, 99, 47, 13, 51, 77, 95, 4, 36, 12, 75, 32, 145, 102, 81, 94, 125, 67, 84, 33, 114, 119, 82, 54, 148, 11, 26, 85, 19, 149, 34, 61, 59, 22, 90, 108, 31, 44, 97, 109, 76, 86, 144, 50, 124, 116, 8, 6, 56, 139, 134, 0, 129, 91, 7, 96, 142, 55, 138, 74, 18, 133, 52, 93, 110, 101, 98, 103, 71, 10, 16, 14, 62, 137]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[24, 80, 68, 72, 67, 84, 38, 146, 36, 4, 77, 95, 51, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 42, 122, 127, 114, 119, 148, 82, 54, 6, 116, 56, 19, 149, 34, 85, 26, 11, 8, 86, 144, 124, 50, 60, 107, 66, 141, 147, 41, 121, 88, 30, 79, 55, 142, 96, 74, 48, 5, 62, 0, 129, 91, 138, 118, 64, 65, 128, 25, 123, 117, 3, 87, 52, 133, 18, 89, 105, 136, 93, 21, 69, 15, 17, 78, 37, 23, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 35, 14, 16, 10, 97, 90, 108, 31, 46, 22, 44, 61, 59, 109, 76, 139, 134, 33, 57, 104, 92, 27, 130, 7, 132, 137, 63, 39, 53, 1, 143, 43, 113, 49, 115, 81, 125, 94, 75, 32, 145, 12, 102, 24]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[34, 85, 26, 11, 8, 6, 116, 56, 19, 82, 54, 33, 148, 119, 114, 122, 127, 42, 45, 2, 135, 13, 47, 99, 70, 40, 95, 77, 51, 4, 36, 146, 81, 125, 94, 12, 102, 145, 32, 75, 115, 1, 143, 63, 39, 53, 137, 132, 7, 91, 55, 142, 96, 74, 48, 5, 62, 0, 129, 141, 147, 41, 121, 88, 30, 79, 138, 118, 64, 65, 128, 25, 123, 117, 3, 87, 52, 133, 18, 89, 105, 78, 136, 93, 21, 69, 15, 17, 101, 98, 103, 110, 37, 23, 83, 9, 112, 46, 27, 92, 57, 104, 66, 107, 60, 50, 124, 86, 144, 139, 134, 120, 29, 100, 106, 111, 131, 28, 84, 38, 113, 49, 43, 72, 67, 68, 80, 24, 76, 109, 59, 61, 149, 22, 97, 31, 90, 108, 10, 14, 16, 140, 58, 73, 20, 71, 35, 126, 44, 130, 34]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[49, 1, 143, 113, 43, 72, 67, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 135, 127, 99, 70, 40, 13, 47, 95, 77, 51, 4, 36, 146, 32, 75, 12, 102, 145, 94, 125, 81, 115, 63, 39, 53, 68, 24, 80, 50, 60, 124, 86, 144, 56, 8, 6, 116, 139, 134, 33, 148, 54, 82, 45, 122, 42, 114, 119, 26, 34, 85, 11, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 35, 37, 23, 83, 9, 112, 62, 18, 89, 48, 5, 74, 138, 55, 142, 96, 118, 64, 65, 128, 25, 123, 117, 3, 52, 133, 78, 136, 17, 101, 98, 103, 110, 105, 87, 15, 21, 69, 93, 126, 46, 130, 27, 92, 0, 129, 91, 7, 121, 41, 30, 79, 88, 132, 137, 107, 57, 147, 141, 104, 66, 44, 49]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[9, 112, 71, 35, 37, 23, 17, 15, 87, 52, 133, 78, 105, 89, 18, 74, 96, 118, 142, 55, 79, 88, 121, 41, 30, 138, 3, 65, 64, 128, 25, 123, 117, 69, 21, 136, 93, 110, 101, 103, 98, 73, 20, 140, 58, 126, 14, 16, 10, 31, 97, 22, 90, 108, 46, 130, 27, 92, 57, 60, 50, 124, 86, 144, 56, 8, 6, 116, 139, 134, 33, 148, 54, 82, 11, 19, 149, 61, 59, 76, 109, 85, 26, 34, 119, 114, 42, 45, 122, 2, 135, 127, 99, 70, 40, 13, 47, 77, 51, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 49, 1, 143, 63, 39, 53, 113, 72, 67, 84, 120, 29, 100, 106, 38, 111, 131, 28, 24, 80, 68, 107, 141, 104, 66, 147, 137, 132, 7, 91, 129, 0, 62, 5, 48, 83, 44, 9]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[50, 124, 80, 24, 113, 68, 39, 53, 63, 143, 43, 49, 72, 67, 84, 120, 29, 100, 106, 38, 111, 131, 28, 33, 82, 54, 148, 11, 19, 149, 61, 109, 76, 59, 31, 44, 97, 22, 90, 108, 46, 62, 5, 48, 89, 18, 74, 96, 118, 142, 55, 79, 30, 138, 3, 65, 64, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 105, 136, 93, 103, 98, 101, 110, 37, 23, 17, 35, 126, 140, 58, 73, 20, 71, 112, 9, 83, 10, 14, 16, 130, 27, 92, 57, 66, 141, 104, 147, 88, 121, 41, 0, 129, 7, 91, 132, 137, 144, 86, 6, 116, 8, 56, 34, 85, 26, 119, 114, 42, 45, 122, 2, 135, 127, 99, 70, 40, 13, 47, 51, 95, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 107, 60, 134, 139, 50]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[131, 111, 28, 33, 54, 82, 148, 11, 19, 149, 61, 109, 76, 59, 31, 130, 27, 92, 57, 124, 50, 139, 134, 84, 67, 49, 115, 1, 143, 43, 113, 68, 72, 63, 39, 53, 137, 132, 30, 79, 121, 88, 41, 138, 55, 142, 118, 3, 65, 64, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 78, 105, 136, 93, 103, 98, 101, 110, 37, 23, 17, 35, 126, 140, 58, 73, 20, 71, 112, 9, 83, 10, 14, 16, 44, 97, 22, 90, 108, 46, 62, 5, 48, 89, 18, 74, 96, 7, 91, 129, 0, 141, 104, 147, 66, 107, 60, 24, 80, 86, 144, 6, 116, 8, 56, 34, 85, 26, 119, 114, 42, 2, 45, 122, 135, 127, 99, 70, 40, 13, 47, 51, 95, 77, 4, 36, 146, 81, 125, 94, 75, 12, 32, 145, 102, 120, 29, 106, 38, 100, 131]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CADTSP mmas_cadtsp = new MMAS_CADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(34226.614622602094);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 146, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 34, 149, 19, 144, 86, 50, 124, 57, 107, 137, 132, 41, 121, 30, 79, 88, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108]");

        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 50, 37282.36435606544, 2970.0392438922113, 0.49666666666666665, 11.711020408163265, 34600.50485469094);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 100, 37500.64198646819, 3478.4622791748193, 0.5, 15.525714285714285, 33674.46249158464);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 101, 37170.58663391742, 2581.0816991153856, 0.5, 16.398367346938777, 33674.46249158465);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 150, 36753.260119300176, 3600.336168185437, 0.5033333333333333, 11.672653061224489, 33537.067018928705);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 200, 37083.112433110626, 3000.6217420112234, 0.5, 11.429387755102042, 33032.50463279827);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 201, 47022.229368711596, 2209.4826146653745, 0.47333333333333333, 49.16, 43071.40739064906);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 250, 42337.7002008733, 2667.443988877172, 0.52, 24.5534693877551, 36542.13304684111);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 300, 37882.837671554524, 3367.1131399083, 0.5, 10.875918367346939, 34429.32937987631);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 301, 50074.65435747213, 2641.5251417327377, 0.4866666666666667, 46.075102040816326, 45023.130775340425);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 350, 41131.28501804596, 2959.698106368924, 0.5133333333333333, 18.455510204081634, 35828.532210983394);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 400, 38293.23402916951, 2850.319435093505, 0.5133333333333333, 10.559183673469388, 34758.77683377535);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 401, 49532.607459914994, 2846.0510751678216, 0.5033333333333333, 37.63183673469388, 44536.953728392444);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 450, 40787.6904951639, 3663.4156407595524, 0.5, 13.53795918367347, 36054.73131411481);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 500, 38479.695552739206, 3414.471420753084, 0.5, 13.663673469387755, 35620.070647864275);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 501, 47116.54749512689, 3303.623560140321, 0.47333333333333333, 51.991020408163266, 42165.76504129048);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 550, 39019.89720767955, 3004.8624159362384, 0.49666666666666665, 18.84979591836735, 34879.938497679395);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 600, 37610.81218568909, 3514.2460824171744, 0.49666666666666665, 15.57469387755102, 33554.225267737405);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 601, 48745.61102689176, 2935.2835959296253, 0.48, 48.05795918367347, 43536.67475497762);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 650, 38863.16010982787, 3214.438741082119, 0.5066666666666667, 12.845714285714285, 33785.623765645905);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 700, 35714.54708277029, 3915.38202425637, 0.5, 8.81469387755102, 32703.039307943953);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 701, 50531.54049405027, 3289.649263196265, 0.47, 51.009795918367345, 44177.82682105816);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 750, 39020.19337467534, 3319.5426632464023, 0.5133333333333333, 11.040816326530612, 35774.06928211677);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 800, 37299.55036490103, 3250.1522329053782, 0.5, 13.827755102040816, 34100.26680431631);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 801, 49607.54109667045, 2412.107127391805, 0.4766666666666667, 49.25224489795919, 44865.90073976301);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 850, 40855.668301775004, 3321.263283897978, 0.5033333333333333, 19.31591836734694, 36629.649867385204);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 900, 38217.689049884335, 3460.562591163494, 0.5, 9.29061224489796, 35348.31077818382);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 901, 48472.92106463751, 2950.698012925917, 0.4666666666666667, 56.00163265306122, 42510.076185588434);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 950, 38876.18764225023, 2839.450894512913, 0.51, 16.906938775510206, 35487.03654467907);
        TestUtils.checkValues(mmas_cadtsp.getIterationStatistics(), 1000, 37633.64627840502, 3007.588192912338, 0.5, 11.674285714285714, 34226.614622602094);

        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[56, 11, 26, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 140, 73, 20, 71, 126, 58, 35, 103, 37, 101, 98, 110, 23, 17, 136, 87, 15, 21, 69, 93, 52, 133, 78, 105, 89, 48, 5, 91, 7, 121, 41, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 9, 83, 46, 44, 14, 16, 112, 62, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 50, 124, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 68, 72, 67, 113, 63, 39, 53, 1, 143, 137, 132, 107, 86, 144, 8, 116, 6, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 2, 45, 28, 127, 33, 34, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 46, 20, 71, 126, 58, 140, 73, 83, 9, 89, 48, 5, 91, 7, 121, 41, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 101, 98, 110, 103, 35, 112, 62, 0, 129, 130, 92, 27, 104, 141, 147, 66, 57, 60, 24, 80, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 68, 72, 67, 113, 63, 39, 53, 1, 143, 137, 132, 107, 19, 149, 34, 61]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[141, 147, 66, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 46, 20, 71, 126, 58, 140, 73, 83, 9, 89, 48, 5, 91, 7, 121, 41, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 112, 62, 0, 129, 130, 92, 27, 104, 107, 137, 132, 141]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[104, 141, 147, 66, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 104]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[104, 141, 147, 66, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 148, 54, 82, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 104]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 66, 57, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 10, 14, 16, 44, 46, 112, 62, 0, 129, 130, 92, 27, 104, 141, 107]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 127, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 111, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 33, 139, 134, 84, 38, 100, 131]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 111, 131, 28, 45, 2, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 111, 131, 28, 2, 45, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 111, 131, 28, 2, 45, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 86, 144, 8, 116, 6, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 111, 131, 28, 2, 45, 33, 139, 134, 84, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 144, 86, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 138, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 126, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 124, 50, 144, 86, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 126, 73, 20, 71, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 124, 50, 144, 86, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 146, 32, 145, 102, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 126, 73, 20, 71, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 86, 144, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 126, 73, 20, 71, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 86, 144, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[39, 53, 1, 143, 68, 72, 67, 24, 80, 139, 134, 84, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 116, 6, 8, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 46, 112, 62, 0, 129, 130, 92, 27, 107, 137, 132, 41, 121, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 126, 73, 20, 71, 83, 9, 89, 48, 5, 91, 7, 147, 141, 104, 66, 57, 60, 50, 124, 86, 144, 56, 11, 26, 85, 148, 82, 54, 114, 119, 122, 42, 127, 135, 13, 70, 40, 99, 47, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 113, 63, 39]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[78, 105, 17, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 126, 20, 73, 10, 14, 16, 90, 108, 31, 44, 97, 22, 76, 109, 26, 85, 34, 61, 59, 149, 19, 11, 54, 82, 148, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 139, 134, 84, 67, 72, 113, 143, 68, 39, 53, 1, 63, 115, 49, 43, 81, 146, 102, 145, 32, 12, 75, 94, 125, 4, 36, 77, 51, 95, 29, 120, 106, 100, 38, 111, 131, 28, 2, 45, 42, 127, 135, 13, 99, 47, 114, 119, 122, 40, 70, 27, 92, 57, 107, 137, 132, 41, 121, 30, 79, 88, 91, 7, 147, 141, 104, 66, 130, 0, 129, 48, 5, 62, 46, 89, 133, 52, 18, 3, 64, 65, 128, 123, 25, 117, 118, 74, 96, 142, 55, 138, 112, 71, 83, 9, 78]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 76, 109, 59, 149, 26, 85, 34, 61, 19, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 13, 99, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 39, 53, 1, 63, 115, 49, 72, 67, 84, 134, 139, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 17, 136, 87, 15, 93, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 126, 10, 14, 16, 90, 112, 71, 83, 9, 52, 133, 74, 7, 91, 138, 18]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[139, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 17, 136, 87, 15, 93, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 74, 7, 91, 138, 18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 14, 16, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 13, 99, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 70, 40, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[72, 67, 84, 134, 139, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 17, 136, 87, 15, 93, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 74, 7, 91, 138, 18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 2, 70, 40, 99, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 13, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[72, 67, 84, 134, 139, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 17, 136, 87, 15, 93, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 74, 7, 91, 138, 18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 2, 70, 40, 99, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 13, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[72, 67, 84, 134, 139, 33, 116, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 17, 136, 87, 15, 93, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 74, 7, 91, 138, 18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 2, 70, 40, 99, 47, 77, 51, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 13, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[136, 87, 15, 93, 17, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 74, 7, 91, 138, 18, 89, 48, 5, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 135, 2, 70, 40, 99, 47, 13, 28, 45, 111, 131, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139, 6, 116, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 136]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[74, 7, 138, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 78, 105, 136, 87, 15, 93, 17, 23, 37, 110, 101, 98, 103, 35, 83, 9, 52, 133, 18, 89, 48, 5, 91, 62, 46, 108, 31, 44, 97, 22, 90, 112, 71, 20, 73, 58, 140, 126, 10, 16, 14, 109, 76, 59, 61, 19, 85, 34, 149, 26, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 135, 2, 70, 40, 99, 47, 13, 28, 45, 111, 131, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139, 6, 116, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 121, 41, 30, 79, 88, 74]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[78, 105, 136, 87, 15, 93, 17, 23, 37, 110, 101, 98, 103, 35, 83, 9, 71, 20, 73, 58, 140, 126, 10, 16, 14, 112, 5, 48, 62, 46, 108, 31, 44, 97, 90, 22, 76, 109, 59, 61, 19, 85, 34, 149, 26, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 135, 2, 70, 40, 99, 47, 13, 28, 45, 111, 131, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139, 6, 116, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 7, 138, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 133, 52, 18, 89, 74, 30, 79, 88, 41, 121, 91, 78]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[91, 74, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 133, 52, 78, 105, 136, 87, 15, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 10, 16, 14, 112, 89, 18, 48, 5, 62, 46, 108, 31, 44, 97, 90, 22, 76, 109, 59, 61, 19, 85, 34, 149, 26, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 135, 2, 70, 40, 99, 47, 13, 28, 45, 111, 131, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 81, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 72, 67, 84, 134, 139, 6, 116, 8, 56, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 137, 132, 7, 138, 55, 118, 142, 79, 88, 41, 121, 30, 91]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[82, 33, 114, 119, 122, 42, 127, 135, 2, 70, 40, 99, 47, 13, 28, 45, 131, 29, 120, 106, 111, 134, 139, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 84, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 43, 113, 143, 63, 39, 53, 1, 115, 49, 81, 107, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 41, 121, 30, 79, 55, 118, 142, 96, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 133, 52, 78, 105, 136, 93, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 74, 91, 48, 5, 62, 46, 108, 31, 44, 97, 90, 22, 76, 109, 59, 61, 19, 85, 34, 149, 26, 11, 148, 54, 6, 116, 8, 56, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 18, 138, 7, 132, 88, 137, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 31, 90, 108, 44, 97, 22, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 93, 21, 15, 87, 133, 52, 78, 105, 65, 128, 123, 25, 117, 69, 64, 3, 118, 142, 96, 138, 7, 91, 74, 18, 55, 79, 30, 88, 41, 121, 132, 137, 57, 27, 92, 130, 0, 129, 141, 104, 66, 147, 107, 68, 72, 67, 84, 134, 139, 144, 86, 50, 124, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 115, 49, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[57, 27, 92, 130, 0, 129, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 50, 124, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 115, 49, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 31, 90, 108, 44, 97, 22, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 93, 21, 15, 87, 133, 52, 78, 105, 65, 128, 123, 25, 117, 69, 64, 3, 118, 142, 96, 138, 7, 91, 74, 18, 55, 79, 30, 88, 41, 121, 132, 137, 147, 57]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 31, 130, 0, 129, 27, 92, 57, 22, 97, 90, 108, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 93, 21, 15, 87, 133, 52, 78, 105, 65, 128, 123, 25, 117, 69, 64, 3, 118, 142, 96, 138, 7, 91, 74, 18, 55, 79, 30, 88, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 115, 49, 81, 125, 94, 75, 12, 32, 102]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 65, 128, 123, 25, 117, 69, 64, 3, 118, 142, 96, 138, 7, 91, 74, 18, 55, 79, 30, 88, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 65, 128, 123, 25, 117, 69, 64, 3, 118, 142, 55, 79, 30, 88, 7, 91, 74, 18, 96, 138, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[3, 118, 142, 55, 79, 30, 88, 7, 91, 18, 74, 96, 138, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 69, 87, 65, 128, 123, 25, 117, 64, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 79, 30, 88, 7, 91, 18, 74, 96, 138, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 103, 110, 101, 98, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 79, 30, 88, 7, 91, 18, 74, 96, 138, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 27, 92, 57, 22, 97, 90, 108, 31, 130, 46, 9, 83, 35, 37, 23, 101, 98, 103, 110, 17, 136, 78, 105, 96, 74, 18, 15, 87, 52, 133, 93, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 79, 30, 88, 7, 91, 138, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 143, 63, 39, 53, 1, 49, 115, 81, 125, 94, 75, 12, 32]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[3, 118, 96, 74, 18, 142, 55, 79, 30, 88, 41, 121, 132, 137, 147, 141, 104, 66, 107, 68, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 113, 43, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 61, 76, 109, 59, 44, 90, 108, 31, 97, 22, 14, 16, 10, 140, 58, 73, 20, 71, 126, 112, 89, 48, 5, 62, 0, 129, 91, 138, 7, 27, 92, 57, 39, 53, 63, 1, 143, 130, 46, 9, 83, 35, 37, 23, 101, 98, 103, 110, 17, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 65, 128, 25, 123, 117, 64, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[55, 79, 30, 88, 41, 121, 132, 147, 141, 104, 66, 107, 68, 39, 53, 43, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 38, 113, 143, 63, 72, 1, 137, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[142, 55, 79, 30, 121, 41, 88, 132, 147, 141, 104, 66, 107, 68, 39, 53, 143, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 38, 72, 1, 137, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 70, 40, 99, 47, 13, 135, 127, 114, 119, 148, 54, 82, 33, 56, 8, 116, 6, 11, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 38, 120]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 56, 8, 116, 6, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 15, 21, 87, 93, 69, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[146, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 56, 8, 116, 6, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 129, 0, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 62, 138, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 62, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 0, 129, 18, 64, 65, 128, 25, 123, 117, 3, 118, 96, 74, 138, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36, 4, 77, 51, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 114, 119, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 59, 61, 76, 109, 22, 97, 90, 108, 10, 14, 16, 31, 44, 46, 130, 27, 92, 57, 107, 66, 104, 147, 141, 7, 91, 62, 5, 48, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 0, 129, 18, 64, 65, 128, 25, 123, 117, 3, 118, 96, 74, 138, 142, 55, 79, 30, 121, 41, 88, 132, 137, 63, 113, 43, 143, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[5, 48, 89, 62, 0, 129, 91, 7, 121, 41, 88, 132, 137, 30, 79, 55, 138, 142, 96, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 15, 21, 69, 93, 103, 110, 101, 98, 35, 37, 23, 17, 136, 78, 105, 52, 133, 87, 9, 83, 58, 140, 73, 20, 71, 112, 126, 14, 16, 31, 44, 108, 90, 97, 22, 109, 76, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 59, 61, 114, 119, 122, 42, 2, 40, 70, 99, 47, 13, 135, 127, 131, 28, 45, 111, 106, 29, 120, 38, 100, 95, 51, 77, 146, 36, 4, 32, 102, 145, 12, 75, 94, 125, 81, 1, 53, 39, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 84, 67, 72, 49, 115, 43, 143, 113, 63, 107, 66, 104, 147, 141, 27, 92, 57, 130, 46, 10, 5]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[70, 40, 99, 47, 13, 135, 122, 114, 119, 11, 148, 54, 82, 33, 116, 6, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 22, 97, 90, 108, 31, 44, 46, 10, 14, 16, 140, 73, 20, 71, 112, 126, 58, 9, 83, 35, 37, 23, 17, 136, 78, 105, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 89, 62, 5, 48, 74, 18, 64, 65, 128, 25, 123, 117, 3, 118, 142, 96, 55, 138, 7, 121, 41, 88, 132, 137, 30, 79, 147, 141, 27, 92, 57, 130, 0, 129, 91, 66, 104, 107, 139, 134, 84, 67, 124, 50, 144, 86, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 94, 125, 146, 36, 4, 32, 145, 102, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 94, 125, 146, 36, 4, 32, 145, 102, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 93, 87, 15, 21, 52, 133, 78, 105, 89, 62, 5, 48, 74, 18, 136, 17, 101, 98, 103, 110, 23, 37, 35, 58, 140, 73, 20, 71, 112, 126, 83, 9, 46, 10, 14, 16, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[46, 10, 14, 16, 90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 94, 125, 146, 36, 4, 32, 145, 102, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 93, 87, 15, 21, 52, 133, 78, 105, 89, 62, 5, 48, 74, 18, 136, 17, 101, 98, 103, 110, 23, 37, 35, 83, 9, 112, 126, 58, 140, 73, 20, 71, 46]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[46, 10, 14, 16, 90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 94, 125, 146, 36, 4, 32, 145, 102, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 93, 87, 15, 21, 52, 133, 78, 105, 89, 62, 5, 48, 74, 18, 136, 17, 101, 98, 103, 110, 23, 37, 35, 83, 9, 112, 126, 58, 140, 73, 20, 71, 46]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 94, 125, 146, 36, 4, 32, 145, 102, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 93, 87, 15, 21, 52, 133, 78, 105, 89, 62, 5, 48, 74, 18, 136, 17, 101, 98, 103, 110, 23, 37, 35, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 46, 90]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[3, 64, 65, 128, 123, 25, 117, 69, 93, 87, 15, 21, 78, 105, 89, 62, 5, 48, 74, 18, 133, 52, 136, 17, 101, 98, 103, 110, 23, 37, 35, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 46, 90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[25, 117, 123, 128, 64, 65, 69, 93, 87, 15, 21, 78, 105, 89, 62, 5, 48, 74, 18, 133, 52, 136, 17, 37, 35, 23, 103, 110, 101, 98, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 46, 90, 108, 31, 44, 97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 25]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[97, 22, 59, 76, 109, 149, 85, 26, 34, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 33, 139, 134, 84, 67, 107, 147, 66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 93, 87, 15, 21, 78, 105, 89, 62, 5, 48, 74, 18, 133, 52, 136, 17, 37, 35, 98, 101, 103, 110, 23, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 46, 90, 108, 31, 44, 97]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[66, 104, 141, 27, 92, 57, 130, 0, 129, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 93, 87, 15, 21, 78, 105, 89, 62, 5, 48, 74, 18, 133, 52, 136, 17, 37, 35, 98, 101, 103, 110, 23, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 46, 90, 108, 31, 44, 97, 22, 59, 76, 109, 61, 19, 6, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 68, 72, 49, 115, 43, 143, 113, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 26, 34, 149, 85, 33, 139, 134, 84, 67, 107, 147, 66]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[83, 9, 48, 5, 18, 133, 52, 136, 17, 37, 23, 103, 110, 101, 98, 35, 58, 140, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 0, 129, 91, 7, 138, 55, 142, 96, 118, 3, 64, 65, 117, 123, 25, 128, 69, 21, 15, 87, 78, 105, 89, 74, 112, 71, 20, 73, 27, 92, 57, 107, 147, 141, 104, 66, 88, 30, 79, 121, 41, 132, 137, 68, 72, 49, 115, 43, 113, 143, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 26, 34, 149, 85, 33, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 139, 134, 84, 67, 6, 19, 109, 76, 59, 61, 62, 93, 83]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[89, 74, 96, 118, 142, 55, 79, 30, 147, 141, 104, 66, 27, 92, 57, 107, 68, 72, 49, 115, 43, 113, 143, 63, 39, 53, 1, 81, 12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 42, 127, 70, 40, 99, 47, 13, 135, 122, 114, 119, 82, 54, 148, 11, 26, 34, 149, 85, 33, 8, 116, 56, 86, 144, 50, 124, 60, 24, 80, 139, 134, 84, 67, 6, 19, 109, 76, 59, 61, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 0, 129, 91, 138, 121, 41, 88, 132, 137, 7, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[12, 75, 32, 145, 102, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 19, 56, 86, 144, 50, 124, 60, 24, 80, 139, 134, 84, 67, 6, 8, 116, 33, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 137, 7, 138, 121, 41, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 72, 49, 115, 43, 113, 143, 63, 39, 53, 1, 81, 12]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[134, 84, 67, 72, 49, 115, 43, 113, 143, 63, 39, 53, 1, 81, 12, 145, 102, 32, 75, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 109, 76, 19, 56, 144, 86, 50, 124, 60, 24, 80, 139, 8, 116, 6, 33, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 20, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 134]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 8, 116, 6, 33, 54, 82, 134, 139, 84, 67, 72, 49, 115, 43, 113, 143, 63, 39, 53, 1, 81, 12, 145, 102, 32, 75, 94, 125, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 26, 85, 34, 149, 61, 59, 109, 76, 19, 56, 148, 11, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[94, 125, 81, 12, 145, 102, 32, 75, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 26, 85, 34, 149, 61, 59, 109, 76, 22, 90, 97, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 54, 82, 33, 148, 11, 19, 56, 8, 6, 116, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 72, 49, 115, 94]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[72, 49, 113, 143, 63, 39, 53, 1, 115, 94, 125, 81, 12, 145, 102, 32, 75, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 54, 82, 33, 148, 11, 19, 56, 8, 6, 116, 139, 134, 84, 67, 43, 72]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[53, 1, 115, 94, 125, 81, 146, 102, 32, 75, 12, 145, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 54, 82, 33, 148, 11, 19, 56, 8, 6, 116, 139, 134, 84, 67, 43, 72, 49, 113, 143, 63, 39, 53]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[12, 145, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 54, 82, 33, 148, 11, 19, 56, 8, 6, 116, 139, 134, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 94, 125, 81, 146, 102, 32, 75, 12]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[110, 101, 98, 35, 83, 9, 78, 105, 136, 133, 52, 93, 87, 15, 21, 69, 128, 25, 123, 117, 64, 65, 3, 18, 89, 74, 96, 118, 142, 55, 79, 30, 7, 138, 121, 41, 137, 88, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 80, 24, 60, 124, 50, 86, 144, 139, 134, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 94, 125, 81, 146, 102, 32, 75, 12, 145, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 127, 40, 70, 99, 47, 13, 122, 114, 119, 54, 82, 33, 148, 11, 19, 56, 8, 6, 116, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 130, 0, 129, 91, 62, 5, 48, 17, 37, 23, 103, 110]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[11, 19, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 58, 140, 126, 71, 112, 46, 0, 129, 91, 62, 5, 48, 9, 78, 105, 136, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 79, 30, 88, 132, 147, 141, 104, 66, 107, 60, 124, 50, 86, 144, 6, 116, 8, 56, 34, 149, 85, 26, 148, 82, 33, 54, 139, 134, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 68, 80, 24, 57, 130, 27, 92, 41, 121, 138, 96, 74, 18, 89, 37, 23, 103, 110, 101, 98, 35, 83, 17, 7, 137, 125, 94, 75, 12, 145, 102, 32, 81, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 42, 122, 114, 119, 127, 99, 47, 13, 70, 40, 11]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[148, 82, 33, 54, 139, 134, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 62, 5, 48, 9, 78, 105, 136, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 37, 23, 110, 101, 98, 103, 35, 83, 17, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 61, 59, 109, 76, 149, 85, 26, 34, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 80, 24, 57, 11, 148]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[148, 82, 33, 54, 139, 134, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 62, 5, 48, 9, 78, 105, 136, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 37, 23, 110, 101, 98, 103, 35, 83, 17, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 61, 59, 109, 76, 149, 85, 26, 34, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 80, 24, 57, 11, 148]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 105, 133, 52, 93, 21, 87, 136, 78, 17, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 109, 76, 61, 59, 11, 148, 82, 33, 54, 139, 134, 84, 67, 24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 23, 37, 103, 110, 101, 98, 15]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[76, 109, 59, 11, 148, 82, 33, 54, 139, 134, 84, 67, 24, 80, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 28, 131, 111, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 61, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 11, 82, 148, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 131, 111, 28, 33, 54, 139, 134, 84, 67, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 124]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 11, 82, 148, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 131, 111, 28, 33, 54, 139, 134, 84, 67, 106, 29, 120, 100, 95, 51, 77, 4, 36, 146, 38, 102, 32, 12, 145, 75, 94, 125, 81, 1, 115, 68, 72, 43, 49, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 23, 37, 103, 110, 101, 98, 17, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 124]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[43, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 17, 101, 98, 103, 110, 37, 23, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 11, 82, 148, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 131, 111, 28, 33, 54, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 75, 12, 145, 102, 32, 36, 146, 4, 77, 51, 95, 38, 100, 120, 29, 106, 68, 1, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[43, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 17, 101, 98, 103, 110, 37, 23, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 11, 82, 148, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 131, 111, 28, 33, 54, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 75, 12, 145, 102, 32, 36, 146, 4, 77, 51, 95, 38, 100, 120, 29, 106, 68, 1, 43]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[129, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 6, 116, 8, 56, 19, 149, 85, 26, 34, 61, 76, 109, 59, 11, 82, 148, 114, 119, 127, 42, 122, 45, 2, 135, 13, 70, 40, 99, 47, 131, 111, 28, 33, 54, 139, 134, 84, 67, 72, 49, 115, 81, 125, 94, 75, 12, 145, 102, 32, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 146, 43, 113, 68, 1, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 48, 5, 62, 9, 83, 35, 23, 37, 101, 98, 103, 110, 17, 136, 78, 105, 133, 52, 93, 21, 87, 15, 69, 128, 25, 123, 117, 64, 65, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 108, 31, 90, 22, 97, 44, 46, 0, 129]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[76, 109, 59, 61, 85, 26, 34, 19, 149, 116, 8, 56, 6, 33, 54, 82, 148, 114, 119, 122, 45, 2, 135, 127, 42, 131, 111, 28, 106, 100, 120, 29, 38, 95, 77, 51, 4, 36, 102, 32, 145, 75, 12, 81, 125, 94, 146, 115, 43, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 0, 129, 141, 147, 66, 107, 57, 80, 24, 60, 124, 50, 86, 144, 139, 134, 84, 67, 72, 49, 1, 68, 104, 92, 27, 130, 22, 97, 90, 31, 108, 44, 140, 58, 126, 16, 14, 10, 73, 20, 71, 9, 83, 35, 23, 37, 101, 98, 103, 110, 17, 136, 78, 105, 133, 52, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 89, 112, 46, 48, 5, 62, 13, 70, 40, 99, 47, 11, 76]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[100, 120, 29, 106, 38, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 102, 32, 145, 75, 115, 43, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 62, 5, 48, 89, 133, 52, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 105, 78, 136, 23, 37, 101, 98, 103, 110, 17, 9, 83, 35, 126, 16, 14, 10, 31, 108, 44, 140, 58, 73, 20, 71, 112, 46, 0, 129, 141, 147, 66, 104, 92, 27, 130, 57, 80, 24, 60, 50, 124, 144, 86, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 107, 109, 76, 22, 97, 90, 59, 61, 149, 85, 26, 34, 11, 19, 54, 82, 148, 114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 33, 100]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[71, 112, 46, 90, 97, 61, 149, 85, 26, 34, 11, 19, 54, 82, 148, 114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 33, 100, 120, 29, 106, 38, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 88, 41, 121, 30, 79, 7, 91, 62, 5, 48, 89, 133, 52, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 105, 78, 136, 23, 37, 101, 98, 103, 110, 17, 9, 83, 35, 126, 73, 20, 140, 58, 16, 14, 10, 31, 108, 44, 22, 59, 109, 76, 144, 86, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 147, 66, 104, 141, 129, 0, 130, 71]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 133, 52, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 105, 78, 136, 83, 9, 17, 37, 23, 103, 110, 98, 101, 35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 109, 76, 144, 86, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 147, 66, 104, 141, 129, 0, 130, 61, 149, 85, 26, 34, 11, 19, 54, 82, 148, 114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 33, 100, 29, 120, 106, 38, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 147, 66, 104, 141, 129, 0, 130, 76, 109, 86, 144, 33, 82, 54, 148, 114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 106, 38, 100, 29, 120, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 133, 52, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 138, 96, 74, 18, 105, 78, 136, 83, 9, 17, 37, 23, 103, 110, 98, 101, 35]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 130, 76, 109, 86, 144, 33, 82, 54, 148, 114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 106, 38, 100, 29, 120, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 9, 83, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 138, 96, 74, 18, 105, 78, 136, 93, 133, 52, 17, 37, 23, 103, 110, 98, 101, 35, 126, 58, 140, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[119, 114, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 106, 38, 100, 29, 120, 77, 51, 95, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 9, 83, 52, 133, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 142, 55, 138, 96, 74, 18, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 130, 109, 76, 86, 144, 33, 82, 54, 148, 119]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 130, 109, 76, 86, 144, 33, 82, 54, 148, 119, 114, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 9, 83, 52, 133, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 142, 96, 74, 18, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[88, 7, 91, 62, 5, 48, 89, 9, 83, 52, 133, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 142, 96, 74, 18, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 116, 8, 139, 134, 84, 67, 72, 49, 1, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 130, 109, 76, 86, 144, 33, 82, 54, 148, 119, 114, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 63, 39, 53, 137, 132, 30, 79, 121, 41, 88]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[142, 96, 74, 18, 105, 17, 37, 23, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 112, 46, 90, 97, 31, 10, 16, 14, 108, 44, 22, 59, 61, 149, 85, 26, 34, 11, 19, 56, 6, 8, 116, 82, 54, 33, 148, 119, 114, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 81, 94, 125, 12, 75, 32, 145, 102, 115, 43, 113, 143, 39, 53, 63, 68, 60, 50, 124, 24, 80, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 130, 109, 76, 86, 144, 139, 134, 84, 67, 72, 49, 1, 137, 132, 30, 79, 121, 41, 88, 7, 91, 62, 5, 48, 89, 9, 83, 52, 133, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 142]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[114, 119, 122, 42, 45, 2, 135, 127, 99, 47, 40, 70, 13, 131, 111, 28, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 113, 143, 1, 43, 49, 115, 39, 53, 63, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 11, 19, 149, 85, 26, 34, 61, 59, 76, 109, 97, 31, 10, 16, 14, 108, 44, 22, 90, 126, 58, 140, 73, 20, 71, 112, 48, 5, 62, 0, 129, 91, 7, 121, 41, 88, 30, 79, 142, 96, 74, 18, 105, 17, 37, 23, 103, 110, 101, 98, 35, 83, 9, 89, 52, 133, 78, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 132, 137, 27, 92, 104, 66, 141, 147, 107, 57, 130, 46, 148, 54, 82, 139, 134, 84, 67, 72, 33, 114]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 7, 121, 41, 88, 30, 79, 142, 96, 18, 52, 133, 78, 105, 89, 74, 5, 48, 62, 0, 129, 91, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 103, 110, 101, 98, 17, 83, 9, 46, 90, 108, 44, 31, 10, 16, 14, 22, 97, 130, 92, 27, 66, 141, 104, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 111, 28, 45, 2, 135, 127, 99, 70, 40, 47, 13, 131, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 85, 26, 19, 149, 61, 59, 76, 109, 34, 50, 124, 86, 144, 57, 107, 137, 132, 136]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 85, 26, 19, 149, 61, 59, 76, 109, 34, 50, 124, 86, 144, 57, 107, 137, 132, 121, 41, 88, 30, 79, 142, 96, 18, 52, 133, 78, 105, 89, 48, 5, 9, 83, 23, 37, 35, 103, 110, 101, 98, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 138, 7, 91, 129, 0, 62, 74, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 141, 104, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[33, 139, 134, 8, 116, 6, 56, 11, 85, 26, 19, 149, 61, 59, 76, 109, 34, 50, 124, 86, 144, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 91, 129, 0, 62, 5, 48, 9, 83, 23, 37, 35, 103, 110, 101, 98, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 74, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 85, 26, 19, 149, 61, 59, 76, 109, 34, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 23, 37, 35, 103, 110, 101, 98, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 85, 26, 19, 149, 61, 59, 76, 109, 34, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 23, 37, 35, 103, 110, 101, 98, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 49, 115, 43, 113, 143, 1, 39, 53, 63, 68, 67, 84, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 19, 149, 61, 59, 76, 109, 34, 85, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 34, 149, 19, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 34, 149, 19, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 146, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 34, 149, 19, 144, 86, 50, 124, 57, 107, 137, 132, 88, 30, 79, 121, 41, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 146, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127]");
        assertThat(TestUtils.getTourString(mmas_cadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[108, 44, 97, 22, 90, 130, 92, 27, 66, 104, 141, 147, 60, 24, 80, 72, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 146, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 99, 70, 40, 47, 13, 127, 42, 122, 114, 119, 82, 54, 148, 33, 139, 134, 8, 116, 6, 56, 11, 26, 85, 61, 59, 76, 109, 34, 149, 19, 144, 86, 50, 124, 57, 107, 137, 132, 41, 121, 30, 79, 88, 138, 7, 74, 91, 129, 0, 62, 5, 48, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 93, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 55, 142, 96, 18, 52, 133, 78, 105, 89, 46, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108]");

    }

    @Test
    public void test_mmas_cycle_pheromone_0_02() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CADTSP mmas_cadtsp = new MMAS_CADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(28991.525014805873);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 76, 59, 61, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 39, 53, 63, 68, 60, 50, 86, 56, 6, 8, 24, 80, 84, 67, 57, 92, 27, 66, 46, 44, 0, 78, 52, 87, 15, 21, 93, 17, 23, 37, 35, 98, 69, 65, 64, 25, 3, 18, 74, 96]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        mmas_cadtsp = new MMAS_CADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(27046.904794907718);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 58, 20, 71, 83, 9, 23, 37, 98, 35, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 62, 48, 5, 89, 0, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 56, 6, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 49, 72, 67, 84, 38, 29, 19]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cadtsp = new MMAS_CADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(37849.19806567066);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[28, 131, 111, 106, 29, 120, 38, 100, 95, 51, 77, 4, 36, 146, 145, 102, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 143, 63, 39, 53, 1, 72, 68, 80, 24, 60, 124, 50, 86, 144, 6, 56, 8, 116, 139, 134, 84, 67, 33, 148, 82, 54, 19, 149, 85, 26, 34, 61, 76, 109, 59, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 136, 78, 105, 89, 48, 5, 62, 0, 129, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 71, 20, 9, 83, 17, 133, 52, 21, 15, 87, 93, 69, 64, 3, 65, 128, 25, 123, 117, 96, 118, 142, 55, 138, 121, 41, 88, 30, 79, 7, 91, 74, 18, 132, 137, 147, 11, 119, 114, 122, 42, 2, 45, 13, 47, 99, 70, 40, 135, 127, 28]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cadtsp = new MMAS_CADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cadtsp.setMmasSeed(1);
        mmas_cadtsp.setDbgpSeed(1);
        mmas_cadtsp.setStatisticInterval(1);
        mmas_cadtsp.setShowLog(false);
        mmas_cadtsp.run();
        assertThat(mmas_cadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(35595.96639266827);
        assertThat(TestUtils.getTourString(mmas_cadtsp.getGlobalStatistics())).isEqualTo("[2, 45, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 143, 63, 39, 53, 1, 49, 113, 68, 72, 67, 84, 33, 139, 134, 82, 54, 148, 11, 26, 85, 19, 149, 34, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 46, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 103, 110, 101, 98, 17, 136, 78, 105, 89, 48, 5, 62, 91, 7, 121, 41, 30, 79, 88, 137, 132, 104, 141, 147, 66, 27, 92, 130, 0, 129, 138, 55, 142, 96, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 18, 74, 9, 83, 107, 57, 60, 24, 80, 50, 124, 144, 86, 56, 8, 116, 6, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2]");
    }
}