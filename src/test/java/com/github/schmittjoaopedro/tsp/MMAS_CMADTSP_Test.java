package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_CMADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_CMADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(29373.133351377128);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 5, 31645.140873562006, 1720.4912022112023, 0.645, 5.708571428571428, 30358.85635324978);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 10, 30668.454414194377, 1772.5118625887405, 0.54, 7.686530612244898, 29460.552513262268);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 11, 30382.737469836287, 1526.7893292454478, 0.565, 8.983673469387755, 29460.552513262268);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 15, 29048.97177899712, 1843.402897492364, 0.515, 3.850612244897959, 28112.26503884187);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 20, 29131.38308265925, 1901.6413964609849, 0.515, 4.420408163265306, 28112.26503884187);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 21, 39776.80726901626, 2432.0884030852885, 0.445, 36.63836734693878, 34099.499526913205);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 25, 34263.28277371273, 2651.615721851726, 0.56, 13.311836734693877, 31195.220061195287);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 30, 33251.83249292678, 2984.022682829679, 0.505, 13.794285714285714, 30339.132438280296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 31, 37952.478579567396, 2450.9486537301245, 0.485, 25.29877551020408, 33873.68624180404);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 35, 33805.7851135182, 3098.022302230741, 0.615, 13.222857142857142, 30460.990579353533);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 40, 33371.98138004774, 4293.975738768134, 0.565, 9.058775510204082, 29204.163757589955);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 41, 37594.71143903239, 2751.4299754313706, 0.48, 27.648979591836735, 30247.349037415202);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 45, 31703.42697372186, 3280.3718883695396, 0.67, 6.631836734693877, 28947.87603606539);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 31509.525776656737, 3694.1886533167694, 0.525, 7.00734693877551, 28450.41312173448);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 51, 37189.01051006697, 2355.1317360564085, 0.495, 28.54204081632653, 31662.277159759415);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 55, 32811.214106913976, 2963.8672781717637, 0.515, 8.035102040816327, 29904.524872826834);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 60, 31586.706745375497, 2912.777671691789, 0.515, 6.953469387755102, 29347.385155520315);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 61, 39428.583447685305, 2573.6808251029033, 0.525, 23.555918367346937, 35100.735106864086);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 65, 35144.67893763205, 2820.6535453669644, 0.56, 17.558367346938777, 31116.027597705113);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 70, 33652.439840410865, 3476.152013450942, 0.535, 8.92, 29478.153680159707);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 71, 37371.016574447596, 2645.468836084994, 0.5, 16.33877551020408, 31935.87059988765);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 75, 32863.484174256315, 3206.875654268273, 0.525, 5.572244897959184, 29354.534990432);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 80, 32487.987401971244, 3493.1121898048377, 0.51, 5.082448979591836, 28955.06034145661);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 81, 35774.62801595696, 2944.123457470615, 0.495, 15.72326530612245, 31037.91561733908);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 85, 34640.76499204676, 1411.746094398167, 0.55, 6.6636734693877555, 30635.786433618472);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 90, 34682.273992393224, 1940.0781757748273, 0.495, 9.693061224489796, 30210.138787035055);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 91, 38182.96609400544, 2769.3045413503537, 0.485, 22.537142857142857, 31332.119055421066);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 95, 33288.24441648335, 2865.792775531618, 0.53, 17.178775510204083, 29344.553777882025);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 30310.980947753233, 3098.003857140765, 0.5, 6.515918367346939, 27412.949456462422);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 35549.09346133854, 1638.0650016591721, 0.485, 17.68081632653061, 31805.32343201353);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 105, 31170.02459538869, 1873.1492955744136, 0.555, 3.1118367346938776, 29728.4443721199);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 110, 30739.730682771366, 2112.7267410098857, 0.545, 4.353469387755102, 29359.362025456023);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 111, 35236.396049806746, 2050.4313797059, 0.49, 15.184489795918367, 31252.72545070879);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 115, 32946.92119213596, 3382.6787782640035, 0.575, 10.448979591836734, 29214.56544876277);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 120, 31524.323855398794, 2607.0016888237997, 0.53, 4.3126530612244895, 28738.458045318766);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 121, 38148.991018975496, 3042.7685046013266, 0.48, 20.16081632653061, 32107.417349215142);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 125, 32472.172442461713, 2253.403597187755, 0.665, 8.271836734693878, 30399.80383392825);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 130, 31068.686226905258, 1706.2258838567036, 0.51, 4.798367346938775, 29829.38005950725);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 131, 37964.75894372099, 2661.443138757277, 0.495, 24.9665306122449, 32470.486919377934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 135, 33115.982385546326, 2578.8461565670527, 0.59, 12.311020408163266, 28841.243719387498);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 140, 31287.045321210193, 2469.7189387028448, 0.525, 4.782857142857143, 27767.486180303924);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 141, 35588.993701136176, 2013.7448605709355, 0.48, 20.70122448979592, 31364.468161947945);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 145, 34469.53849605562, 2764.5946688747003, 0.52, 8.711020408163265, 30533.757854436943);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 31049.39286044885, 3643.6663458497883, 0.515, 6.588571428571429, 28378.51227022217);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 151, 37627.15007259247, 3680.3112402397637, 0.49, 18.926530612244896, 32667.59884079104);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 155, 33562.18299604812, 2410.168745248517, 0.59, 7.204081632653061, 32080.88619334366);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 160, 35209.795571739545, 3412.2470668327837, 0.605, 11.932244897959183, 30848.433413574447);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 161, 37132.35637152409, 2262.6267140790583, 0.53, 27.93795918367347, 32823.196824980616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 165, 32758.163937538393, 1995.9794674771033, 0.62, 4.085714285714285, 31425.632980119124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 170, 31172.196089653604, 1678.1068330146545, 0.52, 4.097142857142857, 29432.189260875664);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 171, 38814.982281515295, 2943.34697194943, 0.495, 22.25387755102041, 33383.58373859487);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 175, 35018.80406191308, 2841.2826333114995, 0.585, 10.305306122448979, 30432.5707134039);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 180, 33303.83307992068, 2713.1766401858035, 0.515, 9.19673469387755, 29511.275469794236);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 181, 40693.09674961784, 2959.195593676109, 0.5, 33.695510204081636, 34151.69063632925);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 185, 32965.60767270038, 2080.7825958766343, 0.61, 6.49469387755102, 31232.39034478908);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 190, 32714.842735900507, 2610.61488424499, 0.505, 7.342040816326531, 29978.509590499114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 191, 38309.40364643954, 1633.8810508487154, 0.495, 26.940408163265307, 34549.3171038821);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 195, 33093.990897211545, 3067.031864654849, 0.555, 7.676734693877551, 30951.64759195614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 33560.28038880976, 4853.079588352861, 0.54, 7.853061224489796, 29895.142756159934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 37226.36533343021, 2582.960131361455, 0.52, 27.45795918367347, 31619.05212786619);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 205, 32481.099479643344, 2134.2221930960554, 0.515, 8.030204081632654, 29485.916151188085);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 210, 32513.102855315046, 3269.4034365979096, 0.5, 6.746122448979592, 29098.388501799505);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 211, 35102.5306405797, 2443.8176890103973, 0.505, 8.764897959183674, 32236.811608867734);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 215, 31957.38778958525, 2662.7234583107966, 0.56, 7.406530612244898, 29175.278554042634);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 220, 33213.768847568965, 3166.683076876858, 0.52, 10.898775510204082, 28312.658828708823);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 221, 37084.655890381604, 2376.5031162018813, 0.5, 21.235102040816326, 33001.64636887679);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 225, 35070.79835598927, 1792.0421546337152, 0.58, 9.780408163265307, 30905.663028200903);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 230, 31324.53217682081, 2436.8050256920537, 0.55, 4.669387755102041, 29667.449455089478);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 231, 37227.14651782287, 3458.943882462188, 0.485, 19.085714285714285, 32050.745246517723);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 235, 32849.15269904446, 3429.9261852925706, 0.66, 6.68, 29801.471058572242);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 240, 32926.02257576067, 3514.503308769868, 0.66, 4.390204081632653, 29801.471058572242);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 241, 35764.06820251068, 1978.8375657588144, 0.48, 15.29877551020408, 32005.662309305688);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 245, 32157.778389141826, 2961.3886574149633, 0.505, 4.471836734693878, 29755.570647101114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 29914.23090750077, 2215.9328821122026, 0.52, 3.9853061224489794, 28711.56629645222);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 251, 39536.84998843173, 2349.9606378648614, 0.485, 21.877551020408163, 34333.39357462787);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 255, 34459.150778101, 3602.885010790477, 0.585, 7.991020408163266, 30367.888714246004);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 260, 33461.393342180105, 3330.859130103871, 0.52, 7.501224489795918, 30025.37608832672);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 261, 36444.68162671117, 2926.712462035534, 0.48, 18.536326530612246, 32143.170679531606);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 265, 35920.628659423084, 2863.3793010348236, 0.53, 9.354285714285714, 30480.067097862295);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 270, 34483.85342658237, 2718.6914625808954, 0.53, 7.506122448979592, 30175.738399726564);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 271, 38458.829060907585, 3290.2733505614838, 0.5, 11.551020408163266, 31547.025594491337);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 275, 38381.650377600294, 3465.637237139865, 0.5, 12.704489795918366, 30774.534902874602);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 280, 35394.41743074916, 3939.1825267187924, 0.505, 11.938775510204081, 28939.060559693553);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 281, 37944.64954418936, 2381.8111139372054, 0.505, 18.848163265306123, 34979.98821628288);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 285, 32840.12188466722, 2350.7943535120085, 0.53, 10.685714285714285, 29910.627371351227);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 290, 31368.138578693677, 2715.230860158192, 0.51, 5.012244897959183, 29325.76689624483);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 291, 37958.50269137559, 2142.573758213479, 0.49, 11.781224489795918, 33910.73570083195);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 295, 34790.41537078049, 3318.8600475787302, 0.54, 8.328979591836735, 30609.4262286897);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 35049.841723956684, 3235.335619997826, 0.5, 10.528979591836734, 30516.881087422622);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 35939.067414724195, 2443.0564995454138, 0.47, 22.17061224489796, 32135.332118972437);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 305, 37133.64534729923, 2184.4460706931595, 0.5, 11.620408163265306, 31615.84435608291);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 310, 34939.48300211501, 2758.1875010763606, 0.505, 10.390204081632653, 30872.117622383546);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 311, 38868.050598098635, 3007.589034038797, 0.51, 24.638367346938775, 33437.02198852772);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 315, 37170.60184258213, 3975.547852366567, 0.55, 10.407346938775511, 31984.96227949262);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 320, 39873.326467259234, 2787.957217723499, 0.515, 8.305306122448979, 31740.182408934463);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 321, 39632.38345433195, 2749.493740793013, 0.49, 20.257142857142856, 31904.687780792556);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 325, 36751.66949501656, 2524.6199841339694, 0.505, 11.126530612244897, 30836.012520535187);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 330, 35703.3564398387, 1941.7465726248222, 0.505, 10.524897959183674, 30836.012520535187);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 331, 37120.44672846869, 1979.6546145752984, 0.49, 15.296326530612244, 31687.215541738813);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 335, 31935.384258137332, 2134.3748740009582, 0.555, 6.240816326530612, 30388.775183660728);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 340, 32066.811801404314, 3086.8955927125344, 0.505, 6.925714285714286, 29631.162722568053);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 341, 38323.997211550966, 2062.457303428472, 0.475, 15.589387755102042, 34669.83872628545);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 345, 35018.88455271517, 1854.18602358565, 0.54, 7.9714285714285715, 33058.23745673812);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 33695.39846020707, 3243.8302818996685, 0.525, 7.1289795918367345, 30634.02297220561);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 351, 37422.79137618573, 3411.5774490554027, 0.545, 15.51591836734694, 31023.693654744424);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 355, 33119.30235682523, 3035.4402550809364, 0.505, 5.98204081632653, 30041.122306318484);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 360, 31056.5043023824, 3104.1935420289665, 0.52, 2.613877551020408, 29585.501922926644);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 361, 37165.07990874814, 2506.46498664673, 0.485, 19.526530612244898, 32376.970965323515);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 365, 32626.529322983482, 2510.6866040716905, 0.6, 4.405714285714286, 30431.838154625766);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 370, 32274.58397797046, 2765.6427558149853, 0.495, 7.563265306122449, 29801.354816070696);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 371, 37170.21516459445, 2181.29899320806, 0.485, 18.71673469387755, 31202.454278835216);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 375, 31509.44804503849, 3216.759267779247, 0.58, 3.546938775510204, 29955.837897231326);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 380, 31998.0608259576, 3592.364241362427, 0.58, 4.58530612244898, 29955.837897231326);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 381, 38505.2515807695, 1953.4042983331499, 0.47, 20.41551020408163, 33938.226896021406);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 385, 33370.37320985105, 3467.6001819351127, 0.53, 5.152653061224489, 30659.119634791638);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 390, 31078.294373101973, 2720.0060418828243, 0.53, 2.6979591836734693, 29294.355639106696);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 391, 36109.841575535705, 3078.8250930545746, 0.53, 13.62204081632653, 31028.619372014953);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 395, 31634.129368809005, 2828.6376165900015, 0.54, 2.702857142857143, 30286.32512068122);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 30482.626320632127, 1690.1913794056616, 0.495, 2.90530612244898, 29724.969210555995);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 37619.076505648496, 3151.21270395802, 0.485, 11.412244897959184, 32542.59302609665);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 405, 34608.41245753149, 3444.2440217808485, 0.53, 10.855510204081632, 29945.88996519014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 410, 34702.331342233, 3452.339126039403, 0.53, 12.328979591836735, 29945.88996519014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 411, 37265.25313802279, 2939.6412236118904, 0.485, 12.475918367346939, 30985.18232294998);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 415, 30780.930057925023, 2910.146653158564, 0.545, 3.2253061224489796, 29190.381268626952);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 420, 30110.507930404878, 2025.7672492956613, 0.535, 1.7151020408163264, 29165.46836685946);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 421, 38560.73203105736, 1678.3611370888864, 0.475, 14.179591836734694, 34915.026135990076);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 425, 35051.050094400554, 2501.229013723136, 0.52, 8.728979591836735, 32269.622799219418);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 430, 32819.96265277791, 2538.3071728084865, 0.52, 7.052244897959183, 30283.938489405522);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 431, 37902.76260121623, 2251.5317562811106, 0.53, 18.632653061224488, 32046.59610979244);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 435, 31430.53224656295, 2081.3622717609214, 0.515, 2.0473469387755103, 30425.012315171196);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 440, 31064.878209082173, 2553.959754875082, 0.505, 2.130612244897959, 30172.671688123977);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 441, 37746.85604718825, 2846.0372611845805, 0.48, 20.110204081632652, 32638.003265395768);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 445, 33899.43113390685, 2677.1862849450763, 0.505, 5.733061224489796, 30105.92487876719);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 34094.64210783678, 2965.465602054847, 0.525, 6.783673469387755, 29920.51530088512);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 451, 36978.780440131035, 1615.9634033566945, 0.495, 12.698775510204081, 34766.34507020665);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 455, 33426.48832203995, 2452.7043938330926, 0.53, 7.97795918367347, 31386.614857767036);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 460, 32136.09673085348, 2767.0252141647375, 0.535, 5.17795918367347, 30438.616605901825);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 461, 35334.36180405936, 2398.3640267950736, 0.485, 13.168979591836734, 31486.09539648112);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 465, 33195.073668392266, 2060.468367711093, 0.52, 8.147755102040817, 30678.312574438434);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 470, 32917.651703195625, 2000.400372384419, 0.545, 6.348571428571429, 30328.403948365816);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 471, 35989.325521381026, 2549.1144692170787, 0.49, 12.026122448979592, 31234.825444251084);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 475, 32201.678657247867, 2637.2719716827437, 0.52, 3.3755102040816327, 30262.2056647045);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 480, 32486.635254864625, 3362.3679904117107, 0.5, 4.394285714285714, 29640.922600682425);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 481, 37248.58056452415, 2114.3881666519596, 0.485, 16.502857142857142, 30964.883534735334);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 485, 32445.725508736166, 3051.108469666358, 0.52, 6.736326530612245, 29257.236542485003);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 490, 30804.633710945443, 3103.7206749895995, 0.52, 3.6987755102040816, 28489.057314209917);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 491, 35314.131646225804, 2967.3967137492555, 0.495, 9.08734693877551, 29573.80037763222);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 495, 34823.0227694099, 2222.2447314268297, 0.495, 7.128163265306123, 29573.80037763222);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 34873.338598418035, 2837.8107841341366, 0.5, 6.591020408163265, 29573.80037763222);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 36359.8682469645, 1642.3380072462328, 0.485, 14.538775510204081, 31932.964324168053);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 505, 31154.662854488754, 2116.509010118969, 0.555, 3.6881632653061223, 29907.760102188982);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 510, 30781.390202252678, 1587.280737518852, 0.505, 4.191836734693878, 29727.55799407624);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 511, 33909.00071965486, 1827.4608800158894, 0.485, 8.539591836734694, 29670.144494114014);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 515, 32211.559219489558, 3011.012507403302, 0.51, 3.8955102040816327, 29420.61280156325);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 520, 31436.00018333448, 2770.4767563451933, 0.51, 3.991020408163265, 29420.61280156325);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 521, 33545.587042083935, 2632.1135758252867, 0.49, 9.869387755102041, 29991.886575813132);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 525, 30264.851426348334, 1665.4551302400962, 0.505, 1.4759183673469387, 29715.98315386991);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 530, 29382.89732258637, 2082.8643568842044, 0.53, 2.9616326530612245, 28436.96297469991);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 531, 35036.666923493634, 886.0016379312053, 0.5, 3.6195918367346938, 30859.544148879293);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 535, 31533.923099209354, 2890.473087242787, 0.545, 3.4383673469387754, 29783.16800292336);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 540, 30113.401417183974, 2188.001436286855, 0.51, 1.5983673469387756, 29360.33506124106);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 541, 34302.749980373, 737.7709530057758, 0.485, 11.036734693877552, 31184.60021419424);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 545, 30880.778345038976, 2190.6171083825247, 0.54, 5.528979591836735, 29617.41249176245);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 29558.846709969443, 1807.6376785892437, 0.55, 0.5542857142857143, 29096.622701949804);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 551, 36694.30696342773, 1586.5763752783819, 0.49, 9.704489795918366, 33444.60480321209);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 555, 31455.864424743475, 2030.9598091773034, 0.56, 2.9257142857142857, 30348.965389765584);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 560, 30673.02465484516, 1401.5253412145464, 0.495, 4.920816326530613, 29828.454545364864);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 561, 33573.62218008833, 1281.4520107244778, 0.5, 8.754285714285714, 30246.120438145103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 565, 29486.053691420384, 1190.223237992351, 0.55, 2.2448979591836733, 29111.523986250868);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 570, 29845.09274578489, 2084.331841689366, 0.55, 2.4506122448979593, 29111.523986250868);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 571, 35928.82428211078, 1530.1038196434208, 0.49, 4.979591836734694, 32863.4242557113);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 575, 30714.438916895353, 1142.536352163253, 0.525, 2.3657142857142857, 29972.093940005994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 580, 30459.505328800562, 1782.0859365221195, 0.52, 2.5918367346938775, 29639.512595610693);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 581, 34517.538766929254, 2131.4278793677217, 0.49, 5.736326530612245, 31160.19451608137);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 585, 31485.75747824247, 1290.5573371565306, 0.505, 1.6244897959183673, 30896.433157877484);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 590, 30091.414523952775, 1089.835214652536, 0.54, 1.0873469387755101, 29727.38937148791);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 591, 32617.0583701652, 1846.8044227703515, 0.515, 2.6612244897959183, 30742.933851921673);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 595, 30917.359073251006, 962.9386222956331, 0.505, 1.5510204081632653, 30493.402159370908);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 30837.385753034032, 1246.7848076253406, 0.535, 1.969795918367347, 29928.478198820278);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 35484.46745856327, 2364.265179352261, 0.525, 4.808979591836735, 32041.036136771818);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 605, 31126.83623242337, 1042.1492531137997, 0.535, 0.6310204081632653, 30860.665696776643);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 610, 28911.68602106013, 1317.5388127561127, 0.545, 2.2155102040816326, 28405.60246968081);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 611, 33481.51792724884, 2985.0162167569156, 0.52, 4.196734693877551, 30476.3838686406);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 615, 31904.073213574815, 2811.197398106693, 0.52, 3.0073469387755103, 30019.503038316278);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 620, 31386.617717362056, 2684.9498415922217, 0.5, 2.290612244897959, 29923.503038316278);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 621, 35987.64755326796, 2052.2025782379114, 0.5, 8.924897959183674, 31661.1359866382);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 625, 31100.951796103753, 1940.3558260569089, 0.535, 2.9289795918367347, 29815.86299947184);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 630, 30127.320312735228, 1249.8440813155312, 0.51, 1.4212244897959183, 29576.042247754718);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 631, 36626.375320218154, 1537.7720422955497, 0.505, 1.653061224489796, 31128.252289549222);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 635, 31356.340974977986, 1231.2183471550188, 0.515, 0.8269387755102041, 30990.843471674154);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 640, 31231.676714256108, 952.5434383492486, 0.52, 3.273469387755102, 30706.847887068354);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 641, 32404.16233930179, 1807.2472408709789, 0.525, 9.715102040816326, 29396.78055947914);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 645, 29811.90789724985, 1022.9567745712469, 0.525, 2.5395918367346937, 29396.78055947914);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 29700.929530907524, 779.695876704387, 0.49, 2.0383673469387755, 29112.78055947914);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 651, 32708.595807911708, 856.7038132523321, 0.505, 4.115102040816327, 30490.287951860002);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 655, 31168.440240374668, 2307.9707156564086, 0.525, 2.20734693877551, 30147.775325940718);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 660, 31175.930525406493, 2278.3811453450107, 0.525, 2.760816326530612, 30147.775325940718);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 661, 33858.34495393041, 1831.827503475621, 0.485, 6.255510204081633, 30931.32172991215);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 665, 30672.611490143412, 1616.7574533749269, 0.54, 4.779591836734694, 29824.458605257296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 670, 30194.85986974866, 1090.6628007929621, 0.51, 1.9420408163265306, 29771.00215039401);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 671, 34769.32754408294, 1668.855669206808, 0.49, 5.803265306122449, 32419.371209641213);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 675, 31110.321326001394, 1046.6439955637188, 0.55, 1.5420408163265307, 30384.742683443452);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 680, 32696.34508911715, 2554.1605193360965, 0.51, 3.4448979591836735, 30081.39630147573);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 681, 33887.905249937176, 1437.6379773791944, 0.495, 2.536326530612245, 32456.714915980563);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 685, 32360.741482424735, 701.1036725764682, 0.535, 0.7004081632653061, 32159.76604569551);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 690, 31530.006086241872, 296.79936961328497, 0.5, 0.19918367346938776, 31477.663873397138);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 691, 32258.909910669947, 2016.7641972352435, 0.505, 2.9983673469387755, 30058.534672501006);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 695, 30722.514945293566, 1536.0134220991783, 0.51, 2.260408163265306, 29534.53552674091);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 30656.05839635947, 1663.1282359075587, 0.5, 2.09469387755102, 29534.53552674091);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 33928.133745608684, 2462.3780325891357, 0.485, 7.383673469387755, 31120.211082878603);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 705, 29904.387209735043, 1542.295253979546, 0.535, 1.5706122448979591, 29463.28647230934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 710, 29503.44057252314, 141.3884302627873, 0.535, 0.553469387755102, 29463.28647230934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 711, 32267.82492951317, 2033.096295730317, 0.495, 1.44, 30867.457902553902);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 715, 31347.853254496982, 2042.5660245516112, 0.54, 2.103673469387755, 30388.14112839638);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 720, 30313.272840178426, 547.2824867371955, 0.52, 0.9771428571428571, 30138.609435845614);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 721, 33260.56942698645, 1543.1642071412061, 0.495, 4.588571428571429, 30610.443040480375);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 725, 29508.3361076861, 914.1780821591212, 0.52, 0.23510204081632652, 29323.60577104847);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 730, 29411.177846561564, 619.2280843789254, 0.52, 0.12, 29323.60577104847);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 731, 31910.463075838717, 1843.5634539678397, 0.49, 4.0685714285714285, 29965.291831295668);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 735, 29658.62662648084, 858.5963794939981, 0.525, 0.9918367346938776, 29412.411000971344);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 740, 29515.45865909096, 380.3723355576279, 0.525, 0.6326530612244898, 29412.411000971344);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 741, 33984.620645133255, 2047.3555858862983, 0.485, 5.853061224489796, 30196.90547682664);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 745, 29624.1060429642, 790.1835618033276, 0.53, 0.16, 29512.357211977556);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 29530.116140544276, 125.57458816143892, 0.53, 0.12, 29512.357211977556);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 751, 31866.092948344376, 430.8883070763797, 0.49, 1.4987755102040816, 30846.080301478076);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 755, 29912.72202777872, 934.7722019553802, 0.55, 2.089795918367347, 29432.977740397084);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 760, 29682.96736362525, 733.3103023480793, 0.55, 1.1273469387755102, 29432.977740397084);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 761, 31830.049873179967, 1342.0392768618728, 0.495, 5.093061224489796, 29686.451602761757);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 765, 29761.857708289583, 136.76506516639557, 0.495, 1.0873469387755101, 29686.451602761757);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 770, 29562.522601401677, 563.5785027905705, 0.535, 1.1591836734693877, 29359.44098796906);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 771, 31591.68215948555, 831.6421522892512, 0.52, 0.7804081632653062, 30950.007670427058);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 775, 31413.896468760948, 990.1331551389393, 0.49, 1.4293877551020409, 30342.9739707083);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 780, 31189.57934700563, 1056.2510110567293, 0.49, 1.6906122448979592, 30342.9739707083);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 781, 32645.77998700537, 2133.6495097204297, 0.485, 6.275102040816327, 30087.68457349454);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 785, 29496.904309049733, 378.530198999729, 0.57, 1.1159183673469388, 29392.28336623252);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 790, 29394.649066399103, 16.728026300632283, 0.57, 0.16, 29392.28336623252);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 791, 31579.01713863211, 531.2666136666289, 0.49, 1.2040816326530612, 31386.673521839206);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 795, 29713.40198270281, 447.63392478449725, 0.53, 0.6073469387755102, 29588.387818605923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 29624.477166961093, 255.19022950565343, 0.49, 0.16, 29588.387818605923);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 32934.83895258566, 1180.1153180555116, 0.495, 3.1844897959183673, 30209.46492282975);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 805, 29311.659382996644, 150.62830978305502, 0.56, 1.28, 29214.441006365905);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 810, 29311.58678152952, 182.4662755872073, 0.56, 1.2979591836734694, 29214.441006365905);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 811, 31290.33233314882, 960.2051138365671, 0.49, 0.710204081632653, 30892.533546115235);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 815, 30934.597309120312, 267.89892015879246, 0.49, 0.19755102040816327, 30892.533546115235);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 820, 30749.357335778815, 300.0038081037963, 0.49, 0.31918367346938775, 30705.840182105934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 821, 31637.323606176986, 546.1715237153554, 0.49, 5.634285714285714, 30085.052557486033);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 825, 29820.20566779227, 3.307422194109639E-11, 0.52, 0.0, 29820.205667792237);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 830, 29820.20566779227, 3.307422194109639E-11, 0.52, 0.0, 29820.205667792237);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 831, 31280.329190118522, 742.1811927897636, 0.485, 3.626938775510204, 30211.765772589482);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 835, 30311.34738897717, 364.9635144010821, 0.485, 0.46285714285714286, 30211.765772589482);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 840, 30011.870036032786, 493.5853472657435, 0.495, 2.1877551020408164, 29867.921673703637);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 841, 31244.896555463594, 1084.4849999866487, 0.52, 4.955102040816326, 29722.824440086963);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 845, 29760.52749285087, 103.93686703368544, 0.52, 0.6187755102040816, 29722.824440086963);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 29853.798209853656, 157.53138991767668, 0.52, 1.5077551020408164, 29722.824440086963);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 851, 30375.15111122329, 37.164400384400636, 0.495, 0.23673469387755103, 30146.723148574303);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 855, 30228.00165000985, 321.7029071247327, 0.495, 0.5893877551020408, 30146.723148574303);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 860, 30275.269946856824, 422.8595790942379, 0.495, 0.809795918367347, 30146.723148574303);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 861, 30579.509716437115, 358.3824918067763, 0.495, 2.253061224489796, 30107.39104366288);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 865, 29874.1777960215, 33.65442221831719, 0.505, 0.08, 29869.418341988006);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 870, 29869.418341988003, 3.67491354901071E-12, 0.505, 0.0, 29869.418341988006);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 871, 30474.063761415095, 398.04583178071505, 0.495, 0.46530612244897956, 30131.817617085475);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 875, 30252.372021429455, 412.9704375906387, 0.495, 0.4506122448979592, 30131.817617085475);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 880, 29811.90410324354, 798.9897051677632, 0.51, 1.3885714285714286, 29466.803787678557);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 881, 31075.63455934365, 515.8280070636265, 0.505, 2.2057142857142855, 30004.845517455695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 885, 30033.4133713284, 181.9610912929213, 0.505, 0.2383673469387755, 30004.845517455695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 890, 30033.4133713284, 181.9610912929213, 0.505, 0.2383673469387755, 30004.845517455695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 891, 30463.76659812448, 617.4317641181051, 0.49, 0.39346938775510204, 30230.341755450263);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 895, 30230.34175545024, 2.204948129406426E-11, 0.49, 0.0, 30230.341755450263);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 30279.20364959952, 241.80366634456885, 0.495, 0.23510204081632652, 30230.341755450263);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 30489.654852435528, 165.3908368801495, 0.495, 0.5885714285714285, 30359.248235576168);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 905, 29921.158024523487, 1.102474064703213E-11, 0.51, 0.0, 29921.158024523498);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 910, 29958.34331298661, 262.9396963265521, 0.51, 0.12, 29921.158024523498);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 911, 29686.85521606113, 264.31749100722374, 0.49, 0.5804081632653061, 29611.306772684755);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 915, 29618.193294754485, 34.079446034954564, 0.49, 0.23510204081632652, 29611.306772684755);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 920, 29466.803787678546, 1.102474064703213E-11, 0.495, 0.0, 29466.803787678557);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 921, 30798.10557426437, 601.7822689249181, 0.5, 2.1510204081632653, 29454.04843567833);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 925, 29488.874529336797, 172.34446755898293, 0.5, 0.313469387755102, 29454.04843567833);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 930, 29523.700622995282, 238.6001111445598, 0.5, 0.6008163265306122, 29454.04843567833);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 931, 29952.180993785696, 2.572439484307497E-11, 0.495, 0.0, 29952.18099378572);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 935, 29971.696386843156, 100.94300576753055, 0.495, 0.276734693877551, 29952.18099378572);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 940, 29952.180993785696, 2.572439484307497E-11, 0.495, 0.0, 29952.18099378572);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 941, 29235.03291401703, 1.102474064703213E-11, 0.495, 0.0, 29235.032914017018);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 945, 29235.03291401703, 1.102474064703213E-11, 0.495, 0.0, 29235.032914017018);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 29235.03291401703, 1.102474064703213E-11, 0.495, 0.0, 29235.032914017018);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 951, 29429.86483842039, 141.80311021887007, 0.495, 0.12, 29409.810850254587);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 955, 29409.810850254573, 1.469965419604284E-11, 0.495, 0.0, 29409.810850254587);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 960, 29409.810850254573, 1.469965419604284E-11, 0.495, 0.0, 29409.810850254587);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 961, 29202.121889249403, 3.67491354901071E-11, 0.5, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 965, 29202.121889249403, 3.67491354901071E-11, 0.5, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 970, 29202.121889249403, 3.67491354901071E-11, 0.5, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 971, 29424.076662802916, 1.469965419604284E-11, 0.495, 0.0, 29424.07666280293);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 975, 29424.076662802916, 1.469965419604284E-11, 0.495, 0.0, 29424.07666280293);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 980, 29424.076662802916, 1.469965419604284E-11, 0.495, 0.0, 29424.07666280293);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 981, 29202.121889249403, 3.67491354901071E-11, 0.495, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 985, 29202.121889249403, 3.67491354901071E-11, 0.495, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 990, 29202.121889249403, 3.67491354901071E-11, 0.495, 0.0, 29202.121889249367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 991, 29373.133351377146, 1.837456774505355E-11, 0.495, 0.0, 29373.133351377128);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 995, 29373.133351377146, 1.837456774505355E-11, 0.495, 0.0, 29373.133351377128);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 29373.133351377146, 1.837456774505355E-11, 0.495, 0.0, 29373.133351377128);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 48, 5, 62, 46, 96, 55, 41, 88, 30, 79, 3, 64, 25, 65, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 83, 9, 89, 78, 71, 20, 58, 73, 16, 14, 10, 44, 97, 22, 90, 31, 46, 0, 91, 7, 96, 55, 64, 25, 65, 3, 79, 30, 88, 41, 66, 27, 92, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 6, 8, 56, 86, 50, 57, 19, 11, 26, 85, 54, 82, 33, 28, 2, 42, 45, 99, 47, 13, 40, 70, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 29, 38, 76, 59, 61, 34, 5, 48, 62, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 83, 9, 89, 78, 71, 20, 73, 58, 16, 14, 10, 44, 97, 22, 90, 31, 46, 0, 91, 7, 96, 55, 79, 30, 88, 41, 66, 27, 92, 60, 50, 57, 68, 67, 84, 38, 51, 77, 29, 13, 40, 70, 99, 47, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 49, 72, 80, 24, 19, 11, 85, 26, 56, 86, 6, 8, 54, 82, 33, 28, 2, 42, 45, 59, 61, 34, 76, 62, 5, 48, 3, 65, 64, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 46, 97, 22, 90, 44, 59, 61, 76, 34, 26, 85, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 99, 70, 40, 2, 42, 45, 82, 54, 33, 28, 47, 95, 51, 77, 4, 36, 12, 94, 81, 32, 75, 1, 53, 39, 63, 68, 57, 27, 92, 66, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 5, 48, 89, 78, 62, 0, 91, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 23, 37, 98, 35, 83, 9, 89, 48, 5, 62, 27, 92, 66, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 71, 20, 73, 58, 16, 14, 10, 31, 46, 44, 22, 90, 97, 59, 61, 76, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 28, 33, 82, 54, 26, 34, 85, 19, 11, 6, 8, 42, 45, 2, 70, 40, 99, 47, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 57, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 78, 17, 23, 37, 98, 35, 83, 71, 20, 73, 58, 16, 14, 10, 31, 44, 22, 90, 97, 59, 61, 76, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 28, 33, 54, 82, 19, 34, 45, 2, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 57, 66, 92, 27, 46, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 35, 83, 9, 89, 62, 5, 48, 0, 91, 7, 41, 30, 79, 88, 55, 96, 3, 65, 64, 25, 78, 98, 71, 20, 73, 58, 10, 14, 16, 31, 44, 22, 97, 90, 59, 61, 76, 19, 34, 85, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 28, 33, 54, 82, 45, 2, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 63, 68, 53, 39, 57, 66, 27, 92, 46, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 35, 71, 20, 73, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 61, 76, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 28, 33, 54, 82, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 27, 92, 66, 57, 19, 34, 85, 46, 62, 5, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 9, 83, 98, 89, 48, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 89, 48, 5, 62, 46, 44, 97, 22, 90, 31, 16, 14, 10, 20, 73, 58, 83, 9, 71, 35, 78, 65, 64, 25, 3, 96, 55, 30, 79, 41, 88, 91, 7, 0, 92, 27, 66, 57, 60, 24, 80, 72, 49, 43, 67, 84, 38, 29, 13, 28, 33, 54, 82, 45, 2, 42, 40, 70, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 56, 86, 50, 8, 6, 11, 26, 85, 19, 34, 61, 76, 59, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 14, 16, 90, 97, 22, 92, 27, 57, 66, 68, 72, 49, 43, 67, 84, 38, 29, 13, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 80, 24, 86, 50, 60, 19, 11, 54, 82, 33, 56, 6, 8, 85, 26, 34, 61, 76, 59, 44, 31, 46, 62, 48, 5, 89, 78, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 91, 7, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 10, 14, 16, 31, 46, 62, 48, 5, 89, 78, 65, 64, 25, 3, 96, 55, 30, 79, 88, 41, 7, 0, 66, 57, 76, 59, 61, 34, 85, 26, 19, 11, 54, 82, 33, 56, 8, 6, 24, 80, 60, 50, 86, 68, 67, 84, 38, 29, 13, 2, 42, 45, 28, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 53, 39, 63, 1, 43, 72, 49, 27, 92, 22, 97, 90, 44, 91, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 89, 46, 92, 27, 57, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 13, 2, 42, 45, 40, 99, 70, 33, 54, 82, 11, 26, 85, 19, 56, 86, 50, 76, 59, 61, 34, 6, 8, 28, 22, 97, 90, 44, 31, 10, 14, 16, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 5, 62, 48, 89, 46, 31, 10, 16, 14, 97, 90, 44, 22, 61, 59, 76, 6, 8, 56, 11, 26, 85, 34, 19, 54, 82, 33, 2, 42, 40, 70, 99, 47, 13, 28, 45, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 67, 84, 72, 49, 60, 24, 80, 50, 86, 92, 27, 57, 66, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 7, 91, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 5, 48, 89, 78, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 27, 92, 66, 57, 60, 24, 80, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 22, 90, 44, 31, 10, 14, 16, 97, 76, 54, 82, 33, 2, 42, 40, 70, 99, 47, 13, 28, 45, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 46, 62, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 78, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 5, 48, 0, 66, 57, 60, 50, 86, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 54, 82, 33, 2, 45, 28, 47, 99, 40, 70, 13, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 53, 39, 63, 68, 80, 24, 67, 84, 42, 22, 97, 90, 44, 31, 14, 16, 10, 46, 92, 27, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 65, 64, 3, 25, 78, 89, 46, 92, 27, 57, 60, 80, 24, 67, 84, 29, 33, 82, 54, 8, 56, 86, 50, 19, 11, 26, 85, 34, 61, 59, 76, 6, 42, 45, 28, 47, 99, 40, 70, 13, 2, 38, 95, 77, 51, 36, 4, 12, 32, 75, 94, 81, 1, 43, 72, 49, 63, 39, 53, 68, 0, 66, 22, 97, 90, 44, 31, 10, 14, 16, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 78, 3, 64, 25, 65, 96, 55, 30, 79, 41, 88, 0, 92, 27, 57, 60, 80, 24, 67, 84, 29, 38, 95, 77, 51, 36, 4, 32, 75, 94, 81, 12, 72, 49, 43, 1, 53, 39, 63, 68, 50, 86, 56, 6, 8, 54, 82, 33, 45, 28, 2, 42, 13, 99, 40, 70, 47, 19, 11, 26, 85, 34, 61, 59, 76, 90, 44, 31, 10, 14, 16, 97, 22, 46, 66, 91, 7, 5, 62, 48, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 62, 46, 90, 44, 31, 10, 14, 16, 97, 22, 59, 76, 61, 34, 26, 85, 11, 6, 8, 56, 86, 50, 60, 80, 24, 67, 84, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 43, 49, 72, 68, 39, 53, 63, 1, 66, 92, 27, 57, 19, 82, 54, 33, 45, 42, 2, 13, 70, 40, 99, 47, 28, 0, 91, 7, 41, 88, 30, 79, 55, 96, 78, 3, 65, 64, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 62, 46, 0, 91, 7, 41, 79, 30, 88, 55, 96, 78, 3, 65, 64, 25, 92, 27, 57, 66, 53, 63, 1, 72, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 39, 68, 80, 24, 50, 60, 86, 56, 8, 6, 11, 26, 85, 19, 82, 54, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 61, 59, 76, 44, 90, 97, 22, 34, 14, 16, 10, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 62, 0, 92, 27, 57, 66, 24, 80, 39, 53, 63, 1, 72, 49, 43, 67, 84, 38, 29, 13, 28, 45, 2, 42, 99, 70, 40, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 68, 60, 86, 56, 8, 6, 82, 54, 33, 11, 26, 85, 19, 61, 22, 90, 97, 44, 16, 14, 10, 31, 46, 76, 59, 34, 50, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 62, 0, 92, 27, 57, 60, 24, 80, 50, 86, 56, 8, 6, 82, 54, 33, 11, 26, 85, 19, 61, 34, 76, 59, 22, 90, 97, 44, 16, 14, 10, 31, 46, 66, 39, 63, 72, 67, 84, 38, 29, 13, 28, 45, 2, 42, 70, 40, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 43, 49, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 92, 27, 57, 66, 68, 63, 39, 53, 1, 72, 67, 84, 38, 29, 13, 28, 45, 2, 42, 70, 40, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 80, 24, 60, 50, 8, 56, 86, 11, 6, 85, 26, 19, 54, 82, 33, 61, 34, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 92, 27, 66, 60, 50, 86, 56, 8, 6, 19, 11, 26, 85, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 57, 24, 80, 72, 49, 43, 1, 81, 4, 36, 32, 75, 12, 94, 53, 39, 63, 68, 67, 84, 38, 29, 13, 28, 45, 2, 42, 40, 70, 99, 47, 51, 77, 95, 33, 54, 82, 34, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 44, 97, 22, 76, 59, 61, 85, 26, 11, 54, 82, 33, 19, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 28, 45, 2, 42, 13, 40, 70, 99, 47, 12, 94, 32, 75, 81, 8, 6, 34, 57, 92, 27, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 44, 97, 22, 59, 61, 76, 50, 60, 80, 24, 86, 6, 8, 56, 54, 82, 33, 28, 45, 2, 42, 13, 47, 29, 95, 77, 51, 36, 4, 32, 75, 94, 81, 12, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 40, 70, 99, 11, 26, 19, 85, 34, 92, 27, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 57, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 44, 97, 22, 59, 61, 76, 85, 26, 34, 19, 11, 54, 82, 33, 28, 45, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 13, 2, 6, 8, 56, 86, 24, 80, 60, 50, 92, 27, 57, 66, 88, 30, 79, 55, 64, 25, 65, 3, 96, 78, 0, 7, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 44, 90, 97, 22, 59, 61, 76, 85, 26, 34, 19, 11, 54, 82, 33, 28, 45, 42, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 38, 29, 13, 2, 6, 8, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 11, 54, 82, 33, 42, 40, 70, 99, 47, 2, 45, 28, 56, 86, 24, 80, 60, 50, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 8, 6, 34, 19, 68, 72, 49, 43, 67, 84, 38, 29, 13, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 11, 19, 56, 86, 6, 8, 50, 60, 80, 24, 84, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 28, 2, 42, 45, 13, 70, 99, 40, 47, 29, 33, 54, 82, 34, 92, 27, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 57, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 61, 76, 85, 26, 19, 56, 86, 6, 8, 50, 60, 80, 24, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 43, 49, 72, 67, 29, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 54, 82, 11, 34, 59, 92, 27, 57, 66, 88, 30, 79, 55, 96, 65, 25, 64, 3, 78, 0, 7, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 61, 76, 85, 26, 19, 11, 34, 6, 8, 56, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 54, 82, 59, 92, 27, 57, 66, 7, 41, 30, 79, 88, 55, 64, 25, 65, 3, 78, 0, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 11, 34, 19, 8, 56, 6, 86, 50, 60, 80, 24, 82, 54, 33, 28, 13, 2, 42, 45, 40, 70, 99, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 38, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 27, 92, 57, 66, 0, 78, 65, 64, 25, 3, 96, 55, 41, 88, 30, 79, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 11, 19, 8, 56, 6, 86, 50, 60, 80, 24, 67, 49, 72, 43, 1, 53, 39, 63, 68, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 28, 45, 2, 42, 13, 99, 70, 40, 47, 54, 82, 33, 34, 92, 27, 57, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 85, 26, 19, 11, 56, 8, 6, 86, 50, 60, 80, 24, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 72, 82, 54, 33, 28, 45, 2, 42, 70, 40, 99, 47, 13, 29, 34, 57, 92, 27, 66, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 0, 7, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 45, 2, 42, 70, 40, 99, 47, 28, 13, 29, 95, 77, 51, 38, 4, 36, 32, 75, 12, 94, 81, 43, 49, 1, 53, 39, 63, 68, 72, 67, 84, 33, 54, 82, 6, 8, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 64, 25, 65, 3, 96, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 54, 82, 6, 8, 56, 86, 50, 60, 80, 24, 84, 67, 49, 1, 53, 39, 63, 68, 72, 43, 81, 94, 12, 75, 32, 4, 36, 51, 77, 95, 29, 38, 47, 70, 99, 40, 2, 42, 45, 28, 13, 33, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 95, 29, 38, 49, 1, 53, 39, 63, 72, 43, 68, 24, 80, 50, 60, 86, 56, 6, 8, 84, 67, 4, 36, 75, 32, 12, 94, 81, 66, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 2, 42, 45, 28, 13, 40, 70, 99, 47, 51, 77, 95, 29, 38, 36, 4, 75, 32, 12, 94, 81, 43, 1, 53, 39, 63, 72, 67, 84, 49, 68, 80, 24, 60, 50, 86, 56, 6, 8, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 2, 42, 45, 28, 13, 40, 70, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 8, 6, 56, 84, 67, 72, 49, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 2, 45, 28, 13, 47, 95, 77, 51, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 6, 56, 8, 42, 40, 70, 99, 4, 36, 32, 75, 12, 94, 81, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 57, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 28, 45, 42, 2, 13, 99, 70, 40, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 80, 24, 60, 50, 86, 6, 8, 56, 84, 67, 72, 49, 43, 38, 29, 66, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 72, 80, 24, 60, 50, 86, 8, 56, 6, 42, 2, 45, 29, 38, 84, 67, 68, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 64, 3, 25, 65, 96, 78, 66, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 49, 68, 80, 24, 60, 50, 86, 56, 6, 8, 29, 38, 84, 67, 53, 63, 39, 66, 57, 92, 27, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 95, 77, 51, 12, 94, 81, 1, 43, 72, 49, 67, 84, 38, 29, 36, 4, 32, 75, 53, 39, 63, 68, 80, 24, 6, 8, 56, 86, 50, 60, 27, 92, 66, 57, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 29, 95, 77, 51, 36, 4, 38, 49, 67, 72, 43, 63, 39, 53, 1, 68, 80, 24, 60, 57, 92, 27, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 50, 86, 56, 6, 8, 84, 94, 81, 12, 75, 32, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 43, 49, 68, 80, 24, 60, 50, 86, 56, 6, 8, 84, 67, 72, 1, 53, 39, 63, 57, 66, 27, 92, 0, 7, 96, 3, 64, 25, 65, 78, 79, 30, 88, 41, 55, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 24, 80, 60, 50, 8, 6, 56, 86, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 38, 29, 80, 60, 24, 86, 6, 56, 8, 50, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 36, 4, 38, 29, 84, 67, 72, 49, 43, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 80, 24, 8, 6, 56, 86, 50, 60, 57, 27, 92, 66, 0, 7, 41, 88, 30, 79, 55, 96, 64, 65, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 29, 38, 80, 24, 8, 6, 56, 86, 50, 60, 57, 27, 92, 66, 88, 30, 79, 55, 96, 3, 78, 64, 65, 25, 7, 41, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 38, 29, 56, 86, 6, 8, 24, 80, 60, 50, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 38, 29, 80, 24, 60, 50, 86, 6, 8, 56, 57, 27, 92, 66, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 38, 95, 77, 51, 29, 8, 6, 56, 86, 50, 60, 24, 80, 57, 27, 92, 0, 7, 66, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 49, 43, 72, 67, 84, 38, 95, 77, 51, 29, 86, 50, 60, 80, 24, 8, 6, 56, 57, 66, 27, 92, 0, 7, 96, 55, 30, 79, 88, 41, 3, 65, 25, 64, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 39, 53, 63, 1, 43, 72, 49, 67, 84, 38, 29, 77, 51, 95, 80, 24, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 60, 50, 8, 6, 56, 86, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 24, 80, 50, 60, 68, 63, 53, 39, 67, 84, 38, 29, 77, 51, 95, 6, 8, 56, 86, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 29, 77, 51, 95, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 88, 30, 79, 41, 7, 78, 64, 25, 65, 3, 96, 55, 66, 57, 27, 92, 0, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 49, 72, 67, 84, 38, 51, 77, 95, 29, 56, 8, 6, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 66, 57, 27, 92, 0, 7, 96, 55, 41, 88, 30, 79, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 56, 8, 6, 86, 50, 60, 80, 24, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 24, 80, 60, 50, 8, 6, 56, 86, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 29, 8, 6, 56, 86, 24, 80, 50, 60, 57, 92, 27, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 29, 56, 86, 8, 6, 60, 50, 80, 24, 57, 92, 27, 66, 96, 55, 79, 30, 88, 41, 7, 0, 78, 65, 3, 64, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 56, 8, 6, 86, 24, 80, 60, 50, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 8, 6, 56, 86, 50, 60, 80, 24, 92, 27, 57, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 29, 8, 6, 56, 86, 50, 60, 80, 24, 66, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 95, 77, 51, 29, 86, 50, 60, 80, 24, 8, 6, 56, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 64, 25, 65, 3, 96, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 77, 95, 51, 8, 6, 56, 86, 50, 60, 80, 24, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 78, 3, 65, 64, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 24, 80, 60, 6, 8, 56, 86, 50, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 8, 6, 86, 56, 50, 80, 24, 60, 57, 27, 92, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 56, 8, 6, 86, 80, 24, 60, 50, 57, 27, 92, 66, 88, 30, 79, 55, 96, 7, 41, 0, 78, 3, 65, 25, 64, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 56, 8, 6, 86, 50, 60, 80, 24, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 80, 24, 50, 60, 8, 6, 56, 86, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 8, 6, 56, 86, 50, 60, 80, 24, 66, 57, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 80, 24, 86, 8, 6, 56, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 80, 24, 86, 56, 8, 6, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 8, 6, 92, 27, 57, 66, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 27, 92, 66, 0, 7, 41, 88, 30, 79, 55, 96, 65, 25, 64, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 8, 6, 56, 57, 27, 92, 66, 96, 55, 79, 30, 88, 41, 7, 0, 78, 3, 65, 64, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 92, 27, 57, 66, 79, 30, 88, 55, 96, 3, 65, 64, 25, 78, 0, 7, 41, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 27, 92, 66, 0, 78, 65, 64, 25, 3, 96, 55, 41, 7, 30, 88, 79, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 27, 92, 66, 0, 7, 41, 88, 30, 79, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 30, 79, 55, 88, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 30, 79, 88, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 7, 41, 79, 30, 88, 55, 96, 65, 64, 25, 3, 78, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 41, 7, 88, 30, 79, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 41, 88, 30, 79, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 55, 41, 88, 30, 79, 7, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[74, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 89, 5, 48, 91, 62, 46, 10, 14, 16, 31, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 4, 36, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 39, 63, 68, 67, 84, 38, 51, 77, 95, 29, 50, 60, 24, 80, 86, 56, 6, 8, 57, 66, 27, 92, 0, 78, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 74]");
    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(33450.08447376656);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 38845.35851682551, 3004.3870870225496, 0.0, 57.41877551020408, 32527.274478424253);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 28894.947778455607, 1997.8725519890177, 0.5, 2.4946938775510206, 27948.273299696062);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 29319.689906015996, 2643.6762864510492, 0.5, 3.528979591836735, 27624.201731102003);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 28317.361388215795, 1841.8415040286568, 0.5, 2.1395918367346938, 27624.201731102003);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 28715.572486545923, 2293.0798622205366, 0.5, 2.431020408163265, 27624.201731102003);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 28569.05228094572, 2491.8152175630908, 0.5, 2.2489795918367346, 27592.58101972313);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 36838.27204356019, 2570.2643026887195, 0.455, 27.921632653061224, 33096.54121374458);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 32304.60109151141, 4080.32207509414, 0.495, 8.088163265306122, 28882.784568136016);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 30074.9807501471, 3446.404022400456, 0.495, 3.4261224489795916, 28362.92065963994);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 38317.452854880736, 2577.0291516987277, 0.48, 25.002448979591836, 33224.884681082985);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 32212.14822588858, 2725.9305157472104, 0.495, 9.311836734693877, 29561.3623915484);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 32852.39863683625, 3297.3054446356646, 0.495, 7.541224489795918, 29321.584716936184);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 35992.731965774496, 3069.778497619472, 0.485, 18.497142857142858, 30994.497951542075);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 34080.87554021445, 2234.0630385507184, 0.5, 2.795918367346939, 28090.04642202818);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 34543.30897289966, 1576.1179271245387, 0.5, 2.1412244897959183, 28090.04642202818);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 38790.97577580357, 1748.7278388266814, 0.485, 11.51591836734694, 34058.975207349635);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 32772.51792604627, 2408.7937784145756, 0.56, 3.76734693877551, 31581.54685335584);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 31486.364178988286, 91.96770028521796, 0.485, 0.08, 31473.357982083937);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 39522.73091647077, 2468.7224293927807, 0.485, 7.293877551020408, 34608.37870890691);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 33560.46835823725, 838.5084816326769, 0.59, 3.911020408163265, 32880.7949053178);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 34279.904142088584, 2633.825935375461, 0.49, 1.8808163265306121, 32805.81334785308);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 36275.711552835375, 2870.7709286719023, 0.485, 3.960816326530612, 33374.93849938078);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 33743.99707816244, 2219.0235725437187, 0.5, 0.7330612244897959, 33146.509602892875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 33543.01021657797, 1648.8515970537276, 0.49, 0.6130612244897959, 33146.509602892875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 38961.708359035336, 2040.526236382538, 0.485, 4.460408163265306, 34041.26957942261);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 33748.45904406228, 242.17345370191364, 0.49, 0.9314285714285714, 33707.91945950127);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 33768.38652555865, 354.56622278557916, 0.49, 1.1257142857142857, 33707.91945950127);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 35458.93876799731, 1.469965419604284E-11, 0.48, 0.0, 35458.93876799729);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 33527.3536273115, 311.0128845015011, 0.48, 0.38857142857142857, 33450.08447376656);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 33450.0844737666, 3.67491354901071E-11, 0.485, 0.0, 33450.08447376656);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[74, 18, 3, 64, 65, 25, 21, 69, 93, 87, 15, 78, 17, 37, 23, 98, 35, 20, 73, 58, 31, 97, 22, 90, 44, 16, 14, 10, 71, 83, 9, 89, 5, 48, 62, 46, 92, 27, 57, 60, 24, 80, 50, 86, 6, 8, 56, 19, 11, 26, 85, 34, 76, 59, 61, 54, 82, 33, 42, 2, 45, 95, 77, 51, 36, 4, 47, 99, 70, 40, 13, 28, 84, 67, 38, 29, 81, 75, 12, 32, 94, 39, 63, 53, 1, 43, 72, 49, 68, 66, 0, 7, 91, 79, 41, 88, 30, 55, 96, 52, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 71, 20, 73, 58, 16, 14, 10, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 48, 5, 62, 46, 96, 55, 41, 88, 30, 79, 3, 64, 25, 65, 7, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 10, 16, 14, 73, 58, 20, 71, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 10, 16, 14, 73, 58, 20, 71, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 54, 82, 33, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 11, 19, 56, 6, 8, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 70, 40, 99, 47, 13, 45, 42, 2, 28, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 28, 13, 45, 42, 2, 70, 40, 99, 47, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 28, 13, 45, 42, 2, 70, 40, 99, 47, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 28, 13, 45, 42, 2, 70, 40, 99, 47, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 76, 59, 61, 34, 26, 85, 6, 8, 56, 86, 50, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 28, 13, 45, 42, 2, 70, 40, 99, 47, 33, 82, 54, 11, 19, 57, 92, 27, 66, 0, 91, 79, 30, 88, 41, 7, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 71, 20, 73, 58, 31, 44, 97, 22, 90, 57, 92, 27, 66, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 60, 50, 86, 8, 6, 56, 19, 85, 26, 11, 82, 54, 33, 2, 42, 28, 13, 70, 40, 99, 47, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 29, 45, 61, 34, 59, 76, 0, 91, 7, 96, 55, 64, 25, 65, 3, 30, 88, 41, 79, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 85, 26, 11, 82, 54, 33, 2, 42, 45, 28, 13, 70, 40, 99, 47, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 29, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 2, 42, 45, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 2, 42, 45, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 80, 24, 72, 49, 43, 1, 63, 39, 53, 68, 60, 50, 8, 6, 56, 19, 11, 54, 82, 33, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 86, 26, 85, 34, 59, 61, 76, 57, 27, 92, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 92, 27, 57, 24, 80, 86, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 60, 50, 82, 33, 54, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 66, 92, 27, 57, 24, 80, 86, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 60, 50, 82, 33, 54, 45, 28, 2, 42, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 49, 72, 43, 1, 63, 39, 53, 68, 0, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 31, 61, 76, 59, 26, 85, 19, 11, 8, 6, 56, 86, 50, 60, 24, 80, 57, 92, 27, 66, 53, 39, 63, 68, 72, 43, 1, 81, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 49, 84, 67, 28, 13, 70, 40, 99, 47, 29, 33, 54, 82, 45, 2, 42, 34, 0, 91, 7, 41, 79, 30, 88, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 86, 50, 8, 6, 56, 60, 24, 57, 92, 27, 66, 91, 7, 41, 79, 30, 88, 55, 25, 65, 64, 3, 96, 0, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 86, 50, 8, 6, 56, 60, 24, 57, 92, 27, 66, 91, 7, 41, 79, 30, 88, 55, 25, 65, 64, 3, 96, 0, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 50, 8, 6, 56, 86, 57, 92, 27, 66, 91, 7, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 0, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 0, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 0, 31, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 0, 31, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 0, 31, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 0, 31, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 57, 92, 27, 66, 91, 7, 0, 31, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 24, 66, 57, 92, 27, 31, 0, 91, 7, 41, 30, 88, 79, 55, 25, 65, 64, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 8, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 66, 57, 27, 92, 31, 0, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 95, 77, 51, 36, 32, 75, 12, 94, 81, 4, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 7, 0, 91, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 36, 32, 75, 12, 94, 81, 4, 77, 51, 95, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 7, 0, 91, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 29, 36, 32, 75, 12, 94, 81, 4, 77, 51, 95, 47, 99, 70, 40, 28, 13, 2, 42, 45, 33, 82, 54, 8, 60, 57, 27, 92, 66, 41, 88, 30, 79, 55, 96, 3, 65, 64, 25, 7, 0, 91, 31, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 7, 0, 91, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 7, 0, 91, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 96, 64, 25, 65, 3, 7, 0, 91, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 64, 25, 65, 3, 96, 91, 0, 7, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 64, 25, 65, 3, 96, 91, 0, 7, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 64, 25, 65, 3, 96, 91, 0, 7, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 55, 64, 25, 65, 3, 96, 91, 0, 7, 31, 8, 54, 82, 33, 42, 45, 2, 28, 13, 99, 70, 40, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 31, 0, 91, 55, 64, 25, 65, 3, 96, 68, 67, 84, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 70, 40, 99, 13, 2, 28, 42, 45, 82, 33, 54, 8, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 84, 67, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 67, 84, 4, 36, 32, 75, 12, 94, 81, 68, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 65, 64, 25, 3, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 96, 3, 64, 25, 65, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[74, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[74, 18, 52, 87, 15, 21, 69, 93, 78, 17, 37, 23, 98, 35, 83, 9, 89, 48, 5, 62, 46, 14, 16, 10, 58, 73, 20, 71, 90, 97, 22, 44, 59, 61, 76, 19, 11, 26, 85, 34, 6, 56, 86, 50, 24, 80, 72, 49, 43, 1, 53, 39, 63, 60, 57, 92, 27, 66, 41, 88, 30, 79, 7, 0, 91, 31, 82, 54, 8, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 84, 67, 68, 81, 4, 36, 32, 75, 12, 94, 55, 64, 25, 65, 3, 96, 74]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_10_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(42782.220399815);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 5, 39380.244725952005, 2236.2113695227135, 0.69, 11.180408163265307, 37253.5435331412);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 10, 37824.97515641779, 1718.5425901800982, 0.5033333333333333, 3.5951020408163266, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 11, 37772.69070937771, 1439.2545753718443, 0.5033333333333333, 3.670204081632653, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 15, 38771.57648215216, 3258.652074924969, 0.5033333333333333, 3.7991836734693876, 36953.25669688103);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 20, 37996.0636648702, 1855.0934660053028, 0.51, 9.903673469387755, 36835.678774058586);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 21, 47986.80056090674, 2299.1164186560263, 0.5233333333333333, 41.36163265306122, 43559.97390992297);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 25, 47191.083582138584, 2470.3508503187836, 0.5066666666666667, 22.304489795918368, 41810.66403909254);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 30, 43674.582782941245, 3458.93376904607, 0.54, 17.85795918367347, 38747.49142285263);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 31, 50309.76533639505, 2371.784083592969, 0.48333333333333334, 47.42938775510204, 44756.04345458649);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 35, 44246.71483051977, 2638.9004610095762, 0.6, 15.815510204081633, 41233.022113020525);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 40, 43366.86823328603, 3012.477299360355, 0.5266666666666666, 16.609795918367347, 39844.22797178504);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 41, 49736.579301626996, 2622.283125765836, 0.49666666666666665, 45.842448979591836, 45785.46366676366);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 45, 44861.649604506456, 2601.71399853282, 0.55, 15.96408163265306, 42188.00944270302);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 43500.40840406119, 2509.2427515854683, 0.5166666666666667, 13.27265306122449, 40977.007903618534);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 51, 48928.01061629806, 2710.9339320380464, 0.48333333333333334, 45.773061224489794, 44188.61463961986);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 55, 42279.66179818327, 2516.360027291226, 0.6766666666666666, 19.958367346938775, 39428.486644698394);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 60, 39777.18530547588, 1789.4655706646738, 0.55, 11.49795918367347, 37929.59191541065);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 61, 50261.29912299589, 2372.326064220127, 0.4766666666666667, 52.15591836734694, 46539.44930485514);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 65, 44093.77241480796, 2431.968358122541, 0.62, 19.73551020408163, 40428.8082438616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 70, 42761.73341286881, 2796.394816209733, 0.5333333333333333, 10.971428571428572, 40162.500613883385);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 71, 48651.36032318041, 2566.012981184256, 0.46, 54.60979591836735, 44391.87387102119);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 75, 43798.70624646148, 1926.7692191243011, 0.5966666666666667, 14.644897959183673, 41596.27951451102);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 80, 41204.96753192611, 2195.1363051548624, 0.55, 11.906938775510204, 39234.08466636357);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 81, 49901.397688213125, 2253.39399186619, 0.5233333333333333, 51.204897959183675, 46060.513165988305);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 85, 43919.74573138784, 2692.3666350490216, 0.63, 16.064489795918366, 41364.98122817751);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 90, 42385.14503510117, 2394.858644762676, 0.5266666666666666, 11.292244897959185, 40397.87339380637);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 91, 48548.63992069661, 2636.4647527346174, 0.4866666666666667, 50.89959183673469, 44184.63478253695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 95, 41744.37004737782, 1704.1337310444637, 0.5466666666666666, 10.860408163265307, 40062.53549670421);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 41848.555787115016, 1979.4773462990038, 0.51, 12.178775510204082, 39100.66285420073);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 47382.80639641878, 1595.8085461021888, 0.4866666666666667, 34.624489795918365, 41748.95096406063);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 105, 44205.38719674801, 2657.387820144304, 0.53, 23.528163265306123, 40648.24727629191);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 110, 43205.8436844626, 3743.6357224868125, 0.5133333333333333, 22.759183673469387, 38920.03456285808);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 111, 48030.79925299323, 2211.8558454492186, 0.49, 46.204081632653065, 43390.00153165058);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 115, 42102.87896390296, 2238.8459771421017, 0.5933333333333334, 9.773877551020409, 39931.52972004511);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 120, 41067.83047092615, 2361.813736996957, 0.51, 7.514285714285714, 38691.73040972568);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 121, 49358.67505451272, 2346.4118733044284, 0.4766666666666667, 48.223673469387755, 45092.91703155242);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 125, 45192.36189318273, 2453.356736163021, 0.5433333333333333, 18.675102040816327, 41871.0940552145);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 130, 42867.283174176635, 2378.302477847918, 0.5333333333333333, 8.176326530612245, 40256.96000355166);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 131, 49010.357030836494, 3066.53787583369, 0.48, 42.906122448979595, 43609.01896706357);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 135, 45100.1801123484, 3054.670701117087, 0.56, 16.771428571428572, 39971.07203215028);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 140, 41776.91836298612, 2956.1119946070635, 0.54, 11.558367346938775, 38908.6494659489);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 141, 48969.061876602944, 1744.438002424648, 0.47333333333333333, 28.930612244897958, 45419.2848005405);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 145, 44551.861154542166, 2080.5771393386544, 0.5633333333333334, 18.991836734693877, 41909.46749194072);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 43288.68453420477, 2836.8862096489815, 0.5233333333333333, 10.882448979591837, 40557.13280295276);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 151, 49421.79307338901, 2820.6129611468746, 0.49666666666666665, 39.63591836734694, 45133.551685664075);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 155, 44162.63678683438, 3074.5927735220707, 0.5933333333333334, 20.881632653061224, 40190.369329762005);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 160, 43596.21921240928, 3195.2162754698256, 0.5266666666666666, 20.019591836734694, 39245.242744278934);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 161, 49043.80508109326, 3266.788881744055, 0.49666666666666665, 50.43265306122449, 44058.389982921195);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 165, 42861.785928819605, 1655.9107376359182, 0.5266666666666666, 13.333061224489796, 40824.93103188491);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 170, 42051.20332500498, 2551.795062330797, 0.5033333333333333, 12.777959183673469, 39016.76634613329);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 171, 47133.89427009032, 2147.9647688162636, 0.48, 46.06040816326531, 42486.69695661559);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 175, 43301.14157828266, 2556.4866810748276, 0.5433333333333333, 13.702857142857143, 39689.664081099574);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 180, 41394.010556832734, 2723.2772884934966, 0.5166666666666667, 7.791836734693877, 39152.85129977916);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 181, 49403.35530741579, 2572.078147442543, 0.49333333333333335, 40.0465306122449, 45494.4949549696);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 185, 44845.02951048374, 3023.73325068702, 0.54, 11.739591836734695, 41647.674392423316);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 190, 42914.59901647333, 2899.3800320708606, 0.5266666666666666, 7.435102040816327, 40542.12120189291);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 191, 48390.02227998792, 2522.056388936403, 0.48333333333333334, 44.63918367346939, 42485.16454891067);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 195, 43178.17816585648, 1891.6166766508748, 0.5233333333333333, 18.017142857142858, 40664.689271820265);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 42053.31579781313, 3024.2752508844665, 0.53, 14.66938775510204, 39438.517069135734);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 51864.099206148174, 3179.8996480477726, 0.5, 38.7534693877551, 44293.903477720894);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 205, 45352.34052970261, 3095.9255768742396, 0.5, 19.02204081632653, 41566.26680070166);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 210, 45470.13967689462, 3147.9589343419607, 0.5133333333333333, 19.90122448979592, 41395.31465277148);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 211, 49416.89072705435, 2969.949573787631, 0.47333333333333333, 38.950204081632656, 44360.7989854102);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 215, 44038.64648521157, 2310.3748259131444, 0.5466666666666666, 23.271020408163267, 40468.00347684353);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 220, 44196.44975887252, 2858.3286126358244, 0.5466666666666666, 18.68326530612245, 40468.00347684353);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 221, 48768.07418736013, 2323.7230045169385, 0.48, 39.733877551020406, 44740.9446898715);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 225, 44655.79240129981, 2641.862472184639, 0.5266666666666666, 12.077551020408164, 42282.78159450389);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 230, 42504.64369521883, 2543.322265444197, 0.5466666666666666, 10.03265306122449, 40469.19448137315);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 231, 47617.89438823733, 2209.4416287397466, 0.49333333333333335, 34.984489795918364, 41551.836065952535);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 235, 41587.096228242706, 1882.524289628331, 0.5433333333333333, 11.103673469387756, 39622.523574599334);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 240, 40307.1434263166, 2436.990841865765, 0.51, 8.6, 38187.99091315538);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 241, 49489.6351559949, 2037.2311743606388, 0.4766666666666667, 39.114285714285714, 46429.450732904654);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 245, 45459.37770796019, 2272.09144769892, 0.5066666666666667, 14.99265306122449, 42855.276014493);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 42962.87251901082, 2495.154954248679, 0.5366666666666666, 8.434285714285714, 40964.52305883974);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 251, 47701.683483544206, 2256.12758888613, 0.4666666666666667, 35.41795918367347, 44067.06927540179);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 255, 40584.456554702905, 1559.3661329011823, 0.6566666666666666, 7.220408163265306, 39787.40941527133);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 260, 40604.00028952036, 2797.8951044401583, 0.5266666666666666, 5.596734693877551, 38460.601524012985);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 261, 49261.68114882624, 2776.4886005592434, 0.5066666666666667, 28.337142857142858, 44181.555118224045);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 265, 45584.792816979854, 2796.6931111898657, 0.53, 18.579591836734693, 41912.099099883584);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 270, 44453.07797972097, 3034.2596197608254, 0.49666666666666665, 12.391020408163266, 41204.736163455964);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 271, 48941.91937092711, 3396.043325668498, 0.47, 40.25469387755102, 43226.59184447561);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 275, 43251.889722786276, 2884.0355225857757, 0.54, 10.696326530612245, 40789.3949748828);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 280, 41559.99059543866, 1623.824645328668, 0.52, 8.362448979591838, 39333.27527302764);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 281, 49764.52291913796, 2547.1832745298534, 0.48, 40.136326530612244, 44060.46060527557);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 285, 45706.50517021031, 2875.3123210758963, 0.53, 14.691428571428572, 42110.85210241381);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 290, 44963.58494029014, 3303.9790391161264, 0.51, 9.942857142857143, 41054.14749142349);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 291, 48222.12410527182, 2582.7540038642906, 0.49, 35.857142857142854, 42287.36968772486);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 295, 45614.639802977406, 1913.0052845870232, 0.4866666666666667, 14.631836734693877, 41494.221773007026);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 42337.03707561449, 2210.5760785731413, 0.5333333333333333, 8.09061224489796, 39861.14141107144);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 48971.7963666605, 2440.3623343213794, 0.49333333333333335, 36.89224489795918, 45382.05136412604);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 305, 44844.46278030728, 2342.845970595264, 0.57, 13.616326530612245, 41716.07440527317);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 310, 40916.23451330794, 2251.0653168881054, 0.5366666666666666, 4.999183673469388, 39551.65184055166);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 311, 47584.11479173132, 1579.1130427133687, 0.51, 26.091428571428573, 42894.64028749335);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 315, 43215.502977901604, 1925.8016401689817, 0.5066666666666667, 7.924081632653062, 41183.693363623446);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 320, 41983.72413717121, 1569.5199469769905, 0.49333333333333335, 6.668571428571428, 40576.9508829911);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 321, 47678.34932324333, 2644.209177795665, 0.48333333333333334, 28.659591836734695, 43570.62418252463);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 325, 44315.286906773865, 2645.5058953456246, 0.5333333333333333, 11.696326530612245, 41629.51926081459);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 330, 42124.09329354411, 2273.299509442857, 0.5166666666666667, 5.54530612244898, 40619.27541100371);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 331, 46935.01618498727, 2423.2779031715, 0.4633333333333333, 36.500408163265305, 42742.745757371114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 335, 43720.825950921055, 2883.4290517928594, 0.57, 11.382857142857143, 39652.06872346682);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 340, 39755.72449261792, 2227.535037008457, 0.5033333333333333, 2.299591836734694, 38523.03666660232);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 341, 49104.71843523887, 1674.4820738193107, 0.49666666666666665, 18.31591836734694, 45115.57636291025);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 345, 44080.4621495036, 2725.0945694301467, 0.5466666666666666, 8.153469387755102, 41583.5549538481);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 41671.68009033991, 2053.435088634681, 0.52, 6.977142857142857, 39375.59141709325);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 351, 48372.00749146284, 1620.6111922137675, 0.5233333333333333, 32.19673469387755, 43745.12520565191);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 355, 42629.61735570124, 2419.5976137752323, 0.5866666666666667, 7.300408163265306, 40670.220962198684);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 360, 41753.0911723614, 2806.247956990753, 0.49, 4.5902040816326535, 40015.19488796995);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 361, 48234.62842309233, 3126.1192259310296, 0.48333333333333334, 26.477551020408164, 43263.8997409505);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 365, 43300.179754119905, 1783.8358966716394, 0.5066666666666667, 6.6906122448979595, 40948.67071937498);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 370, 42012.64208906587, 1941.1150605651465, 0.5033333333333333, 3.409795918367347, 40854.14745870369);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 371, 46449.20321367294, 2571.8779907833787, 0.4766666666666667, 24.21142857142857, 39960.03064798138);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 375, 41474.215671867954, 1984.8163345083217, 0.5, 9.006530612244898, 39173.332854822846);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 380, 41229.68770494689, 2525.300032842137, 0.5033333333333333, 7.427755102040816, 38753.40960373624);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 381, 48167.500412326444, 2337.209570877551, 0.48333333333333334, 27.620408163265306, 44191.680044489054);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 385, 42152.548011857776, 1267.9438440524427, 0.53, 4.661224489795918, 41172.986115256084);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 390, 40918.52646343258, 1786.145014606612, 0.52, 4.122448979591836, 39914.84965321997);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 391, 47281.71262338916, 2117.881584379867, 0.49, 22.012244897959185, 44074.7300338746);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 395, 43960.92023328968, 1721.578075680832, 0.51, 6.475102040816327, 41841.10143357109);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 42703.59802311387, 1214.4161605253294, 0.49, 7.404897959183674, 41529.110075391996);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 46606.58118240173, 2062.92506250184, 0.4766666666666667, 27.652244897959182, 42222.046106685644);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 405, 43492.85733259625, 2214.0827720863113, 0.51, 9.297142857142857, 41070.50112438786);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 410, 41119.46655456255, 1703.530204565698, 0.5066666666666667, 4.769795918367347, 39439.86534850542);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 411, 48257.904818984935, 2482.4257936358185, 0.4866666666666667, 29.398367346938777, 43212.570204223746);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 415, 45160.395824048115, 3134.5557187242216, 0.5066666666666667, 10.18204081632653, 41211.19560682194);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 420, 42264.193328536574, 1948.146513326134, 0.5066666666666667, 8.874285714285714, 40111.62374234888);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 421, 47258.758961474945, 2173.273120190542, 0.49666666666666665, 27.41469387755102, 43273.76230425956);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 425, 44310.63191486434, 2361.2773536914606, 0.5266666666666666, 13.164897959183673, 41717.39969861023);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 430, 44088.07774480845, 2225.97016936211, 0.5233333333333333, 14.190204081632652, 41174.980695350234);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 431, 47895.71763654735, 2004.4323840891834, 0.5266666666666666, 29.991020408163266, 44194.97722992315);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 435, 42491.779380069434, 2257.126340032148, 0.58, 6.286530612244898, 39584.462786470154);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 440, 40681.725031640424, 2070.971231409877, 0.5333333333333333, 5.0620408163265305, 38786.80085009331);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 441, 50785.98024550464, 2540.0401275099252, 0.47, 27.110204081632652, 45709.614535000284);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 445, 43715.96754808259, 2088.957326012379, 0.54, 7.7306122448979595, 41720.17334048981);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 44282.47343106553, 2544.522939160184, 0.49666666666666665, 9.295510204081634, 41462.40551440584);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 451, 47469.80691703975, 2362.213747234741, 0.48333333333333334, 28.71183673469388, 43272.467611270185);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 455, 41341.72378588501, 1574.3403243907926, 0.54, 8.809795918367348, 39792.270649838814);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 460, 41342.263243651934, 2194.135247431676, 0.49333333333333335, 4.194285714285714, 39225.909645393425);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 461, 45355.85991054052, 2068.9356511905535, 0.48333333333333334, 26.742857142857144, 42213.91864512698);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 465, 42214.57826342683, 2229.571199968323, 0.5066666666666667, 6.8040816326530615, 40379.872887530844);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 470, 41608.7915474406, 2138.8009937617944, 0.49333333333333335, 7.010612244897959, 39886.225459027024);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 471, 46293.92563204806, 2645.610240545831, 0.4866666666666667, 20.866122448979592, 43394.045843139225);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 475, 43932.62959238898, 1527.914321166882, 0.51, 11.833469387755102, 42403.02278439527);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 480, 44313.53639965663, 2867.517466976548, 0.5366666666666666, 11.642448979591837, 40564.83084542353);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 481, 47156.291074874025, 2283.0227398604325, 0.5266666666666666, 30.856326530612243, 41792.976775139665);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 485, 43395.27318676325, 2168.7576914403567, 0.5133333333333333, 9.44, 41123.83308572183);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 490, 42072.06891180128, 1777.7501762785632, 0.5166666666666667, 5.933061224489796, 40798.16770125273);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 491, 46432.715530123154, 1942.171196871518, 0.4766666666666667, 25.62857142857143, 43184.722775146605);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 495, 42777.6380392583, 1993.0480927626384, 0.5733333333333334, 7.142857142857143, 40848.634249193565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 43096.81457281758, 1894.3372108009396, 0.49333333333333335, 9.618775510204081, 40848.634249193565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 46756.06177849174, 1550.2163339068038, 0.46, 31.281632653061223, 44159.192161510895);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 505, 43721.07255771035, 2053.1648405601113, 0.5633333333333334, 7.848979591836735, 42008.310718136265);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 510, 43485.98024656747, 2390.889285254171, 0.49666666666666665, 6.193469387755102, 41910.63077246011);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 511, 49152.74776515155, 2111.2740444333954, 0.48333333333333334, 26.84, 45524.98885245044);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 515, 44549.219293729795, 1983.4189983536614, 0.5366666666666666, 5.77469387755102, 42953.29989940375);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 520, 43650.15857629162, 2289.9449794331354, 0.52, 3.163265306122449, 42421.49720226323);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 521, 48441.14077738689, 2761.349399056157, 0.4633333333333333, 30.484081632653062, 42685.91775429433);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 525, 44754.54941878202, 2125.154034164542, 0.5933333333333334, 11.500408163265305, 41890.05982201347);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 530, 44949.77154311622, 1832.049791466256, 0.49333333333333335, 5.499591836734694, 41686.63394564951);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 531, 47628.17315355014, 1866.8370017419, 0.4766666666666667, 26.706938775510203, 43949.51068538965);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 535, 41627.41183423241, 2138.5019780715, 0.53, 4.023673469387755, 40416.991705042485);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 540, 41510.160735578625, 1933.432339554047, 0.5, 6.521632653061224, 40203.331604833475);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 541, 47638.24510924299, 1710.5491323507247, 0.48, 26.303673469387753, 45166.22435040035);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 545, 46007.34771424023, 1884.9495238956943, 0.5233333333333333, 12.240816326530613, 43601.57357248904);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 44504.55128022478, 2299.4440176060652, 0.51, 7.375510204081633, 42300.202976657594);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 551, 46806.451928124705, 2131.846476240021, 0.48, 14.359183673469389, 44050.30949749389);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 555, 43325.2802199439, 1743.105332365011, 0.51, 6.24734693877551, 41871.87835680796);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 560, 43335.06928603527, 2809.159049985118, 0.5, 8.774693877551021, 41196.07989559375);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 561, 47251.08516834413, 1886.6948783184675, 0.4766666666666667, 26.379591836734694, 43622.311634195124);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 565, 45712.58810303825, 1929.168563747652, 0.5033333333333333, 8.228571428571428, 42991.83474820444);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 570, 43834.88837703039, 2351.19612014182, 0.5, 3.8955102040816327, 42018.47304307831);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 571, 47611.324919335355, 2098.197586308967, 0.48, 21.85142857142857, 43683.42110143719);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 575, 42454.42241340534, 2201.2046187342357, 0.6033333333333334, 6.926530612244898, 41136.22474556983);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 580, 42266.02216324922, 2632.438692841422, 0.49666666666666665, 4.373877551020408, 40536.69883791261);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 581, 46970.1197968533, 2359.8561963012835, 0.4766666666666667, 21.78448979591837, 44384.120781128404);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 585, 43823.659338134006, 1695.43461326844, 0.49666666666666665, 2.4212244897959185, 42786.87524543114);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 590, 43985.40904853694, 2280.4148847760325, 0.5166666666666667, 4.106122448979592, 42523.862960849365);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 591, 47939.942338377434, 1511.6329825963082, 0.49, 14.300408163265306, 45493.53074358684);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 595, 44194.70046060992, 1567.0348499279771, 0.5233333333333333, 8.085714285714285, 42138.32263755357);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 42953.34954891796, 1740.1262771285244, 0.49, 8.560816326530611, 41352.42437063385);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 46558.039408534176, 1560.9233531818172, 0.49, 15.119183673469388, 43436.12603415517);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 605, 42858.22656408175, 791.360943446823, 0.54, 3.562448979591837, 42274.76264573555);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 610, 42879.801032164534, 955.948143543128, 0.5, 6.702040816326531, 41811.02324277382);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 611, 45977.68263855197, 1594.8200501341669, 0.48333333333333334, 15.697142857142858, 43385.898344419664);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 615, 42049.65295748891, 1221.0725490995324, 0.5066666666666667, 3.8587755102040817, 40927.33019304818);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 620, 41178.90964088278, 1770.3623604747427, 0.49666666666666665, 2.5640816326530613, 40405.20344909285);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 621, 44640.17139910106, 1860.8539820175079, 0.49333333333333335, 3.9959183673469387, 43299.35841027555);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 625, 44244.69492222734, 2069.414425887971, 0.5066666666666667, 3.849795918367347, 42043.205884783245);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 630, 43730.05464179379, 2236.6288780004024, 0.5066666666666667, 3.719183673469388, 42043.205884783245);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 631, 45463.55915011189, 2050.3703506263378, 0.48, 9.299591836734693, 42739.131691815615);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 635, 44172.481137319, 2943.9677296918867, 0.5066666666666667, 4.391020408163265, 42135.88978168145);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 640, 43085.03182801035, 2456.7829832813745, 0.49333333333333335, 2.2489795918367346, 41547.05328505257);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 641, 46522.323528590525, 2186.2652541692078, 0.49666666666666665, 8.215510204081633, 42553.60698336119);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 645, 44236.57245491401, 1957.4882430238877, 0.51, 4.290612244897959, 42362.57746463786);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 43531.25708221634, 1681.8896650175475, 0.5, 4.288979591836735, 42106.42487819432);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 651, 45084.16139844749, 2075.406003331628, 0.49, 15.467755102040817, 42251.841343871136);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 655, 43821.632470168144, 2249.851221281262, 0.51, 7.741224489795918, 41747.42200852082);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 660, 41899.115766105, 991.8366741011439, 0.49333333333333335, 2.834285714285714, 41326.03381365155);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 661, 46291.08538781209, 1438.75207354524, 0.49, 8.558367346938775, 43774.824539350375);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 665, 44010.7623532035, 1026.7898985370414, 0.52, 5.071020408163266, 43352.839382391096);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 670, 43559.06142521187, 1457.6073192063518, 0.51, 1.2236734693877551, 43142.900674817996);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 671, 47708.39680783355, 1804.6986958540092, 0.48333333333333334, 10.8, 44268.86066005048);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 675, 44557.8534654512, 3599.596366767392, 0.51, 2.9918367346938775, 42128.79917950562);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 680, 43088.4751375233, 3214.9180628263375, 0.49333333333333335, 2.1877551020408164, 41533.7700956537);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 681, 46216.927686653406, 1586.4310209916584, 0.48333333333333334, 12.88326530612245, 44605.328207398554);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 685, 45174.8052132654, 2304.3798143684025, 0.5166666666666667, 6.46530612244898, 43062.415210584004);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 690, 44345.97546393143, 1589.2273903543935, 0.49666666666666665, 5.266938775510204, 42891.60579352088);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 691, 45961.791301584715, 1482.9238904853007, 0.4866666666666667, 17.456326530612245, 43743.8193446277);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 695, 41577.16926158365, 956.1401350007654, 0.53, 2.027755102040816, 41275.43315342695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 41335.979017311314, 531.9274079690188, 0.4866666666666667, 0.35918367346938773, 41244.43315342695);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 45898.88130493451, 1577.3457868961116, 0.4766666666666667, 11.986938775510204, 43539.24125025411);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 705, 42231.49076002556, 629.5457986068723, 0.5366666666666666, 2.890612244897959, 41490.81246694586);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 710, 41859.48245190341, 669.9179382752017, 0.5, 2.7012244897959183, 41482.017014796176);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 711, 47392.55068564956, 1784.807130300819, 0.4766666666666667, 13.431836734693878, 42999.89892429047);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 715, 42666.9993455242, 1194.9045255462495, 0.5, 1.5624489795918368, 42283.07049777824);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 720, 42916.92695243426, 1626.879574546221, 0.5, 2.249795918367347, 42283.07049777824);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 721, 45350.204706294135, 924.3634195355605, 0.48333333333333334, 9.155918367346938, 43411.52982861451);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 725, 43110.50131694474, 757.096635847702, 0.5033333333333333, 3.4212244897959185, 42151.92527814536);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 730, 42106.7309654645, 461.3768192241777, 0.51, 1.022857142857143, 41995.433764975576);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 731, 44304.74121583229, 1160.0198743452795, 0.4766666666666667, 10.178775510204082, 42437.17862904155);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 735, 42410.604709442036, 924.9668899565057, 0.52, 1.0865306122448979, 42094.70337468531);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 740, 42021.20164912022, 438.2075628276741, 0.4866666666666667, 1.4285714285714286, 41843.78651677425);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 741, 43882.71566094784, 895.5229513945287, 0.48333333333333334, 8.10204081632653, 42651.933834503754);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 745, 42738.34503786272, 1218.306776482321, 0.5066666666666667, 3.9812244897959186, 42157.85460086007);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 42627.35683870571, 814.6502977619979, 0.5066666666666667, 3.5053061224489794, 42157.85460086007);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 751, 46173.217714984836, 1286.8205782978612, 0.4766666666666667, 10.813877551020408, 43226.03074010265);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 755, 42647.37031410899, 386.78450343764695, 0.5233333333333333, 0.8914285714285715, 42532.415971076036);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 760, 42943.38947486693, 828.4249641047209, 0.5, 4.01795918367347, 42395.374696427876);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 761, 44347.10610041424, 1331.5864384464624, 0.48333333333333334, 4.681632653061224, 42800.153883520834);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 765, 43193.63704712592, 1525.6473532647024, 0.5033333333333333, 1.5248979591836735, 42483.53405389726);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 770, 43024.59734523645, 1706.3554580698217, 0.5033333333333333, 0.8514285714285714, 42483.53405389726);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 771, 46937.44546129453, 1827.5720572677662, 0.4766666666666667, 9.747755102040816, 44160.94529877871);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 775, 42304.0297842836, 271.3507515641108, 0.49666666666666665, 0.43673469387755104, 42235.354124809855);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 780, 42430.27826754842, 633.2184907487556, 0.49666666666666665, 0.7877551020408163, 42235.354124809855);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 781, 44222.32723669189, 754.7663534894488, 0.48333333333333334, 6.226122448979591, 43062.23336309703);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 785, 43049.95827118435, 786.3797117907071, 0.5066666666666667, 5.726530612244898, 42495.930158136885);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 790, 42086.1229101585, 918.5510684495356, 0.49666666666666665, 1.6824489795918367, 41728.25778870483);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 791, 46053.07634202903, 1419.9127954582493, 0.47333333333333333, 10.889795918367346, 43265.95453276317);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 795, 42964.474916516825, 690.3134833397212, 0.5066666666666667, 0.8057142857142857, 42745.58703002666);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 42967.4196507802, 535.3962322075012, 0.49, 1.1477551020408163, 42730.58703002666);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 45066.99398446389, 1496.1477666791577, 0.48333333333333334, 3.2653061224489797, 42857.8844371682);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 805, 43931.15565596605, 1704.8570109389102, 0.5033333333333333, 2.306122448979592, 42676.308136495296);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 810, 43471.33762384662, 1376.1667756901884, 0.49, 1.9493877551020409, 42541.006094713506);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 811, 43788.910012673376, 1092.4483325841786, 0.49333333333333335, 5.356734693877551, 42550.87969543168);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 815, 42340.10953478636, 92.92154817033415, 0.49666666666666665, 0.5485714285714286, 42299.962837520616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 820, 42139.31417748005, 182.36855364876087, 0.48333333333333334, 0.1983673469387755, 42109.9265486142);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 821, 44148.77799554113, 634.4980026747784, 0.48333333333333334, 5.355918367346939, 43258.36560560948);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 825, 43271.54609452265, 65.22650418914532, 0.48333333333333334, 0.156734693877551, 43258.36560560948);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 830, 42114.97577861403, 426.0267534511379, 0.48333333333333334, 1.542857142857143, 41984.12375285367);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 831, 44035.81820125795, 1124.7209211007025, 0.4866666666666667, 2.963265306122449, 42807.98066958933);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 835, 42896.71981530791, 837.2457521136374, 0.49333333333333335, 0.8457142857142858, 42574.71093903227);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 840, 42419.79348493757, 280.28246589999304, 0.49333333333333335, 0.5608163265306122, 42372.650234261404);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 841, 43237.88767052829, 595.1523762334413, 0.49, 1.4187755102040815, 42793.59531315151);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 845, 43186.00726718421, 1032.9959336682864, 0.49333333333333335, 2.4824489795918367, 42790.46885299505);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 43284.24547357624, 1662.8368467713672, 0.49, 2.36, 42401.38971566618);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 851, 44135.78370952414, 932.8873687760116, 0.4766666666666667, 5.599183673469388, 42611.23639707273);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 855, 42095.15450702357, 3.67491354901071E-11, 0.5066666666666667, 0.0, 42095.15450702361);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 860, 42222.232998817606, 506.8639552905782, 0.5066666666666667, 1.166530612244898, 42095.15450702361);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 861, 44018.98206176, 569.2992734017354, 0.48, 7.280816326530612, 42727.628945854565);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 865, 42754.235909709285, 347.9487855052591, 0.5066666666666667, 1.5624489795918368, 42546.3631005804);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 870, 42506.434279859095, 317.2963883278771, 0.4866666666666667, 1.2008163265306122, 42409.85782902469);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 871, 43531.30353708385, 1053.1701403272132, 0.4866666666666667, 1.8171428571428572, 42615.81071435585);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 875, 42615.824418170945, 0.09690060557256931, 0.4866666666666667, 0.12, 42615.81071435585);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 880, 42663.74907829257, 273.8995385529963, 0.4866666666666667, 0.23918367346938776, 42615.81071435585);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 881, 43913.72103478903, 819.5560146415887, 0.48333333333333334, 3.5583673469387755, 42264.07167666781);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 885, 43092.50981595497, 1448.7513941202467, 0.48333333333333334, 1.2669387755102042, 42264.07167666781);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 890, 42803.029751664595, 1247.4455469169252, 0.48333333333333334, 0.8228571428571428, 42264.07167666781);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 891, 42631.24815490742, 414.9684477266798, 0.48333333333333334, 0.5853061224489796, 42310.07344416755);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 895, 42310.073444167574, 2.204948129406426E-11, 0.48333333333333334, 0.0, 42310.07344416755);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 42456.81754957809, 625.3313198934225, 0.48333333333333334, 0.433469387755102, 42310.07344416755);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 43430.73595270836, 148.50339905533343, 0.48333333333333334, 0.47346938775510206, 42727.66005270201);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 905, 42888.49582925721, 372.2624867432346, 0.48333333333333334, 0.8228571428571428, 42727.66005270201);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 910, 42808.07794097963, 275.47903117132734, 0.48333333333333334, 0.4506122448979592, 42727.66005270201);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 911, 44080.171247988976, 895.6402894398212, 0.48, 4.882448979591837, 42300.34357567429);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 915, 42300.34357567432, 2.939930839208568E-11, 0.48, 0.0, 42300.34357567429);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 920, 42297.97924587636, 0.3411905373601919, 0.49, 0.12, 42297.93099424785);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 921, 43999.67316689958, 724.2302698824336, 0.49333333333333335, 1.8391836734693878, 43704.64469710664);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 925, 42979.60881919577, 735.850854670519, 0.5166666666666667, 0.43020408163265306, 42796.510138550875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 930, 42796.51013855083, 4.409896258812852E-11, 0.5166666666666667, 0.0, 42796.510138550875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 931, 42730.563874784755, 504.8835993882618, 0.48, 2.9518367346938774, 41940.04965992859);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 935, 41940.049659928554, 3.67491354901071E-11, 0.48, 0.0, 41940.04965992859);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 940, 41940.049659928554, 3.67491354901071E-11, 0.48, 0.0, 41940.04965992859);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 941, 43146.51733347585, 32.92085264311191, 0.48333333333333334, 0.16, 42918.3874636413);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 945, 42656.17903998689, 66.91836172886677, 0.48333333333333334, 0.34530612244897957, 42639.44233209401);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 42802.69666322197, 657.9907097223627, 0.48, 2.6253061224489795, 42363.68655158583);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 951, 44299.72109200463, 841.8918729497883, 0.4866666666666667, 3.5028571428571427, 43070.0594725486);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 955, 43192.168411566076, 400.5785063695825, 0.4866666666666667, 0.713469387755102, 43070.0594725486);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 960, 42720.75892020367, 65.96047611826263, 0.4866666666666667, 0.16, 42711.43070021301);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 961, 45383.793814917764, 841.2001739649447, 0.4866666666666667, 2.1640816326530614, 42787.64085990907);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 965, 42841.907164829, 383.7207219879954, 0.4866666666666667, 0.08, 42787.64085990907);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 970, 42787.6408599091, 2.939930839208568E-11, 0.4866666666666667, 0.0, 42787.64085990907);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 971, 42906.296106091, 180.40749046138978, 0.48333333333333334, 0.4310204081632653, 42422.660445022884);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 975, 42422.66044502287, 1.469965419604284E-11, 0.48333333333333334, 0.0, 42422.660445022884);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 980, 42422.66044502287, 1.469965419604284E-11, 0.48333333333333334, 0.0, 42422.660445022884);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 981, 43249.4742999201, 57.52161337264134, 0.48333333333333334, 0.08, 42850.869855690304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 985, 42850.86985569029, 1.469965419604284E-11, 0.48333333333333334, 0.0, 42850.869855690304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 990, 42850.86985569029, 1.469965419604284E-11, 0.48333333333333334, 0.0, 42850.869855690304);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 991, 42782.22039981495, 5.144878968614994E-11, 0.4866666666666667, 0.0, 42782.220399815);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 995, 42782.22039981495, 5.144878968614994E-11, 0.4866666666666667, 0.0, 42782.220399815);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 42782.22039981495, 5.144878968614994E-11, 0.4866666666666667, 0.0, 42782.220399815);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 124, 50, 86, 144, 60, 24, 80, 68, 72, 115, 146, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 28, 131, 13, 2, 45, 42, 114, 119, 82, 54, 148, 11, 26, 34, 85, 61, 59, 76, 109, 22, 90, 108, 31, 44, 16, 14, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 129, 0, 66, 147, 141, 104, 27, 92, 107, 57, 130, 97, 46, 83, 9, 126, 58, 140, 35, 103, 110, 101, 98, 17, 105, 89, 78, 136, 93, 23, 37, 87, 15, 21, 69, 52, 133, 18, 3, 64, 65, 128, 123, 25, 117, 118, 74, 96, 142, 55, 138, 121, 41, 132, 137, 30, 79, 88, 63, 39, 53, 1, 113, 143, 43, 49, 94, 125, 81, 12, 75, 32, 145, 102, 47, 99, 70, 40, 135, 122, 127, 33, 19, 149, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 49, 94, 125, 81, 12, 75, 32, 145, 102, 47, 99, 70, 40, 135, 42, 122, 45, 2, 13, 29, 120, 111, 28, 131, 51, 77, 95, 38, 100, 106, 4, 36, 146, 43, 115, 1, 143, 39, 53, 63, 68, 80, 24, 60, 124, 50, 144, 86, 11, 26, 34, 85, 149, 61, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 129, 0, 27, 92, 57, 107, 66, 141, 147, 104, 130, 46, 89, 105, 136, 93, 87, 15, 21, 69, 64, 3, 65, 128, 123, 25, 117, 96, 118, 142, 55, 138, 121, 41, 30, 79, 88, 132, 137, 74, 18, 133, 52, 78, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 83, 9, 59, 148, 82, 54, 19, 114, 119, 127, 33, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 39, 53, 63, 68, 80, 24, 60, 124, 50, 144, 86, 11, 19, 149, 85, 26, 34, 119, 114, 122, 135, 99, 70, 40, 47, 51, 77, 95, 4, 36, 146, 115, 1, 49, 43, 12, 75, 32, 145, 102, 94, 81, 125, 38, 100, 106, 29, 120, 111, 28, 45, 42, 2, 13, 131, 33, 54, 82, 148, 61, 59, 109, 76, 22, 90, 97, 108, 31, 44, 130, 27, 92, 57, 107, 66, 104, 141, 147, 129, 0, 46, 112, 9, 83, 136, 93, 15, 87, 21, 69, 64, 3, 65, 128, 123, 25, 117, 96, 118, 142, 55, 138, 121, 41, 30, 79, 88, 132, 137, 7, 91, 74, 18, 133, 52, 78, 17, 23, 37, 103, 110, 98, 101, 35, 126, 58, 140, 73, 20, 71, 10, 14, 16, 48, 5, 89, 105, 62, 127, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 39, 53, 63, 68, 80, 24, 60, 50, 124, 86, 144, 11, 19, 149, 85, 26, 34, 148, 82, 54, 114, 119, 122, 42, 127, 135, 2, 28, 111, 106, 120, 29, 47, 99, 70, 40, 13, 131, 33, 45, 100, 77, 95, 51, 4, 36, 146, 38, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 49, 1, 107, 66, 104, 141, 147, 129, 0, 91, 74, 18, 52, 133, 87, 21, 69, 64, 65, 128, 123, 25, 117, 96, 118, 142, 55, 138, 121, 41, 79, 30, 88, 132, 137, 7, 62, 5, 48, 46, 112, 9, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 15, 78, 136, 83, 89, 105, 3, 27, 92, 57, 130, 108, 31, 44, 97, 90, 59, 109, 76, 22, 16, 14, 10, 61, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 43, 49, 115, 125, 81, 94, 12, 75, 32, 145, 102, 36, 4, 146, 29, 120, 106, 111, 131, 28, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 100, 38, 95, 51, 77, 54, 82, 33, 148, 11, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 58, 140, 126, 35, 37, 23, 17, 105, 89, 48, 5, 112, 62, 74, 18, 9, 71, 20, 83, 98, 101, 110, 103, 78, 136, 133, 52, 93, 69, 21, 15, 87, 128, 3, 117, 123, 25, 64, 65, 142, 96, 118, 55, 41, 121, 132, 137, 88, 30, 79, 138, 0, 129, 27, 92, 57, 60, 50, 124, 86, 144, 80, 24, 68, 66, 104, 141, 147, 7, 91, 130, 46, 107, 63, 39, 53, 114, 119, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 115, 49, 43, 39, 53, 63, 68, 24, 80, 60, 124, 50, 86, 144, 11, 26, 148, 82, 54, 33, 45, 2, 135, 13, 47, 51, 77, 95, 38, 100, 106, 111, 131, 28, 42, 127, 122, 114, 119, 34, 85, 149, 19, 61, 76, 109, 59, 31, 44, 16, 14, 10, 97, 90, 108, 46, 129, 0, 91, 5, 48, 62, 89, 78, 136, 93, 110, 101, 98, 103, 37, 23, 17, 105, 83, 9, 112, 71, 20, 73, 58, 140, 126, 35, 15, 21, 69, 87, 52, 133, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 30, 79, 41, 121, 132, 137, 88, 7, 130, 27, 92, 141, 147, 66, 104, 107, 57, 22, 29, 120, 40, 70, 99, 4, 146, 36, 145, 102, 32, 12, 75, 94, 125, 81, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 60, 107, 57, 27, 92, 104, 66, 147, 141, 129, 0, 91, 5, 48, 62, 46, 130, 97, 90, 31, 10, 14, 16, 58, 140, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 18, 74, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 30, 79, 41, 121, 132, 137, 88, 7, 89, 112, 71, 73, 20, 9, 83, 87, 15, 93, 21, 133, 52, 105, 69, 108, 44, 22, 59, 149, 85, 26, 34, 11, 19, 148, 82, 54, 33, 114, 119, 122, 127, 99, 70, 40, 120, 29, 106, 111, 131, 28, 45, 42, 2, 135, 13, 47, 51, 77, 95, 4, 36, 102, 32, 12, 75, 145, 146, 81, 94, 125, 49, 115, 43, 24, 80, 124, 50, 86, 144, 109, 76, 61, 100, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 50, 124, 86, 144, 60, 107, 57, 27, 92, 147, 141, 129, 0, 91, 5, 48, 62, 20, 73, 58, 140, 126, 35, 83, 9, 89, 112, 71, 10, 14, 16, 31, 108, 44, 22, 59, 61, 76, 109, 19, 26, 34, 11, 85, 149, 82, 54, 33, 114, 119, 122, 42, 135, 127, 99, 70, 40, 13, 47, 28, 45, 2, 131, 111, 106, 29, 120, 38, 100, 51, 77, 95, 4, 36, 146, 94, 125, 81, 12, 75, 32, 145, 102, 43, 49, 115, 66, 104, 130, 97, 90, 46, 7, 121, 41, 138, 55, 142, 96, 118, 128, 25, 123, 117, 3, 64, 65, 52, 133, 78, 136, 87, 15, 21, 69, 93, 23, 37, 110, 101, 98, 103, 17, 105, 74, 18, 88, 79, 30, 132, 137, 148, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 50, 124, 86, 144, 60, 107, 57, 27, 92, 130, 44, 90, 97, 22, 76, 109, 19, 149, 61, 59, 16, 14, 10, 20, 73, 58, 140, 126, 35, 37, 110, 101, 98, 103, 17, 105, 78, 136, 87, 15, 21, 69, 93, 23, 83, 9, 89, 112, 71, 5, 48, 62, 0, 129, 141, 147, 41, 121, 30, 79, 88, 137, 132, 74, 18, 133, 52, 65, 128, 25, 123, 117, 64, 3, 96, 118, 138, 55, 142, 7, 91, 108, 31, 46, 66, 104, 43, 49, 115, 94, 125, 81, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 42, 127, 99, 70, 40, 13, 47, 95, 77, 51, 122, 114, 119, 33, 54, 82, 148, 11, 26, 85, 34, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 107, 57, 27, 92, 104, 141, 147, 66, 129, 0, 46, 108, 31, 90, 97, 22, 76, 109, 59, 61, 19, 149, 34, 85, 26, 148, 33, 54, 82, 114, 119, 11, 144, 86, 124, 50, 106, 111, 131, 28, 45, 2, 135, 42, 127, 99, 70, 40, 13, 47, 4, 36, 146, 38, 100, 120, 29, 77, 51, 95, 145, 102, 32, 12, 75, 94, 125, 81, 49, 115, 43, 137, 132, 121, 41, 138, 96, 118, 142, 55, 79, 30, 88, 7, 91, 74, 18, 89, 48, 62, 5, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 17, 105, 78, 136, 87, 15, 21, 69, 93, 133, 52, 65, 128, 25, 123, 117, 64, 3, 9, 83, 103, 110, 101, 98, 14, 16, 10, 44, 130, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 124, 50, 144, 86, 148, 114, 119, 11, 26, 85, 34, 149, 19, 54, 82, 33, 111, 131, 28, 45, 2, 135, 70, 40, 99, 42, 122, 127, 47, 77, 51, 95, 4, 36, 145, 102, 32, 12, 75, 94, 125, 81, 49, 115, 43, 146, 38, 100, 120, 29, 106, 13, 109, 76, 61, 59, 22, 90, 108, 31, 14, 16, 10, 44, 130, 0, 129, 141, 147, 66, 107, 57, 27, 92, 104, 7, 91, 79, 30, 137, 132, 88, 121, 41, 62, 5, 48, 89, 105, 52, 133, 78, 136, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 74, 18, 15, 87, 93, 17, 37, 23, 103, 110, 101, 98, 35, 71, 20, 73, 140, 58, 126, 112, 9, 83, 46, 97, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 148, 54, 82, 33, 19, 149, 61, 59, 22, 97, 44, 90, 108, 31, 10, 16, 14, 140, 58, 126, 35, 83, 9, 71, 20, 73, 98, 101, 103, 110, 37, 23, 17, 136, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 7, 79, 30, 41, 121, 137, 132, 88, 96, 74, 18, 15, 87, 93, 52, 133, 78, 105, 89, 48, 5, 62, 91, 0, 129, 130, 92, 104, 141, 147, 66, 107, 57, 27, 46, 112, 34, 26, 85, 11, 119, 114, 122, 42, 127, 135, 70, 40, 99, 13, 47, 77, 51, 95, 4, 36, 145, 32, 75, 12, 102, 94, 125, 81, 49, 115, 43, 146, 38, 100, 106, 29, 120, 131, 28, 45, 2, 111, 76, 109, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 61, 59, 22, 97, 90, 108, 31, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 83, 9, 89, 48, 5, 62, 0, 129, 130, 92, 27, 147, 107, 57, 109, 76, 85, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 13, 47, 77, 51, 95, 4, 36, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 2, 40, 70, 99, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 43, 104, 66, 141, 132, 88, 41, 121, 137, 79, 30, 138, 55, 118, 74, 96, 142, 7, 91, 105, 17, 37, 23, 98, 101, 103, 110, 136, 78, 133, 52, 18, 3, 64, 65, 128, 25, 123, 117, 21, 69, 87, 15, 93, 112, 46, 44, 34, 26, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 11, 148, 54, 82, 33, 45, 42, 127, 135, 13, 47, 2, 70, 40, 99, 28, 131, 111, 106, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 43, 120, 29, 122, 114, 119, 34, 85, 26, 149, 59, 61, 109, 76, 97, 22, 44, 90, 108, 31, 130, 147, 141, 104, 66, 107, 57, 27, 92, 129, 0, 62, 5, 48, 83, 9, 105, 96, 142, 55, 118, 74, 7, 91, 41, 121, 79, 30, 138, 88, 132, 137, 18, 3, 64, 65, 128, 25, 123, 117, 21, 69, 87, 15, 93, 17, 37, 23, 98, 101, 103, 110, 136, 78, 133, 52, 89, 112, 71, 126, 35, 20, 73, 140, 58, 14, 16, 10, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 109, 76, 97, 22, 44, 90, 108, 31, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 37, 23, 17, 136, 78, 105, 93, 15, 87, 21, 69, 133, 52, 18, 74, 7, 91, 129, 0, 62, 5, 48, 89, 9, 112, 46, 130, 27, 92, 57, 107, 66, 141, 147, 104, 137, 132, 30, 88, 41, 121, 79, 55, 138, 96, 118, 142, 65, 128, 25, 123, 117, 3, 64, 83, 98, 101, 103, 110, 34, 85, 26, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 28, 2, 70, 40, 99, 47, 13, 135, 111, 131, 45, 120, 29, 106, 100, 38, 95, 77, 51, 36, 4, 12, 75, 32, 102, 145, 81, 94, 125, 49, 115, 43, 146, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 97, 22, 44, 90, 108, 31, 10, 16, 14, 20, 71, 37, 23, 17, 136, 78, 105, 89, 48, 5, 91, 129, 0, 104, 141, 147, 66, 137, 132, 41, 121, 79, 30, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 52, 133, 87, 21, 69, 93, 15, 18, 74, 62, 83, 35, 98, 101, 103, 110, 112, 73, 140, 58, 126, 9, 46, 130, 27, 92, 57, 107, 88, 7, 43, 49, 115, 38, 100, 106, 29, 120, 111, 131, 28, 2, 45, 33, 148, 54, 82, 119, 114, 122, 42, 127, 135, 13, 47, 99, 40, 70, 51, 77, 95, 4, 36, 12, 75, 32, 145, 102, 94, 125, 81, 146, 11, 26, 34, 85, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 97, 22, 44, 90, 108, 31, 10, 16, 14, 20, 73, 140, 58, 126, 35, 71, 112, 5, 91, 129, 0, 104, 141, 147, 66, 27, 92, 57, 107, 137, 132, 121, 41, 138, 55, 142, 79, 30, 118, 96, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 93, 87, 52, 133, 18, 74, 136, 78, 105, 89, 48, 62, 83, 9, 23, 37, 103, 110, 101, 98, 17, 7, 88, 46, 130, 26, 34, 85, 82, 54, 148, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 28, 131, 111, 29, 120, 106, 100, 38, 146, 95, 77, 51, 4, 36, 12, 75, 32, 145, 102, 94, 125, 81, 115, 49, 43, 45, 2, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 54, 82, 33, 28, 45, 2, 70, 40, 99, 47, 131, 111, 106, 120, 29, 95, 77, 51, 4, 36, 146, 38, 100, 81, 115, 49, 43, 125, 94, 75, 32, 145, 102, 12, 13, 135, 42, 122, 127, 114, 119, 22, 97, 90, 108, 44, 14, 16, 10, 140, 58, 73, 20, 71, 9, 83, 89, 48, 5, 62, 0, 129, 7, 91, 138, 55, 142, 118, 96, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 52, 133, 18, 74, 78, 105, 136, 93, 21, 17, 35, 37, 103, 110, 101, 98, 23, 126, 112, 46, 31, 130, 104, 141, 147, 66, 107, 57, 27, 92, 41, 121, 79, 30, 88, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 54, 82, 33, 148, 119, 114, 45, 2, 70, 40, 99, 47, 29, 120, 100, 106, 111, 131, 28, 13, 135, 42, 122, 127, 77, 51, 95, 4, 36, 102, 32, 12, 145, 75, 125, 94, 81, 49, 115, 43, 146, 38, 57, 66, 104, 141, 147, 129, 0, 7, 91, 5, 48, 89, 17, 136, 93, 21, 15, 87, 52, 133, 18, 74, 55, 142, 118, 96, 3, 64, 65, 128, 25, 123, 117, 69, 23, 37, 103, 110, 101, 98, 35, 126, 58, 73, 20, 71, 140, 16, 14, 10, 31, 90, 108, 44, 22, 97, 46, 112, 62, 105, 78, 83, 9, 138, 121, 41, 88, 30, 79, 137, 132, 107, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 114, 119, 42, 127, 99, 47, 29, 120, 100, 106, 111, 131, 28, 45, 2, 135, 40, 70, 13, 77, 51, 95, 4, 36, 102, 145, 32, 12, 75, 94, 81, 125, 146, 38, 115, 43, 49, 33, 82, 54, 122, 22, 97, 46, 112, 62, 5, 48, 89, 74, 55, 142, 118, 96, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 52, 133, 18, 91, 129, 0, 7, 121, 41, 88, 30, 79, 137, 132, 104, 141, 147, 66, 27, 92, 57, 107, 130, 44, 108, 31, 90, 10, 16, 14, 140, 58, 73, 20, 71, 126, 35, 37, 103, 110, 101, 98, 83, 9, 23, 17, 136, 93, 78, 105, 138, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 28, 45, 111, 131, 13, 47, 95, 77, 51, 38, 100, 106, 29, 120, 4, 36, 102, 145, 32, 12, 75, 94, 81, 125, 146, 115, 49, 43, 107, 57, 27, 92, 104, 141, 147, 41, 121, 79, 30, 88, 137, 132, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 136, 93, 17, 23, 37, 103, 110, 101, 98, 35, 58, 140, 73, 20, 71, 126, 14, 16, 10, 31, 90, 108, 46, 130, 97, 22, 44, 62, 5, 48, 89, 74, 55, 142, 96, 138, 91, 129, 0, 7, 66, 112, 9, 78, 105, 133, 52, 18, 83, 119, 114, 2, 135, 42, 127, 99, 70, 40, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 28, 45, 13, 47, 51, 77, 95, 100, 106, 29, 120, 38, 146, 115, 49, 43, 81, 125, 94, 102, 145, 32, 12, 75, 4, 36, 111, 131, 2, 135, 42, 127, 99, 70, 40, 122, 114, 119, 22, 44, 31, 46, 108, 90, 97, 130, 66, 141, 147, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0, 62, 48, 5, 112, 71, 20, 73, 58, 140, 126, 10, 14, 16, 35, 37, 103, 110, 101, 98, 23, 78, 105, 9, 83, 17, 136, 93, 21, 15, 87, 52, 133, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 18, 89, 74, 104, 27, 92, 107, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 122, 42, 2, 28, 114, 119, 13, 47, 99, 70, 40, 135, 127, 29, 120, 38, 95, 100, 106, 111, 131, 51, 77, 4, 36, 146, 115, 49, 43, 12, 145, 32, 75, 125, 94, 81, 102, 57, 27, 92, 130, 22, 44, 90, 108, 31, 10, 16, 14, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 23, 17, 136, 93, 21, 15, 87, 133, 52, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 138, 96, 41, 121, 79, 30, 88, 137, 132, 7, 91, 62, 48, 5, 112, 71, 20, 83, 9, 89, 105, 78, 74, 18, 0, 129, 141, 147, 66, 107, 104, 46, 97, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 122, 42, 2, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 102, 32, 75, 145, 12, 94, 125, 81, 43, 49, 115, 146, 36, 47, 99, 70, 40, 135, 127, 13, 114, 119, 22, 97, 44, 90, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 103, 110, 37, 23, 17, 136, 78, 133, 52, 93, 87, 15, 21, 69, 64, 65, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 121, 41, 7, 91, 62, 48, 5, 112, 83, 9, 89, 105, 74, 18, 129, 0, 27, 92, 130, 141, 104, 147, 66, 107, 57, 46, 88, 137, 132, 79, 30, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 115, 49, 43, 81, 125, 94, 102, 32, 75, 12, 145, 107, 66, 104, 147, 141, 27, 92, 57, 130, 22, 44, 90, 97, 108, 31, 16, 14, 10, 73, 20, 71, 83, 9, 112, 126, 58, 140, 103, 35, 101, 98, 110, 37, 23, 17, 87, 15, 21, 69, 64, 65, 128, 123, 25, 117, 3, 118, 96, 142, 55, 138, 30, 79, 88, 121, 41, 132, 137, 7, 74, 18, 133, 52, 93, 136, 105, 78, 89, 48, 5, 62, 0, 129, 91, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 120, 29, 106, 38, 100, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 81, 94, 125, 43, 115, 49, 107, 57, 66, 141, 104, 147, 7, 74, 96, 142, 55, 118, 3, 65, 128, 123, 25, 117, 64, 52, 133, 18, 138, 41, 121, 132, 137, 30, 79, 88, 5, 62, 0, 129, 91, 48, 89, 9, 112, 71, 20, 73, 140, 58, 126, 35, 37, 23, 17, 136, 105, 78, 87, 15, 21, 69, 93, 110, 103, 98, 101, 83, 10, 14, 16, 44, 90, 97, 108, 31, 46, 22, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 131, 111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 81, 94, 125, 49, 115, 43, 107, 57, 66, 104, 147, 141, 92, 27, 130, 129, 0, 46, 90, 108, 31, 10, 14, 16, 58, 140, 73, 20, 71, 112, 62, 5, 48, 89, 9, 105, 52, 133, 78, 136, 93, 15, 87, 21, 69, 128, 25, 123, 117, 64, 3, 65, 118, 96, 74, 18, 142, 55, 138, 121, 41, 88, 79, 30, 137, 132, 7, 91, 83, 35, 37, 23, 103, 98, 110, 101, 17, 126, 44, 22, 97, 114, 119, 28, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 131, 111, 106, 100, 29, 120, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 49, 28, 122, 114, 119, 22, 97, 44, 31, 10, 14, 16, 112, 62, 5, 48, 89, 138, 55, 142, 96, 3, 64, 117, 123, 25, 128, 65, 118, 74, 18, 52, 133, 87, 21, 69, 93, 15, 78, 136, 17, 37, 23, 103, 98, 110, 101, 35, 83, 9, 105, 71, 20, 73, 140, 58, 126, 46, 90, 108, 130, 27, 92, 104, 66, 141, 147, 41, 121, 30, 137, 132, 79, 88, 7, 91, 129, 0, 57, 107, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 49, 95, 77, 51, 100, 106, 29, 120, 38, 111, 131, 28, 122, 114, 119, 22, 97, 44, 31, 10, 14, 16, 112, 62, 5, 48, 89, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 17, 23, 103, 110, 101, 98, 83, 9, 71, 20, 73, 58, 140, 126, 35, 37, 105, 78, 64, 117, 123, 25, 128, 65, 3, 96, 142, 55, 118, 138, 88, 137, 132, 147, 141, 104, 66, 57, 27, 92, 0, 129, 91, 7, 121, 41, 30, 79, 107, 130, 90, 108, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 115, 49, 43, 12, 75, 32, 145, 102, 94, 125, 81, 107, 57, 27, 92, 130, 44, 31, 46, 90, 97, 22, 108, 10, 14, 16, 112, 71, 20, 73, 58, 140, 126, 35, 37, 103, 110, 101, 98, 83, 9, 78, 136, 17, 23, 105, 52, 133, 21, 93, 15, 87, 64, 128, 25, 123, 117, 69, 65, 3, 118, 142, 55, 138, 121, 41, 30, 79, 88, 137, 132, 147, 141, 104, 66, 129, 0, 91, 74, 96, 18, 89, 48, 5, 62, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 115, 49, 43, 12, 75, 32, 145, 102, 94, 125, 81, 107, 57, 27, 92, 130, 31, 90, 108, 10, 14, 16, 58, 140, 73, 20, 71, 23, 37, 103, 110, 101, 98, 83, 9, 78, 136, 133, 52, 105, 89, 48, 5, 62, 138, 121, 41, 7, 91, 55, 30, 79, 88, 137, 132, 147, 141, 104, 66, 129, 0, 46, 112, 35, 126, 17, 15, 21, 87, 93, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 96, 74, 18, 44, 22, 97, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 130, 31, 90, 108, 44, 22, 97, 46, 112, 62, 5, 48, 89, 18, 74, 91, 129, 0, 141, 104, 66, 147, 41, 121, 79, 30, 88, 137, 132, 55, 142, 96, 138, 7, 118, 3, 64, 25, 123, 117, 65, 128, 69, 21, 87, 93, 15, 78, 136, 133, 52, 105, 83, 9, 23, 17, 37, 35, 103, 110, 101, 98, 126, 58, 140, 73, 20, 71, 10, 14, 16, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 29, 120, 106, 100, 38, 77, 51, 95, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 49, 66, 147, 141, 104, 27, 92, 130, 97, 22, 16, 14, 10, 73, 20, 71, 112, 62, 5, 48, 89, 18, 74, 96, 118, 3, 64, 65, 128, 123, 25, 117, 52, 133, 78, 136, 87, 93, 15, 21, 69, 105, 83, 9, 23, 17, 37, 35, 103, 110, 101, 98, 126, 58, 140, 31, 90, 108, 44, 57, 107, 137, 132, 121, 41, 30, 88, 79, 142, 55, 129, 0, 91, 7, 138, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 100, 38, 77, 51, 95, 4, 36, 146, 29, 120, 43, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 107, 57, 27, 92, 104, 66, 141, 147, 129, 0, 62, 5, 48, 112, 89, 105, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 128, 123, 25, 117, 3, 64, 142, 55, 138, 74, 18, 96, 118, 41, 121, 88, 79, 30, 132, 137, 7, 91, 83, 9, 23, 17, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 10, 14, 16, 108, 44, 97, 22, 90, 31, 46, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 81, 94, 125, 49, 115, 43, 107, 57, 104, 66, 141, 147, 129, 0, 62, 48, 5, 89, 105, 78, 133, 52, 15, 87, 93, 21, 69, 65, 128, 123, 25, 117, 3, 64, 142, 55, 138, 74, 18, 96, 118, 79, 30, 132, 137, 7, 91, 121, 41, 88, 92, 27, 130, 22, 90, 31, 10, 14, 16, 58, 140, 73, 20, 71, 112, 126, 35, 23, 17, 37, 103, 110, 101, 98, 83, 9, 136, 46, 97, 44, 108, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 49, 115, 43, 81, 107, 57, 130, 92, 27, 104, 66, 147, 141, 129, 0, 91, 7, 121, 41, 88, 132, 137, 30, 79, 142, 55, 138, 74, 18, 96, 118, 25, 123, 128, 65, 117, 3, 64, 69, 21, 15, 87, 93, 136, 78, 133, 52, 17, 37, 35, 23, 103, 110, 101, 98, 83, 9, 105, 89, 48, 5, 62, 112, 126, 58, 140, 73, 20, 71, 10, 14, 16, 90, 108, 31, 46, 44, 97, 22, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 43, 49, 66, 147, 141, 104, 57, 107, 27, 92, 130, 108, 90, 97, 22, 44, 31, 16, 14, 10, 71, 58, 140, 73, 20, 126, 35, 23, 103, 110, 101, 98, 83, 9, 89, 48, 5, 62, 112, 46, 0, 129, 138, 74, 96, 118, 142, 55, 79, 121, 41, 30, 88, 132, 137, 7, 91, 78, 133, 52, 105, 136, 87, 15, 21, 69, 18, 3, 64, 65, 123, 25, 128, 117, 93, 17, 37, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 130, 46, 108, 90, 97, 22, 44, 31, 16, 14, 10, 71, 20, 73, 58, 140, 126, 35, 23, 37, 103, 110, 101, 98, 83, 9, 112, 105, 17, 136, 52, 133, 78, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 142, 55, 79, 121, 41, 30, 88, 132, 137, 7, 91, 74, 96, 118, 18, 48, 5, 62, 0, 129, 147, 141, 104, 66, 138, 89, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 107, 57, 104, 66, 147, 141, 27, 92, 0, 91, 62, 5, 48, 89, 9, 112, 105, 17, 136, 78, 52, 133, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 142, 55, 79, 30, 88, 41, 121, 132, 137, 7, 138, 96, 118, 18, 74, 93, 103, 110, 101, 98, 83, 37, 23, 35, 126, 58, 140, 73, 20, 71, 10, 16, 14, 97, 22, 44, 31, 108, 90, 46, 130, 129, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 94, 125, 81, 115, 43, 49, 102, 32, 145, 12, 75, 57, 27, 92, 0, 91, 7, 41, 121, 138, 55, 79, 30, 88, 137, 132, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 21, 87, 93, 103, 110, 101, 98, 83, 9, 112, 105, 17, 136, 78, 52, 133, 18, 74, 129, 130, 31, 108, 90, 97, 22, 44, 46, 20, 71, 10, 16, 14, 73, 58, 140, 126, 35, 37, 23, 89, 48, 5, 62, 104, 66, 141, 147, 107, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 43, 49, 66, 141, 147, 107, 57, 27, 92, 0, 129, 130, 104, 137, 132, 138, 55, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 133, 52, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 88, 30, 142, 96, 18, 74, 112, 31, 108, 90, 97, 22, 44, 16, 14, 10, 58, 140, 126, 35, 37, 23, 17, 101, 98, 110, 103, 83, 9, 71, 20, 73, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 145, 102, 32, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 0, 129, 91, 138, 55, 118, 142, 96, 18, 74, 48, 5, 62, 89, 9, 83, 37, 23, 17, 136, 78, 105, 52, 133, 93, 21, 15, 87, 69, 65, 128, 123, 25, 117, 64, 3, 41, 121, 79, 30, 137, 132, 104, 141, 147, 66, 130, 90, 97, 22, 44, 16, 14, 10, 58, 140, 73, 20, 71, 126, 35, 98, 110, 101, 103, 31, 108, 46, 112, 7, 88, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 81, 94, 125, 49, 43, 115, 137, 132, 88, 7, 91, 129, 0, 130, 27, 92, 104, 141, 147, 66, 107, 57, 22, 97, 108, 46, 112, 71, 20, 73, 140, 58, 126, 35, 83, 18, 55, 138, 41, 121, 79, 30, 96, 74, 48, 5, 62, 52, 133, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 105, 78, 136, 93, 9, 89, 17, 37, 23, 110, 101, 98, 103, 31, 10, 14, 16, 44, 90, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 43, 115, 49, 66, 104, 141, 147, 41, 121, 30, 79, 88, 137, 132, 91, 5, 48, 62, 0, 129, 27, 92, 130, 108, 46, 112, 71, 20, 73, 140, 58, 126, 23, 17, 83, 35, 103, 101, 98, 110, 37, 9, 89, 78, 136, 93, 87, 15, 21, 69, 65, 64, 117, 3, 118, 142, 96, 55, 138, 7, 74, 18, 52, 133, 105, 128, 123, 25, 10, 14, 16, 31, 44, 90, 97, 22, 107, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 130, 108, 31, 44, 90, 97, 22, 16, 14, 10, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 117, 123, 25, 128, 3, 118, 142, 96, 55, 138, 121, 41, 30, 79, 88, 132, 147, 66, 104, 141, 129, 0, 62, 5, 48, 91, 7, 74, 18, 52, 133, 78, 136, 105, 89, 112, 71, 83, 9, 46, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 130, 90, 97, 22, 44, 108, 31, 46, 10, 20, 73, 58, 140, 126, 35, 37, 23, 17, 136, 105, 89, 112, 71, 9, 83, 78, 52, 133, 93, 87, 15, 21, 69, 65, 64, 3, 118, 142, 55, 138, 121, 41, 30, 79, 88, 137, 132, 147, 141, 104, 66, 129, 0, 62, 5, 48, 91, 7, 74, 96, 18, 117, 123, 25, 128, 103, 110, 101, 98, 16, 14, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 129, 0, 62, 48, 5, 91, 7, 132, 147, 141, 104, 66, 137, 79, 30, 121, 41, 88, 138, 142, 55, 96, 118, 3, 117, 123, 25, 128, 64, 65, 21, 15, 87, 136, 105, 89, 133, 52, 69, 110, 101, 98, 103, 37, 23, 17, 78, 93, 18, 74, 112, 71, 9, 83, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 44, 108, 46, 130, 22, 97, 90, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 57, 27, 92, 129, 0, 62, 48, 5, 91, 7, 41, 121, 30, 79, 55, 142, 96, 118, 3, 117, 123, 25, 128, 64, 65, 21, 15, 87, 136, 78, 93, 69, 17, 105, 89, 18, 74, 138, 132, 147, 141, 104, 66, 137, 88, 130, 22, 97, 90, 108, 46, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 83, 9, 133, 52, 103, 110, 101, 98, 16, 14, 10, 31, 44, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 0, 62, 48, 5, 91, 129, 92, 57, 27, 7, 41, 121, 30, 79, 88, 137, 132, 138, 55, 142, 96, 118, 3, 117, 123, 25, 128, 64, 65, 69, 52, 133, 105, 89, 18, 74, 136, 78, 87, 15, 21, 93, 17, 37, 23, 103, 110, 101, 98, 35, 126, 14, 16, 10, 31, 44, 108, 97, 22, 90, 130, 112, 71, 58, 140, 20, 73, 9, 83, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 7, 41, 121, 30, 79, 88, 137, 132, 138, 55, 142, 96, 118, 3, 65, 64, 117, 123, 25, 128, 69, 21, 15, 87, 52, 133, 18, 74, 91, 62, 5, 48, 89, 105, 83, 9, 71, 112, 46, 97, 108, 31, 44, 22, 90, 10, 16, 14, 20, 73, 58, 140, 126, 35, 103, 110, 101, 98, 23, 37, 136, 78, 17, 93, 129, 0, 27, 92, 57, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 57, 27, 92, 130, 129, 0, 46, 90, 97, 22, 44, 108, 31, 14, 16, 10, 20, 73, 58, 140, 126, 35, 83, 89, 105, 78, 136, 133, 52, 17, 37, 23, 103, 110, 101, 98, 9, 71, 112, 62, 48, 5, 91, 41, 121, 30, 79, 138, 142, 96, 118, 3, 64, 128, 25, 123, 117, 65, 15, 21, 69, 87, 93, 18, 74, 55, 88, 137, 132, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 5, 48, 74, 55, 142, 96, 118, 3, 64, 65, 123, 25, 128, 52, 133, 18, 105, 78, 136, 17, 37, 23, 103, 110, 101, 98, 35, 83, 89, 112, 62, 91, 7, 121, 41, 132, 137, 79, 30, 88, 138, 117, 69, 87, 15, 21, 93, 71, 20, 73, 58, 140, 126, 46, 90, 97, 22, 44, 108, 31, 10, 16, 14, 9, 130, 92, 27, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 92, 27, 130, 108, 90, 97, 22, 44, 31, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 62, 91, 7, 121, 41, 30, 88, 79, 142, 96, 118, 3, 64, 65, 123, 25, 128, 117, 69, 87, 15, 21, 93, 136, 17, 37, 23, 103, 110, 101, 98, 35, 9, 83, 89, 48, 5, 105, 133, 52, 78, 74, 18, 138, 55, 132, 137, 57, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 105, 133, 52, 78, 136, 17, 37, 23, 103, 110, 101, 98, 35, 9, 83, 71, 20, 73, 58, 140, 126, 14, 16, 10, 108, 31, 90, 97, 22, 44, 130, 46, 112, 89, 18, 3, 64, 65, 123, 25, 128, 117, 69, 87, 15, 21, 93, 96, 118, 142, 55, 79, 30, 88, 137, 132, 121, 41, 7, 91, 74, 138, 27, 92, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 136, 78, 133, 52, 105, 17, 37, 23, 110, 101, 98, 103, 35, 9, 83, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 108, 44, 22, 97, 90, 31, 46, 130, 27, 57, 132, 137, 7, 91, 74, 138, 121, 41, 88, 30, 79, 55, 118, 142, 96, 3, 64, 65, 123, 25, 128, 117, 69, 87, 15, 21, 93, 18, 92, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 138, 79, 30, 41, 121, 7, 91, 92, 27, 57, 90, 97, 22, 108, 44, 31, 10, 14, 16, 112, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 105, 9, 83, 52, 133, 87, 93, 136, 78, 69, 21, 15, 65, 123, 25, 128, 117, 118, 142, 96, 3, 64, 55, 88, 137, 132, 46, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 142, 55, 30, 79, 121, 41, 138, 7, 91, 132, 137, 88, 118, 123, 25, 128, 117, 64, 65, 3, 52, 133, 78, 105, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 87, 15, 21, 69, 93, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 27, 92, 57, 130, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 88, 132, 137, 7, 91, 112, 46, 108, 90, 97, 22, 44, 27, 92, 57, 130, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 83, 35, 9, 23, 17, 37, 101, 98, 103, 110, 93, 21, 69, 15, 87, 136, 78, 105, 52, 133, 118, 142, 55, 30, 79, 3, 64, 65, 128, 25, 123, 117, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 88, 30, 79, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 15, 87, 21, 93, 110, 101, 98, 103, 126, 73, 20, 71, 140, 58, 16, 14, 10, 31, 44, 22, 97, 90, 108, 46, 130, 27, 92, 57, 132, 7, 91, 9, 83, 35, 37, 23, 17, 136, 78, 105, 133, 52, 112, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 88, 30, 79, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 52, 133, 105, 78, 136, 17, 37, 23, 110, 101, 98, 103, 35, 83, 9, 71, 73, 20, 58, 140, 16, 14, 10, 31, 44, 22, 97, 90, 108, 46, 130, 27, 92, 57, 132, 137, 7, 91, 112, 126, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 52, 133, 105, 78, 136, 17, 37, 23, 98, 110, 101, 103, 35, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 27, 92, 57, 132, 137, 30, 79, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 133, 52, 105, 78, 136, 17, 37, 23, 98, 110, 101, 103, 35, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 91, 7, 79, 30, 88, 132, 137, 57, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 133, 52, 105, 78, 136, 17, 37, 23, 110, 101, 98, 103, 35, 9, 83, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 44, 90, 108, 46, 91, 7, 79, 30, 88, 132, 137, 57, 27, 92, 130, 97, 22, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 93, 136, 17, 37, 23, 110, 101, 98, 103, 35, 9, 83, 105, 78, 133, 52, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 57, 132, 137, 79, 30, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 17, 105, 78, 133, 52, 23, 37, 110, 101, 98, 103, 35, 58, 140, 73, 20, 71, 112, 9, 83, 126, 14, 16, 10, 31, 44, 97, 22, 90, 108, 46, 130, 92, 27, 7, 91, 132, 137, 30, 79, 88, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 136, 78, 133, 52, 23, 37, 110, 101, 98, 103, 35, 126, 58, 140, 73, 20, 71, 112, 9, 83, 17, 105, 7, 91, 30, 79, 132, 88, 137, 57, 27, 92, 130, 46, 108, 31, 44, 90, 97, 22, 10, 14, 16, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 21, 15, 87, 93, 78, 105, 52, 133, 136, 23, 110, 101, 98, 103, 35, 126, 140, 58, 73, 20, 71, 112, 9, 83, 37, 17, 91, 79, 30, 88, 137, 132, 7, 27, 92, 57, 22, 44, 90, 31, 108, 97, 10, 14, 16, 130, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 23, 37, 17, 52, 133, 105, 78, 9, 83, 140, 20, 71, 112, 73, 58, 126, 35, 101, 98, 103, 110, 10, 31, 108, 90, 97, 22, 44, 16, 14, 46, 130, 27, 92, 57, 132, 137, 30, 79, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 52, 133, 103, 110, 101, 98, 35, 23, 37, 17, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 57, 27, 92, 91, 7, 88, 79, 30, 137, 132, 9, 83, 46, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 10, 14, 16, 108, 90, 97, 22, 44, 31, 46, 112, 9, 83, 52, 133, 7, 91, 79, 30, 88, 132, 137, 57, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 37, 35, 126, 140, 58, 73, 20, 71, 10, 14, 16, 31, 90, 97, 22, 44, 108, 130, 27, 92, 57, 132, 137, 79, 30, 88, 7, 91, 9, 83, 52, 133, 23, 103, 110, 101, 98, 46, 112, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 37, 101, 98, 103, 110, 35, 126, 58, 140, 73, 20, 71, 112, 83, 9, 10, 14, 16, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 46, 130, 27, 92, 57, 97, 22, 44, 90, 108, 31, 16, 14, 10, 91, 7, 132, 137, 30, 79, 88, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 37, 103, 110, 101, 98, 35, 126, 20, 71, 73, 140, 58, 16, 14, 10, 108, 31, 90, 97, 22, 44, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 112, 9, 83, 46, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 98, 101, 35, 126, 20, 73, 140, 58, 16, 14, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 88, 79, 30, 137, 7, 91, 9, 83, 37, 71, 112, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 71, 20, 73, 140, 58, 126, 83, 9, 112, 44, 90, 97, 22, 108, 31, 10, 16, 14, 46, 130, 27, 92, 57, 132, 88, 79, 30, 137, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 71, 20, 73, 140, 58, 126, 83, 9, 112, 46, 130, 27, 92, 57, 97, 22, 44, 31, 108, 90, 16, 14, 10, 91, 7, 88, 30, 79, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 91, 7, 30, 79, 88, 132, 137, 92, 57, 27, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 57, 132, 137, 79, 30, 88, 7, 91, 92, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 31, 108, 90, 97, 22, 44, 27, 92, 57, 130, 46, 91, 7, 30, 79, 88, 137, 132, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 58, 140, 126, 14, 16, 10, 97, 22, 44, 90, 108, 31, 46, 91, 7, 30, 79, 88, 137, 132, 130, 27, 92, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 108, 97, 22, 44, 46, 91, 7, 88, 79, 30, 137, 132, 130, 27, 92, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 46, 44, 90, 97, 22, 130, 27, 92, 57, 132, 137, 30, 79, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 108, 46, 91, 7, 30, 79, 88, 132, 137, 27, 92, 57, 130, 97, 22, 90, 44, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 91, 7, 30, 79, 88, 132, 137, 92, 27, 57, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 57, 132, 137, 79, 30, 88, 7, 91, 92, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 30, 79, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 92, 57, 27, 91, 7, 88, 30, 79, 132, 137, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 91, 7, 79, 30, 88, 132, 137, 57, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 91, 7, 79, 30, 88, 132, 137, 57, 27, 92, 130, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 30, 79, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 88, 30, 79, 137, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 88, 137, 30, 79, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 7, 91, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 24, 80, 60, 50, 124, 144, 86, 19, 149, 59, 61, 76, 109, 34, 85, 26, 11, 148, 82, 54, 33, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 28, 131, 111, 106, 29, 120, 100, 38, 77, 51, 95, 4, 36, 146, 12, 75, 32, 102, 145, 94, 125, 81, 115, 49, 43, 107, 141, 104, 66, 147, 129, 0, 62, 48, 5, 89, 18, 74, 96, 138, 121, 41, 55, 142, 118, 3, 64, 65, 128, 123, 25, 117, 69, 87, 15, 21, 93, 136, 78, 105, 17, 133, 52, 23, 110, 103, 101, 98, 35, 37, 83, 9, 112, 71, 20, 73, 140, 58, 126, 14, 16, 10, 31, 90, 97, 22, 44, 108, 46, 130, 27, 92, 57, 132, 137, 79, 30, 88, 91, 7, 56]");

    }

    @Test
    public void test_mmas_cycle_moving_adtsp_freq_100_mag_0_5_kroA150() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.8, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(37954.67401922115);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");

        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1, 48631.26584637324, 3256.9421086281377, 0.0, 85.8269387755102, 43037.34303154829);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 50, 36615.20297092621, 1672.0813787470684, 0.49666666666666665, 4.963265306122449, 35450.174725569384);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 100, 36933.36855022544, 2135.306346936802, 0.5, 5.6, 34989.7238261691);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 101, 36811.73319590444, 2320.280316818388, 0.5, 6.377959183673469, 34989.7238261691);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 150, 36714.51590661719, 1956.4825960514297, 0.5, 5.47265306122449, 34989.7238261691);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 200, 37426.07063386687, 2630.988876010618, 0.5, 9.546938775510204, 34527.7004031502);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 201, 46006.25782682774, 2003.0445210580654, 0.48, 31.783673469387754, 42579.3229544844);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 250, 41717.433450393124, 2405.833724702304, 0.5, 14.713469387755103, 37845.95537736823);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 300, 41194.09482814609, 2555.1841619539196, 0.5, 15.202448979591837, 37269.83673159359);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 301, 44548.82689700202, 2573.382325557801, 0.48333333333333334, 24.70530612244898, 40665.917938452665);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 350, 40534.7104021806, 2845.6258710624056, 0.5033333333333333, 12.681632653061225, 35443.44667683696);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 400, 38072.786073346244, 2668.6763511511303, 0.5, 4.606530612244898, 35321.08678733882);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 401, 47861.30189741989, 2834.5289061372164, 0.4766666666666667, 25.85795918367347, 42412.22055701362);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 450, 39777.44017042618, 2604.6434206010576, 0.5033333333333333, 2.950204081632653, 37978.417593828875);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 500, 39782.12215806751, 2791.4380986187584, 0.5166666666666667, 5.96, 37618.15759534699);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 501, 46588.20249168285, 2138.865869987318, 0.49666666666666665, 24.864489795918367, 42039.67719889155);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 550, 37954.081987674006, 1481.118475254757, 0.5, 3.030204081632653, 37189.345137474615);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 600, 38146.42803097521, 1991.4847991927106, 0.5, 2.853877551020408, 37039.37703716696);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 601, 44302.390421714575, 1717.0986449923048, 0.48, 17.947755102040816, 41313.02433281714);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 650, 35917.713832802096, 855.6956446730351, 0.5, 1.6212244897959183, 35515.26358091489);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 700, 35764.291968227946, 708.347219634201, 0.5, 1.0881632653061224, 35515.26358091489);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 701, 41448.76991795208, 2138.688853637467, 0.49, 16.791836734693877, 37975.78841714849);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 750, 36519.0349242743, 633.7356357138259, 0.49666666666666665, 1.2481632653061225, 36299.28685401729);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 800, 36366.60454915673, 319.53707814291164, 0.49666666666666665, 0.7085714285714285, 36280.037786535795);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 801, 39316.9360575919, 1398.6148422822293, 0.48333333333333334, 11.191020408163265, 37232.724066382674);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 850, 36873.796326885385, 586.5231418722146, 0.49666666666666665, 0.9477551020408164, 36621.30977202616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 900, 36677.95018766568, 280.2973647126299, 0.5, 0.23510204081632652, 36621.30977202616);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 901, 40435.20032265613, 711.2088024695831, 0.49, 1.7110204081632654, 39487.70223198447);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 950, 37960.35747588229, 40.18810745661612, 0.49666666666666665, 0.12, 37954.67401922115);
        TestUtils.checkValues(mmas_cmadtsp.getIterationStatistics(), 1000, 37954.674019221166, 1.469965419604284E-11, 0.49333333333333335, 0.0, 37954.67401922115);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 1, 43, 113, 49, 115, 146, 32, 145, 102, 12, 75, 94, 125, 81, 38, 100, 106, 29, 120, 95, 77, 51, 4, 36, 84, 67, 63, 39, 53, 143, 72, 139, 54, 82, 26, 85, 61, 59, 76, 109, 19, 149, 34, 11, 148, 42, 135, 13, 2, 122, 45, 28, 131, 111, 33, 119, 114, 70, 40, 99, 47, 127, 134, 107, 147, 141, 104, 66, 27, 92, 130, 108, 31, 10, 58, 140, 73, 20, 71, 126, 112, 62, 48, 5, 78, 136, 87, 15, 21, 69, 93, 23, 37, 35, 103, 101, 98, 110, 17, 133, 52, 89, 18, 74, 129, 0, 91, 7, 121, 41, 30, 79, 142, 55, 138, 137, 132, 88, 96, 3, 64, 65, 128, 123, 25, 117, 118, 105, 9, 83, 46, 44, 97, 90, 22, 16, 14, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 58, 140, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 133, 52, 136, 78, 105, 89, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[56, 6, 8, 116, 144, 86, 50, 124, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 145, 32, 12, 75, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 47, 13, 2, 45, 28, 131, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 23, 37, 35, 103, 110, 101, 98, 17, 105, 89, 78, 136, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 139, 134, 84, 115, 146, 99, 70, 40, 127, 135, 122, 42, 114, 119, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 38, 100, 106, 29, 120, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 131, 28, 45, 2, 42, 114, 119, 122, 127, 135, 13, 70, 40, 99, 47, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 11, 26, 34, 19, 149, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 55, 138, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 83, 9, 126, 58, 140, 46, 130, 92, 27, 104, 141, 129, 0, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 149, 34, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 0, 129, 130, 92, 27, 104, 141, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 149, 34, 19, 50, 124, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 91, 7, 121, 41, 132, 137, 30, 79, 88, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 0, 129, 130, 92, 27, 104, 141, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 0, 129, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 106, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 71, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 23, 37, 35, 103, 110, 101, 98, 17, 126, 58, 140, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 71, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 106, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 71, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 106, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 71, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 106, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 14, 16, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 83, 9, 112, 62, 48, 5, 0, 129, 91, 7, 41, 132, 137, 30, 79, 88, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 136, 78, 105, 89, 71, 46, 130, 92, 27, 104, 141, 66, 147, 107, 86, 144, 50, 124, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 106, 131, 28, 45, 2, 42, 127, 135, 13, 70, 40, 99, 47, 122, 114, 119, 11, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 111, 33, 82, 54, 148, 26, 85, 34, 19, 149, 61, 59, 76, 109, 97, 22, 90, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 71, 112, 62, 48, 5, 0, 129, 91, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 83, 9, 46, 130, 92, 27, 104, 141, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 100, 106, 131, 28, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 11, 86, 144, 50, 124, 132, 137, 30, 79, 88, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 19, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 147, 107, 137, 30, 79, 88, 132, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 127, 135, 13, 47, 99, 70, 40, 122, 114, 119, 34, 85, 86, 144, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 138, 55, 142, 96, 3, 64, 65, 128, 123, 25, 117, 79, 88, 132, 147, 107, 137, 30, 118, 74, 18, 52, 133, 87, 15, 21, 69, 93, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 88, 132, 147, 107, 137, 30, 118, 142, 55, 74, 96, 3, 64, 65, 128, 123, 25, 117, 138, 18, 133, 52, 93, 21, 69, 15, 87, 83, 9, 71, 112, 62, 46, 130, 92, 27, 104, 141, 66, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 86, 144, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 73, 20, 58, 140, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 0, 129, 91, 7, 41, 121, 79, 30, 88, 132, 147, 66, 57, 104, 141, 92, 27, 130, 46, 112, 71, 9, 83, 15, 87, 52, 93, 21, 69, 128, 123, 25, 117, 138, 96, 3, 64, 65, 118, 142, 55, 74, 18, 133, 62, 107, 137, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 122, 42, 127, 119, 114, 19, 86, 144, 50, 124, 60, 24, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 15, 87, 52, 93, 21, 69, 128, 123, 25, 117, 3, 64, 65, 118, 142, 55, 138, 96, 74, 18, 133, 7, 91, 129, 0, 27, 92, 130, 66, 141, 147, 107, 57, 104, 132, 88, 41, 121, 79, 30, 137, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 124, 50, 24, 80, 60, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 15, 87, 52, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 128, 123, 25, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 66, 141, 147, 107, 57, 104, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 124, 50, 24, 80, 60, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 15, 87, 52, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 128, 123, 25, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 66, 141, 104, 147, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 103, 98, 101, 110, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 15, 87, 52, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 128, 123, 25, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 128, 123, 25, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 128, 123, 25, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 128, 25, 123, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 128, 25, 123, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 128, 25, 123, 117, 79, 30, 137, 132, 88, 41, 121, 7, 91, 129, 0, 27, 92, 130, 104, 147, 141, 66, 107, 57, 50, 124, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 45, 2, 42, 122, 40, 70, 99, 47, 13, 135, 127, 119, 114, 19, 86, 144, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 37, 23, 110, 101, 98, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 142, 55, 138, 96, 74, 18, 133, 52, 123, 25, 128, 117, 7, 91, 129, 0, 141, 147, 104, 66, 107, 57, 50, 124, 144, 86, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 99, 70, 40, 131, 28, 111, 38, 146, 115, 72, 68, 80, 24, 60, 92, 27, 130, 132, 137, 79, 30, 121, 41, 88, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 23, 37, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 87, 15, 93, 21, 69, 65, 64, 3, 118, 96, 74, 18, 133, 52, 123, 25, 128, 117, 7, 91, 0, 141, 147, 104, 66, 107, 57, 27, 92, 130, 129, 55, 138, 142, 79, 30, 121, 41, 88, 132, 137, 68, 80, 24, 60, 50, 124, 144, 86, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 99, 70, 40, 131, 28, 111, 38, 146, 115, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 65, 64, 3, 118, 96, 74, 18, 133, 52, 123, 25, 128, 117, 7, 91, 0, 141, 147, 104, 66, 107, 57, 27, 92, 130, 129, 55, 138, 142, 79, 30, 121, 41, 88, 132, 137, 68, 80, 24, 60, 50, 124, 86, 144, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 99, 70, 40, 131, 28, 111, 38, 146, 115, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 91, 0, 141, 147, 104, 66, 107, 57, 27, 92, 130, 129, 7, 132, 137, 68, 80, 24, 60, 50, 124, 86, 144, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 99, 70, 40, 131, 28, 111, 38, 146, 115, 72, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 141, 147, 104, 66, 107, 57, 27, 92, 130, 129, 132, 137, 68, 60, 50, 124, 86, 144, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 40, 70, 99, 131, 28, 111, 38, 146, 115, 72, 80, 24, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 141, 147, 104, 66, 107, 57, 27, 92, 130, 129, 132, 137, 68, 60, 50, 124, 86, 144, 19, 114, 119, 122, 42, 2, 135, 127, 45, 13, 47, 40, 70, 99, 131, 28, 111, 38, 146, 115, 72, 80, 24, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 129, 132, 137, 141, 147, 104, 66, 107, 57, 27, 92, 130, 124, 50, 144, 86, 80, 24, 60, 68, 72, 146, 115, 38, 28, 111, 131, 13, 47, 40, 70, 99, 135, 127, 45, 42, 2, 122, 119, 114, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 129, 132, 137, 141, 147, 104, 66, 107, 57, 27, 92, 130, 124, 50, 144, 86, 80, 24, 60, 68, 72, 146, 115, 38, 28, 111, 131, 13, 47, 99, 70, 40, 135, 127, 45, 42, 2, 122, 119, 114, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 129, 132, 137, 141, 147, 104, 66, 107, 57, 27, 92, 130, 124, 50, 144, 86, 80, 24, 60, 68, 72, 146, 115, 38, 28, 111, 131, 13, 47, 99, 70, 40, 135, 127, 45, 42, 2, 122, 119, 114, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 37, 23, 87, 93, 15, 21, 69, 133, 52, 3, 118, 96, 74, 18, 65, 64, 123, 25, 128, 117, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 0, 129, 132, 137, 141, 147, 104, 66, 107, 57, 27, 92, 130, 124, 50, 144, 86, 80, 24, 60, 68, 72, 146, 115, 38, 28, 111, 131, 13, 47, 99, 70, 40, 135, 127, 45, 42, 2, 122, 119, 114, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 15, 21, 69, 133, 52, 3, 118, 96, 55, 138, 142, 79, 30, 121, 41, 88, 7, 91, 74, 18, 87, 65, 64, 123, 25, 128, 117, 0, 129, 130, 27, 92, 57, 107, 66, 104, 141, 147, 132, 137, 68, 72, 146, 115, 38, 131, 111, 70, 40, 99, 47, 13, 2, 122, 42, 135, 127, 45, 28, 119, 114, 19, 144, 86, 124, 50, 60, 24, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 118, 117, 123, 25, 128, 65, 64, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 104, 141, 147, 132, 137, 68, 72, 146, 115, 38, 131, 111, 70, 40, 99, 47, 13, 135, 127, 42, 122, 45, 2, 28, 119, 114, 19, 144, 86, 124, 50, 60, 24, 80, 107, 66, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 68, 72, 146, 115, 38, 131, 111, 70, 40, 99, 47, 13, 135, 127, 42, 122, 2, 28, 45, 119, 114, 19, 144, 86, 124, 50, 60, 24, 80, 107, 57, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 131, 111, 70, 40, 99, 47, 13, 135, 127, 42, 122, 2, 28, 45, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 131, 111, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 28, 45, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 133, 52, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 74, 18, 96, 142, 55, 138, 79, 30, 41, 121, 88, 7, 91, 129, 0, 27, 92, 130, 66, 104, 141, 147, 132, 137, 107, 57, 60, 24, 80, 68, 72, 146, 115, 38, 47, 13, 135, 99, 70, 40, 127, 42, 122, 2, 45, 28, 131, 111, 119, 114, 19, 144, 86, 124, 50, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 88, 41, 121, 79, 30, 137, 132, 138, 7, 74, 57, 60, 24, 80, 68, 72, 115, 38, 47, 13, 135, 99, 70, 40, 122, 2, 45, 28, 131, 111, 42, 127, 119, 114, 86, 144, 50, 124, 107, 146, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 137, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 137, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 137, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 141, 104, 66, 147, 107, 57, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 13, 40, 70, 99, 47, 2, 45, 28, 42, 127, 135, 122, 114, 119, 144, 86, 50, 124, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 66, 147, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 42, 127, 135, 122, 2, 45, 13, 47, 99, 70, 40, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 66, 147, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 42, 122, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 42, 122, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 42, 122, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 42, 122, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 42, 122, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 122, 42, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 122, 42, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 122, 42, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 124, 50, 144, 86, 60, 24, 80, 68, 72, 115, 146, 38, 111, 131, 28, 2, 45, 13, 47, 99, 70, 40, 122, 42, 135, 127, 114, 119, 19, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 80, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 135, 127, 122, 42, 2, 131, 28, 111, 38, 146, 115, 72, 68, 80, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 131, 28, 111, 38, 146, 115, 72, 80, 68, 42, 135, 127, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 122, 42, 127, 131, 28, 111, 38, 146, 115, 72, 80, 68, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 38, 146, 115, 72, 80, 68, 131, 28, 42, 127, 122, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 38, 146, 115, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[56, 6, 8, 116, 139, 134, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 51, 77, 29, 120, 100, 106, 54, 82, 33, 148, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 31, 44, 16, 14, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 17, 136, 78, 105, 89, 48, 5, 62, 46, 112, 71, 9, 83, 23, 37, 93, 87, 15, 21, 69, 52, 133, 3, 64, 65, 123, 25, 128, 117, 118, 142, 55, 96, 18, 74, 7, 41, 121, 30, 79, 88, 137, 132, 138, 91, 129, 0, 27, 92, 130, 104, 141, 147, 66, 107, 57, 24, 60, 50, 124, 86, 144, 19, 114, 119, 45, 13, 47, 99, 70, 40, 2, 135, 111, 131, 28, 122, 42, 127, 80, 68, 72, 115, 146, 38, 56]");
    }

    @Test
    public void test_mmas_cycle_pheromone_0_02() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_CMADTSP mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(27874.57104906802);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 52, 15, 87, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 58, 73, 14, 16, 10, 31, 46, 44, 90, 97, 22, 59, 61, 76, 85, 26, 11, 6, 8, 56, 19, 34, 82, 54, 33, 42, 45, 2, 28, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 68, 24, 80, 60, 50, 86, 84, 67, 72, 43, 49, 57, 27, 92, 66, 91, 7, 0, 62, 5, 48, 89, 93, 21, 69, 65, 64, 25, 3, 96, 55, 30, 88, 41, 79, 74]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(31035.18629616915);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[74, 18, 52, 87, 15, 21, 78, 17, 37, 23, 83, 9, 89, 48, 5, 62, 46, 31, 44, 97, 22, 90, 10, 14, 16, 73, 58, 20, 71, 35, 98, 93, 69, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 0, 66, 57, 60, 24, 80, 50, 86, 8, 56, 6, 11, 19, 76, 59, 61, 34, 85, 26, 82, 54, 33, 28, 2, 45, 42, 13, 70, 40, 99, 47, 95, 77, 51, 29, 38, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 84, 67, 72, 27, 92, 25, 74]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 10, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(39004.09027608097);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 8, 6, 116, 19, 61, 109, 76, 59, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 112, 71, 20, 73, 140, 58, 126, 35, 37, 103, 110, 101, 98, 83, 9, 89, 48, 5, 62, 0, 129, 91, 7, 121, 41, 138, 55, 142, 96, 118, 3, 64, 65, 128, 25, 123, 117, 69, 21, 15, 87, 136, 78, 105, 52, 133, 93, 23, 17, 18, 74, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 92, 130, 27, 57, 144, 86, 50, 124, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 29, 120, 111, 131, 28, 45, 42, 122, 2, 135, 13, 40, 70, 99, 47, 127, 33, 148, 82, 54, 139, 134, 84, 67, 11, 34, 119, 114, 85, 149, 26, 56]");

        graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        mmas_cmadtsp = new MMAS_CMADTSP(graph, 0.02, 1000, 0.5, 100, 4);
        mmas_cmadtsp.setMmasSeed(1);
        mmas_cmadtsp.setDbgpSeed(1);
        mmas_cmadtsp.setStatisticInterval(1);
        mmas_cmadtsp.setShowLog(false);
        mmas_cmadtsp.run();
        assertThat(mmas_cmadtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(39472.72211383625);
        assertThat(TestUtils.getTourString(mmas_cmadtsp.getGlobalStatistics())).isEqualTo("[56, 8, 6, 116, 144, 86, 124, 50, 60, 24, 80, 68, 72, 67, 49, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 100, 106, 29, 120, 111, 131, 28, 45, 2, 135, 13, 70, 40, 99, 47, 134, 139, 33, 54, 82, 148, 119, 114, 122, 42, 127, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 22, 44, 90, 108, 97, 31, 10, 14, 16, 140, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 129, 91, 74, 142, 55, 96, 118, 3, 128, 123, 25, 117, 64, 65, 69, 21, 15, 87, 136, 78, 105, 52, 133, 93, 110, 101, 98, 103, 35, 126, 37, 23, 17, 18, 138, 121, 41, 88, 79, 30, 137, 132, 141, 147, 66, 104, 107, 27, 92, 130, 46, 112, 7, 57, 115, 146, 38, 84, 56]");
    }
}