package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_US_MADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_US_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(24520.430501702853);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(24520.430501702853);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 32061.40617117336, 2553.2207588582637, 0.0, 54.53224489795918, 24995.293582408613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 5, 29376.994855512232, 1041.7389255705168, 0.0, 12.304489795918368, 24995.293582408613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 10, 29393.029818794505, 1715.1190283222531, 0.0, 10.861224489795918, 24995.293582408613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 11, 30287.767381202608, 2221.7070742696183, 0.48, 21.37469387755102, 24290.307975163585);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 15, 28540.19878735461, 1212.7589098943818, 0.48, 12.66530612244898, 24290.307975163585);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 20, 28522.916356051006, 1284.8328988225146, 0.495, 13.416326530612245, 23880.9868239177);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 21, 29628.45117290326, 2196.9952406496905, 0.635, 21.056326530612246, 24449.220959057056);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 25, 27703.113715880816, 1954.5333564127675, 0.665, 15.456326530612245, 22834.47401430026);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 30, 27206.336312470652, 2164.517074469376, 0.665, 13.198367346938776, 22834.47401430026);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 31, 28859.423285486708, 1985.4835654620776, 0.51, 19.664489795918367, 23968.134508232062);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 35, 28271.323315868634, 1715.4042897888849, 0.605, 12.997551020408164, 23780.134508232062);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 40, 28272.499317000038, 1902.879871809097, 0.605, 13.57469387755102, 23780.134508232062);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 41, 27728.750468785907, 1940.2554327056605, 0.53, 10.98530612244898, 23104.233953395305);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 45, 27417.13396648584, 1726.632181386244, 0.53, 16.605714285714285, 23104.233953395305);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 28302.93381167453, 2436.477621090595, 0.53, 17.433469387755103, 23104.233953395305);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 51, 29373.64918995567, 1850.7313886685436, 0.52, 12.017142857142858, 24768.32484148763);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 55, 27248.661403240836, 2304.5897313964147, 0.615, 9.871836734693877, 23609.50248707345);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 60, 27972.19852003449, 2600.815206127804, 0.505, 10.391836734693877, 23575.910451977747);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 61, 30873.766837903902, 2274.4327661580764, 0.52, 15.18530612244898, 27514.354346052478);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 65, 28350.5325407374, 1770.571851638355, 0.66, 18.86122448979592, 24695.490126541998);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 70, 28697.847729898203, 1373.5038748367585, 0.66, 14.964897959183673, 24695.490126541998);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 71, 30424.0672466153, 2499.3569377958415, 0.54, 17.624489795918368, 24239.711210937312);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 75, 26147.51451667992, 2287.9188116680566, 0.56, 11.289795918367346, 23372.62890734832);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 80, 26760.541548354267, 3415.325041212025, 0.505, 7.77469387755102, 23115.62890734832);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 81, 29256.780234004127, 2411.731727597055, 0.5, 9.169795918367347, 23318.25421835859);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 85, 27112.080800155705, 3201.039747806056, 0.555, 7.0987755102040815, 22779.228119945055);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 90, 28298.96951699681, 2396.6070753969384, 0.555, 9.751020408163265, 22779.228119945055);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 91, 26590.349805339738, 2411.41948098191, 0.575, 8.662040816326531, 23195.609004392136);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 95, 27240.38091945631, 2188.915038922483, 0.545, 6.698775510204082, 22936.609004392136);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 25601.72185994464, 2301.920574280021, 0.515, 5.575510204081633, 22936.609004392136);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 30188.005746174404, 2139.6064221040215, 0.505, 10.979591836734693, 24500.529743322022);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 105, 25536.147471014512, 1585.8834621446551, 0.525, 6.955918367346939, 23619.66601878969);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 110, 25226.383055517577, 1992.884246885788, 0.505, 7.024489795918368, 23167.66601878969);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 111, 27295.779327183875, 1219.1405778004541, 0.5, 5.634285714285714, 23524.683456062976);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 115, 25873.259823581615, 2316.317379409988, 0.535, 7.970612244897959, 22985.683456062976);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 120, 24972.35720511973, 1872.106372474067, 0.5, 5.684081632653061, 22971.683456062976);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 121, 28436.617606999833, 2592.544086286269, 0.505, 13.009795918367347, 23438.21910149624);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 125, 25154.455307093096, 2152.2840643650625, 0.515, 3.883265306122449, 23204.88363563932);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 130, 24817.488804850218, 1817.4918510081598, 0.51, 3.8946938775510205, 22932.74656470062);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 131, 28446.175861947035, 2017.3825582753382, 0.5, 7.024489795918368, 22973.1128199957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 135, 24912.83725972422, 2077.669012117988, 0.625, 6.7208163265306125, 22709.1128199957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 140, 24430.684277861073, 1936.1095669786296, 0.625, 4.477551020408163, 22709.1128199957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 141, 27226.455966848178, 1602.6918913691632, 0.49, 8.546938775510204, 23216.290869065822);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 145, 24783.06808112457, 1879.2760553028959, 0.57, 5.56, 22764.022058772534);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 25956.950531905677, 2434.9690433482237, 0.57, 7.457959183673469, 22764.022058772534);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 151, 26472.343728438937, 2148.143300461678, 0.55, 9.906938775510204, 22970.637643917165);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 155, 24448.421535436417, 1540.136805424418, 0.55, 5.048163265306123, 22970.637643917165);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 160, 25539.6628803203, 1647.6680010471136, 0.55, 8.238367346938775, 22970.637643917165);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 161, 27220.19409637083, 1404.576117062711, 0.575, 11.99265306122449, 24023.36142975413);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 165, 25422.32447447107, 1531.9722012112538, 0.575, 5.666938775510204, 24023.36142975413);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 170, 25009.863974638876, 1582.53529597146, 0.615, 3.226122448979592, 23857.429328433165);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 171, 28628.161051838844, 2277.8036705364125, 0.475, 19.75755102040816, 23594.278545515575);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 175, 27585.337212486673, 2006.434598579758, 0.475, 11.857142857142858, 23594.278545515575);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 180, 27338.951538615158, 2036.887219187376, 0.475, 15.726530612244899, 23594.278545515575);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 181, 30576.26193807299, 1452.7118830657296, 0.555, 16.82530612244898, 25366.379096627086);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 185, 27871.133479749886, 3027.623209644423, 0.52, 9.730612244897959, 25069.59322584429);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 190, 26106.732768176327, 2384.017352992799, 0.62, 5.216326530612245, 23763.64839207904);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 191, 26245.497434579123, 2927.3010057561046, 0.575, 4.300408163265306, 23120.079013161245);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 195, 24801.02563370533, 2173.7672124786163, 0.52, 3.5616326530612246, 22952.17440359167);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 25042.81954122583, 2779.3575916259915, 0.515, 3.8424489795918366, 22904.17440359167);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 25715.456573282987, 1753.6795116947876, 0.515, 7.088979591836734, 23121.584686987142);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 205, 25235.473453248538, 2139.5453527609816, 0.55, 6.745306122448979, 22703.351985669036);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 210, 25601.5459508526, 2160.2359106418244, 0.5, 5.978775510204081, 22617.351985669036);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 211, 25329.483268456763, 1832.32005043984, 0.5, 7.344489795918367, 22327.72594033317);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 215, 24138.123920342863, 1680.3263538949723, 0.58, 3.942040816326531, 22208.12630135569);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 220, 24243.718502940348, 1783.7021343873125, 0.58, 3.5453061224489795, 22208.12630135569);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 221, 28137.24713332497, 1563.9343195421295, 0.495, 9.537142857142857, 24068.985826094107);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 225, 24094.8148890079, 1756.7725586637382, 0.57, 3.1208163265306124, 22823.98582609411);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 230, 23866.101813388228, 1565.3249126783428, 0.57, 2.6555102040816325, 22823.98582609411);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 231, 24538.284546361938, 1796.4517523451136, 0.5, 3.8383673469387753, 22863.05384405487);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 235, 23339.999579573217, 1263.7471321737416, 0.57, 1.6685714285714286, 22733.068340625832);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 240, 23442.998255696308, 1500.0056753445497, 0.5, 2.045714285714286, 22730.207414504344);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 241, 28055.856563662517, 1950.6620090512736, 0.5, 9.11591836734694, 23855.864804918696);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 245, 26060.2182802027, 2801.2364338242896, 0.575, 7.6269387755102045, 23646.864804918696);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 25277.651934383022, 1837.6600826944555, 0.575, 5.692244897959184, 23646.864804918696);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 251, 26513.794608311484, 2581.638448526925, 0.5, 6.154285714285714, 23331.801022982363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 255, 25035.85660731115, 1700.7144558694492, 0.5, 3.756734693877551, 23331.801022982363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 260, 25744.369538701594, 1990.382308384485, 0.505, 6.278367346938776, 23118.682262058464);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 261, 27236.72368422593, 1992.8048635177324, 0.54, 10.961632653061224, 22879.65831669617);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 265, 25029.827656959787, 2501.8661402613775, 0.54, 5.030204081632653, 22879.65831669617);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 270, 24371.551915160697, 1776.0079373792441, 0.5, 4.546938775510204, 22844.54375392532);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 271, 25885.381519055296, 1532.3577418736293, 0.495, 8.11265306122449, 22890.399767082443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 275, 24185.59293743476, 1728.385969653302, 0.58, 4.884897959183673, 22554.399767082443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 280, 23585.7782116665, 1563.5571560976682, 0.58, 2.9151020408163264, 22554.399767082443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 281, 25544.11768766085, 1600.4624318009687, 0.5, 7.364081632653061, 23031.24240799513);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 285, 25744.79623388294, 1377.1009747253363, 0.5, 7.76, 23031.24240799513);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 290, 24282.110337688133, 1348.5402466194246, 0.5, 3.2481632653061223, 23031.24240799513);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 291, 25467.226068641008, 1945.531794884505, 0.5, 6.822857142857143, 22681.04218303845);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 295, 24264.95010724439, 1770.0288943149335, 0.755, 3.737142857142857, 22529.8269053131);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 23892.611883352234, 1399.7545796683219, 0.5, 3.2448979591836733, 22529.8269053131);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 25685.25717769139, 1529.4978980286812, 0.495, 7.543673469387755, 22584.128443951813);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 305, 24311.03428600521, 1549.4849977749745, 0.495, 5.213061224489796, 22584.128443951813);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 310, 23860.99789825108, 1312.6724525348561, 0.495, 4.340408163265306, 22584.128443951813);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 311, 26393.034082579936, 2487.462036067798, 0.5, 6.324081632653061, 22616.808281631816);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 315, 25663.229525022212, 2514.144644686951, 0.5, 3.3346938775510204, 22616.808281631816);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 320, 25473.49910236636, 2397.529302531039, 0.5, 3.5510204081632653, 22616.808281631816);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 321, 24397.753805843568, 1427.8467020498563, 0.515, 4.667755102040816, 22687.74214114819);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 325, 24992.93155360072, 2209.402897891468, 0.515, 3.483265306122449, 22687.74214114819);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 330, 24588.306236077784, 1740.9714633967772, 0.5, 4.3763265306122445, 22563.74214114819);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 331, 25381.351457700963, 1430.5224357430698, 0.525, 7.546938775510204, 22472.682262058464);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 335, 28305.560683433825, 1990.044785521606, 0.525, 4.966530612244898, 22472.682262058464);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 340, 28314.357686608415, 1850.0369870626726, 0.525, 4.062857142857143, 22472.682262058464);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 341, 31239.603465158438, 1498.2192393765376, 0.485, 14.331428571428571, 24722.43309504571);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 345, 25638.412829846005, 1448.4772658873246, 0.67, 9.833469387755102, 23685.43309504571);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 24582.59116105818, 1510.3878170439598, 0.525, 6.615510204081633, 22939.984207040656);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 351, 26637.034625965232, 1424.1931870916967, 0.51, 10.11265306122449, 22932.408916997418);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 355, 24815.32359831541, 1977.1983743280416, 0.635, 7.253061224489796, 22733.74141540433);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 360, 25003.523745449347, 1591.9392171115735, 0.5, 5.497959183673469, 22460.74141540433);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 361, 25935.28860778639, 2021.5403525333747, 0.515, 6.805714285714286, 22810.918922965084);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 365, 24621.26708298642, 1466.9533263450771, 0.515, 4.431836734693878, 22810.918922965084);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 370, 24432.905563442473, 1467.043827573054, 0.515, 3.3959183673469386, 22810.918922965084);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 371, 26221.59099676455, 1475.9892078409907, 0.495, 5.95265306122449, 22809.867010339098);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 375, 24693.583445323417, 1269.9731188948438, 0.495, 3.8889795918367347, 22809.867010339098);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 380, 24171.590155525504, 1243.4023427366658, 0.495, 3.4661224489795917, 22809.867010339098);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 381, 23314.48480144985, 1031.58788645671, 0.5, 2.390204081632653, 22483.252496143785);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 385, 23203.166295974697, 1034.5567986381063, 0.5, 2.3436734693877552, 22483.252496143785);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 390, 22987.631787744063, 964.0013882743543, 0.5, 1.8171428571428572, 22483.252496143785);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 391, 25529.26483549559, 1642.9497230302784, 0.5, 5.933061224489796, 22740.353947854557);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 395, 24625.31284559899, 1363.3661003759516, 0.56, 5.2293877551020405, 22624.09726255732);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 24459.30614305156, 1635.3976095599864, 0.5, 4.679183673469388, 22624.09726255732);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 28330.089440297605, 1773.2837356776006, 0.495, 11.776326530612245, 23352.514266948434);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 405, 25990.34337036264, 1225.2192682692184, 0.495, 5.513469387755102, 23352.514266948434);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 410, 26101.430740394608, 1212.4094990316487, 0.495, 5.368163265306123, 23352.514266948434);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 411, 26665.517179552702, 1194.5902728408837, 0.495, 4.698775510204082, 23229.477612864);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 415, 24839.912858358097, 1732.8689125120106, 0.495, 4.183673469387755, 23229.477612864);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 420, 24486.70107359682, 1389.0555736661656, 0.495, 3.5918367346938775, 23229.477612864);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 421, 24911.951264036856, 1358.1012889829879, 0.5, 6.6971428571428575, 22715.379726322615);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 425, 25490.725386125647, 1464.6941172761508, 0.5, 6.164081632653061, 22715.379726322615);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 430, 25318.759499949305, 1571.4383950483495, 0.5, 5.555918367346939, 22715.379726322615);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 431, 26854.1967118459, 1282.595336132465, 0.495, 11.241632653061224, 22951.64883945353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 435, 25825.00224415419, 1251.2455730658648, 0.495, 8.96734693877551, 22951.64883945353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 440, 25040.150705029657, 1317.3431361950788, 0.495, 5.131428571428572, 22951.64883945353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 441, 26224.112130985082, 1183.421199447864, 0.495, 9.746122448979591, 23211.978382708716);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 445, 25479.92121502456, 1053.1228577095349, 0.52, 7.8914285714285715, 23040.52158080077);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 25499.943671172867, 1320.4907307302728, 0.52, 6.124897959183674, 23040.52158080077);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 451, 26128.583596945104, 1144.4971235629175, 0.495, 9.055510204081633, 23193.221440819525);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 455, 24776.8852189071, 1138.4930612843125, 0.495, 5.755102040816326, 23193.221440819525);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 460, 25170.97614955658, 1430.5476904788654, 0.495, 4.944489795918368, 23193.221440819525);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 461, 25547.26520282068, 963.4917964001271, 0.5, 4.0751020408163265, 23182.15043481916);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 465, 23748.174689730033, 1350.8631209718185, 0.51, 3.6816326530612247, 22858.15043481916);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 470, 23505.257040055316, 1466.5207594212789, 0.5, 2.5673469387755103, 22553.15043481916);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 471, 25613.479477629426, 930.5870496514822, 0.495, 5.102857142857143, 23985.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 475, 23736.594111082482, 912.1009417825105, 0.56, 2.3926530612244896, 23127.365367633327);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 480, 23556.208426579164, 779.2409419168049, 0.56, 1.7224489795918367, 23127.365367633327);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 481, 27378.643996005998, 885.4154082746367, 0.5, 1.4718367346938777, 23498.74162426353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 485, 23981.629734750026, 1232.4184809023805, 0.54, 2.23265306122449, 23244.455017696167);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 490, 24200.320551718603, 1372.86541976057, 0.54, 2.9493877551020407, 23244.455017696167);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 491, 24225.313298165995, 1218.1961324375054, 0.5, 2.817142857142857, 22840.74063094872);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 495, 23976.122939091725, 1197.4110523796207, 0.5, 3.2857142857142856, 22840.74063094872);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 23988.029097826442, 1232.2674759848608, 0.5, 3.199183673469388, 22840.74063094872);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 25210.682865883868, 1235.343046722633, 0.495, 7.702857142857143, 23006.448066644243);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 505, 24811.542962028063, 1115.280837643591, 0.52, 4.318367346938776, 22949.35708774979);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 510, 25201.71928105355, 1126.7571233194205, 0.52, 4.531428571428571, 22949.35708774979);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 511, 26253.610878071344, 761.7674571635381, 0.5, 6.519183673469388, 23865.506906570346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 515, 24574.30288652539, 705.4503478885506, 0.56, 5.877551020408164, 23074.23713484722);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 520, 24428.16070851921, 1205.2787860546525, 0.5, 4.50530612244898, 22891.59074816933);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 521, 24177.014152179494, 1097.9014333899256, 0.515, 6.420408163265306, 22840.66316370912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 525, 24852.99565617215, 1015.4126783151378, 0.515, 3.493061224489796, 22840.66316370912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 530, 24745.05021799876, 1208.3279800981013, 0.515, 5.300408163265306, 22840.66316370912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 531, 25536.495063122922, 858.0299735664476, 0.5, 3.942040816326531, 23379.518488189176);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 535, 25012.05093214586, 934.1727985990354, 0.5, 7.150204081632653, 23379.518488189176);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 540, 25551.664405768726, 758.2526103606859, 0.5, 4.221224489795919, 23271.518488189176);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 541, 25537.139738509428, 1344.1546055486112, 0.5, 6.739591836734694, 23227.302839638476);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 545, 23499.209504223898, 823.9522673468397, 0.605, 2.3853061224489798, 23077.302839638476);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 23762.54625118421, 1074.0979489352135, 0.605, 2.403265306122449, 23077.302839638476);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 551, 24469.12510237789, 918.15425086541, 0.5, 5.805714285714286, 23244.11492193747);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 555, 23752.8335835655, 1369.294893573368, 0.5, 0.8546938775510204, 23244.11492193747);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 560, 23877.22946633591, 1418.5623583462536, 0.5, 1.36, 23244.11492193747);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 561, 24637.824488057537, 863.2728546967849, 0.5, 3.80734693877551, 23347.703941981203);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 565, 24854.626921612635, 1107.590405939988, 0.5, 7.281632653061225, 23347.703941981203);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 570, 24928.125747204012, 1210.6453618442777, 0.5, 7.811428571428571, 23347.703941981203);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 571, 24923.110808494348, 992.0534645136881, 0.495, 7.311020408163265, 22852.792681606268);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 575, 23444.972681606258, 1013.4959639680818, 0.495, 1.6073469387755102, 22852.792681606268);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 580, 24045.465380344573, 1096.2447917090124, 0.495, 2.8816326530612244, 22852.792681606268);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 581, 25753.442556197522, 885.2708578247932, 0.49, 6.902857142857143, 23154.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 585, 24556.526175910192, 1652.055340796005, 0.565, 2.706938775510204, 23131.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 590, 24178.99774792424, 1515.2942059368281, 0.565, 2.4685714285714284, 23131.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 591, 25448.064138340927, 1193.989353982056, 0.495, 4.683265306122449, 23478.228699452222);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 595, 23189.70151595375, 892.9390689592645, 0.5, 1.9714285714285715, 22771.782661322115);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 22976.945341397462, 726.668603091691, 0.5, 0.8685714285714285, 22771.782661322115);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 23628.840972729566, 912.7941057829796, 0.5, 3.743673469387755, 22626.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 605, 24034.720998665263, 1219.1930897940672, 0.5, 2.797551020408163, 22626.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 610, 23778.576488847473, 1234.3560613483983, 0.5, 2.1722448979591835, 22626.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 611, 24671.809555131294, 1208.016470961338, 0.5, 2.975510204081633, 22958.609707285363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 615, 24324.106336463123, 1207.9212815005362, 0.5, 3.0816326530612246, 22958.609707285363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 620, 24428.688385410656, 1268.7593516509426, 0.5, 2.6865306122448978, 22958.609707285363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 621, 25263.61538372104, 935.8895234986919, 0.49, 8.835918367346938, 22803.878516320055);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 625, 24219.858705118964, 1424.2149290582206, 0.49, 3.262857142857143, 22803.878516320055);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 630, 24436.048311070117, 1368.7437023251516, 0.49, 3.7779591836734694, 22803.878516320055);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 631, 25275.342737421408, 1361.4266844518263, 0.5, 5.291428571428572, 23247.39483034091);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 635, 24285.940662791058, 1310.8885689954955, 0.66, 5.626122448979592, 23108.68476473362);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 640, 24549.98842696611, 1436.680959199332, 0.66, 4.450612244897959, 23108.68476473362);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 641, 24132.1737273313, 1192.0695164150184, 0.5, 3.3216326530612243, 22772.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 645, 24275.46421853514, 1170.220589880212, 0.5, 4.451428571428571, 22772.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 24154.9173330886, 1183.3991700596239, 0.5, 4.497959183673469, 22772.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 651, 24813.99342360344, 1113.28101782702, 0.5, 7.243265306122449, 22541.076803521602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 655, 23675.895111829228, 1010.9145993144423, 0.5, 3.890612244897959, 22541.076803521602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 660, 23633.92482116468, 1136.5613011310836, 0.5, 3.434285714285714, 22541.076803521602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 661, 23349.235428865544, 918.344160271975, 0.5, 3.4914285714285715, 22731.694575966503);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 665, 23017.084663270653, 616.2770576076558, 0.5, 1.8628571428571428, 22731.694575966503);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 670, 23206.802923004445, 857.3412066068269, 0.5, 2.541224489795918, 22731.694575966503);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 671, 25788.373480870883, 1711.2251769835066, 0.495, 6.143673469387755, 23520.171418008445);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 675, 25189.641589302548, 1381.751772505898, 0.495, 3.2342857142857144, 23520.171418008445);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 680, 25263.385465420746, 1405.7971210707942, 0.495, 3.8620408163265307, 23520.171418008445);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 681, 25988.263111143577, 1928.5841393673122, 0.495, 3.440816326530612, 23095.469932440457);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 685, 24080.099488446576, 1131.6677634490356, 0.495, 3.8702040816326533, 23095.469932440457);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 690, 23958.115209014984, 1338.2213763766852, 0.495, 3.4571428571428573, 23095.469932440457);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 691, 24107.667477486328, 984.6324648895657, 0.5, 1.7951020408163265, 23143.685330544493);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 695, 24565.374872135326, 1147.6633644568442, 0.5, 2.926530612244898, 23143.685330544493);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 24655.74448447003, 1103.8236236164732, 0.5, 2.5020408163265304, 23143.685330544493);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 25139.243381865985, 1037.4597357849646, 0.5, 4.911020408163266, 23044.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 705, 23699.11047974289, 1061.542361358068, 0.62, 3.499591836734694, 22856.535593640016);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 710, 23756.418707244986, 1105.0017735762208, 0.62, 2.920816326530612, 22856.535593640016);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 711, 24549.762129888535, 788.8917653768065, 0.49, 10.363265306122448, 22689.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 715, 23964.137849049726, 1211.0852421371244, 0.49, 2.2122448979591836, 22689.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 720, 23953.182626163787, 1228.5389118928822, 0.49, 1.9477551020408164, 22689.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 721, 25885.782618076413, 907.7263543322067, 0.5, 5.370612244897959, 23394.107786548208);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 725, 23877.604641241553, 626.8562072794325, 0.5, 1.9885714285714287, 23394.107786548208);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 730, 24826.743370457236, 1925.5511351009254, 0.5, 2.4653061224489794, 23041.398670562598);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 731, 24667.60796065313, 1166.8539862913717, 0.5, 3.3183673469387753, 23321.50724784932);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 735, 24150.80713916425, 1235.1554669111301, 0.58, 2.397551020408163, 23076.97899446039);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 740, 24381.150507743772, 1198.839128737002, 0.58, 2.3151020408163263, 23076.97899446039);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 741, 24104.14421853514, 1205.7174422775197, 0.5, 2.3420408163265307, 22679.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 745, 23974.64421853514, 1211.3983864163943, 0.5, 2.323265306122449, 22679.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 23857.42421853514, 1193.519632115408, 0.5, 2.0073469387755103, 22679.124218535137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 751, 23916.68437603949, 1199.0532942540713, 0.5, 2.3583673469387754, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 755, 23908.750501702845, 1208.6243054964327, 0.5, 1.8024489795918368, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 760, 23917.030501702848, 1218.982580110251, 0.5, 1.9224489795918367, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 761, 25313.584396062703, 703.5174168002601, 0.495, 4.903673469387755, 23434.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 765, 23089.784391354755, 515.5093362262211, 0.59, 0.5102040816326531, 22959.95487889866);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 770, 23180.916032697725, 766.1858453595382, 0.59, 0.6636734693877551, 22959.95487889866);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 771, 24318.162316209524, 884.595537233604, 0.5, 3.3983673469387754, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 775, 24863.302825180104, 894.4985012517434, 0.5, 2.109387755102041, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 780, 23828.811840677095, 1269.4304599792995, 0.5, 1.4914285714285713, 22759.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 781, 24751.113972585266, 1109.0729340108358, 0.5, 2.0955102040816325, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 785, 23303.937874201398, 248.65050186611364, 0.5, 0.5102040816326531, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 790, 23359.950509501024, 474.40593055873956, 0.5, 0.4791836734693877, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 791, 24069.05695303432, 1101.4785454662517, 0.5, 1.7836734693877552, 23301.616953034318);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 795, 24050.693224007693, 1060.8656478219398, 0.5, 2.229387755102041, 23301.616953034318);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 24046.016953034323, 1072.6427215821982, 0.5, 1.8318367346938775, 23301.616953034318);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 24251.727759892252, 1319.3361701201738, 0.5, 1.7591836734693878, 23279.30745610096);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 805, 24211.99244790453, 1327.3529847890024, 0.5, 1.4391836734693877, 23279.30745610096);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 810, 23806.938647460913, 1040.2701078329208, 0.5, 1.6122448979591837, 23279.30745610096);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 811, 23830.970501702846, 965.4935971421294, 0.5, 1.9836734693877551, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 815, 23815.57050170284, 972.9237654972704, 0.5, 1.630204081632653, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 820, 24117.810501702847, 1087.6964779584725, 0.5, 2.1273469387755104, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 821, 24711.809080523304, 788.2771595127334, 0.495, 3.113469387755102, 23827.687090258958);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 825, 24829.9277013944, 1026.8209846546617, 0.495, 1.6718367346938776, 23827.687090258958);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 830, 24641.056745438673, 933.1905984925622, 0.495, 2.8718367346938773, 23827.687090258958);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 831, 23941.471711377228, 820.4619427233622, 0.5, 1.0048979591836735, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 835, 23516.11211460202, 930.6708881759362, 0.5, 0.4506122448979592, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 840, 23244.430501702842, 1.102474064703213E-11, 0.5, 0.0, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 841, 25432.365530052644, 860.5641581297289, 0.5, 1.2669387755102042, 23511.450726161376);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 845, 24361.98702220256, 1148.926954017362, 0.5, 1.6114285714285714, 23511.450726161376);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 24603.3899796978, 1193.0073305771368, 0.5, 2.56, 23511.450726161376);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 851, 23911.610501702846, 730.8833819147785, 0.49, 2.2775510204081635, 23378.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 855, 24045.41050170285, 1042.7773646588698, 0.49, 1.756734693877551, 23378.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 860, 24064.010501702847, 996.9399320737756, 0.49, 2.021224489795918, 23378.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 861, 24471.159371097034, 529.9570829167691, 0.495, 2.7412244897959184, 23269.748096162613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 865, 24139.447267054817, 1491.8861658999595, 0.495, 1.36, 23269.748096162613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 870, 24428.590700911373, 1578.836925320692, 0.495, 1.7428571428571429, 23269.748096162613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 871, 25496.275173015478, 596.9765653842113, 0.5, 0.5763265306122449, 23325.131448355416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 875, 24456.6395906793, 1164.5079234767866, 0.5, 2.1012244897959182, 23325.131448355416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 880, 24374.036547916927, 1165.6180554705063, 0.5, 1.7387755102040816, 23325.131448355416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 881, 24160.90180888843, 1114.0895742200914, 0.5, 1.7583673469387755, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 885, 24101.70690092021, 1091.218790438351, 0.5, 1.9648979591836735, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 890, 24131.750501702845, 1098.035433798724, 0.5, 1.9648979591836735, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 891, 23745.357918465754, 998.877168455064, 0.5, 1.2179591836734693, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 895, 23984.7942100843, 1116.9150574273758, 0.5, 1.5591836734693878, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 23783.258647154482, 1109.250658660534, 0.5, 1.2653061224489797, 23244.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 24017.08974128799, 1098.8575083891542, 0.5, 1.4089795918367347, 23275.282324622196);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 905, 23967.28677774638, 1076.352698372875, 0.5, 1.36, 23275.282324622196);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 910, 23838.759932364497, 975.305173308818, 0.5, 1.413061224489796, 23275.282324622196);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 911, 24550.558294897444, 537.4586913662839, 0.495, 3.153469387755102, 23474.989143561128);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 915, 23474.989143561117, 1.102474064703213E-11, 0.495, 0.0, 23474.989143561128);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 920, 23485.39797072395, 73.60152271039009, 0.495, 0.12, 23474.989143561128);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 921, 23745.793649941555, 197.6816396493342, 0.5, 1.3371428571428572, 23485.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 925, 23485.430501702842, 1.102474064703213E-11, 0.5, 0.0, 23485.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 930, 23485.430501702842, 1.102474064703213E-11, 0.5, 0.0, 23485.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 931, 24872.830501702847, 34.183777033044464, 0.495, 0.31265306122448977, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 935, 24783.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 940, 24783.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 941, 24783.430501702846, 7.34982709802142E-12, 0.49, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 945, 24783.430501702846, 7.34982709802142E-12, 0.49, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 24783.430501702846, 7.34982709802142E-12, 0.49, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 951, 24783.430501702846, 7.34982709802142E-12, 0.49, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 955, 24783.430501702846, 7.34982709802142E-12, 0.49, 0.0, 24783.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 960, 24653.772079855404, 130.97478475181728, 0.49, 1.0204081632653061, 24524.11365800797);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 961, 24546.73050170285, 79.70103576516942, 0.495, 0.3673469387755102, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 965, 24546.73050170285, 79.70103576516942, 0.495, 0.3673469387755102, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 970, 24536.210501702848, 63.09315755779103, 0.495, 0.23020408163265307, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 971, 24530.950501702846, 52.06049855892741, 0.495, 0.156734693877551, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 975, 24541.470501702846, 72.0744966074997, 0.495, 0.3004081632653061, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 980, 24546.73050170285, 79.70103576516942, 0.495, 0.3673469387755102, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 981, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 985, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 990, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 991, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 995, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 24520.430501702846, 7.34982709802142E-12, 0.495, 0.0, 24520.430501702853);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 86, 56, 6, 8, 54, 82, 33, 45, 28, 42, 2, 13, 99, 40, 70, 47, 81, 94, 12, 75, 32, 36, 4, 77, 51, 95, 29, 38, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 60, 50, 19, 11, 26, 85, 34, 76, 61, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 3, 64, 55, 79, 30, 88, 41, 7, 91, 89, 18, 96, 74, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 86, 56, 8, 6, 54, 82, 33, 45, 28, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 50, 19, 11, 26, 85, 34, 76, 61, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 3, 64, 18, 74, 48, 5, 89, 96, 55, 79, 30, 88, 41, 7, 91, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 24, 50, 56, 6, 54, 82, 33, 45, 28, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 60, 86, 8, 11, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 21, 93, 15, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 56, 54, 82, 33, 45, 28, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 86, 8, 6, 11, 19, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 71, 20, 58, 46, 62, 89, 48, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 46, 62, 89, 48, 5, 91, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 40, 70, 99, 47, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 58, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 38, 29, 77, 95, 51, 4, 36, 75, 32, 12, 94, 81, 47, 99, 70, 40, 13, 2, 45, 42, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 91, 7, 88, 41, 30, 79, 55, 96, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 53, 39, 1, 43, 49, 72, 67, 84, 81, 94, 12, 32, 75, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 82, 54, 33, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 46, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 72, 49, 67, 84, 38, 29, 95, 77, 51, 36, 4, 32, 75, 12, 81, 94, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 81, 94, 12, 75, 32, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 46, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 47, 99, 70, 40, 13, 2, 42, 45, 28, 82, 54, 33, 6, 8, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 38, 29, 28, 2, 42, 45, 13, 99, 70, 40, 47, 33, 82, 54, 6, 8, 56, 86, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 12, 75, 32, 36, 4, 77, 51, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 51, 77, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 62, 46, 89, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 62, 48, 5, 89, 18, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 78, 17, 69, 21, 93, 87, 15, 52, 65, 25, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 86, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 35, 98, 37, 23, 17, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 78, 15, 87, 52, 71, 83, 9, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 26, 34, 85, 19, 6, 8, 56, 86, 76, 59, 61, 22, 97, 90, 44, 31, 14, 16, 10, 20, 73, 58, 35, 98, 37, 23, 17, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 41, 88, 7, 91, 74, 18, 78, 15, 87, 52, 48, 5, 89, 9, 83, 71, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 85, 26, 34, 19, 6, 8, 56, 86, 76, 59, 61, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 11, 26, 34, 85, 19, 56, 86, 8, 6, 61, 59, 76, 22, 44, 97, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 13, 47, 99, 70, 40, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 11, 26, 85, 34, 19, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 46, 62, 48, 5, 89, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 81, 94, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 82, 54, 19, 56, 86, 8, 6, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 28, 45, 33, 82, 54, 6, 56, 86, 8, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 37, 98, 35, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 26, 85, 34, 61, 59, 76, 46, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 46, 62, 5, 48, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 56, 86, 8, 6, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 86, 56, 6, 11, 26, 34, 85, 19, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 86, 56, 6, 11, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 21, 87, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 42, 2, 45, 28, 33, 82, 54, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 86, 56, 6, 8, 54, 82, 11, 26, 19, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 62, 5, 48, 78, 52, 18, 74, 55, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 17, 23, 37, 98, 35, 83, 71, 20, 16, 14, 10, 73, 58, 9, 89, 7, 88, 30, 79, 41, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 11, 56, 86, 8, 6, 19, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 74, 18, 52, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 86, 56, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 8, 86, 56, 6, 11, 26, 85, 34, 19, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 44, 97, 90, 46, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 11, 26, 34, 85, 19, 76, 61, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 90, 44, 31, 10, 14, 16, 73, 20, 58, 71, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 86, 56, 6, 11, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 3, 64, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 89, 18, 74, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 83, 9, 46, 62, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 83, 9, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 31, 44, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 18, 74, 25, 64, 65, 3, 96, 55, 88, 30, 79, 41, 7, 91, 46, 62, 89, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 25, 64, 3, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 89, 5, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 55, 79, 30, 41, 88, 7, 74, 18, 89, 48, 5, 62, 46, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 93, 87, 21, 15, 69, 64, 25, 65, 3, 18, 52, 78, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 52, 78, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 78, 52, 18, 3, 64, 25, 65, 69, 21, 15, 87, 93, 17, 23, 37, 98, 35, 83, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 74, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 46, 62, 89, 48, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 25, 65, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 89, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 83, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 3, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 52, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 89, 48, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 18, 74, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 78, 89, 48, 5, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 21, 52, 18, 74, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 48, 89, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 25, 64, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 65, 25, 64, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 25, 64, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 78, 89, 5, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 46, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 46, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 46, 78, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 54, 82, 33, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 52, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 89, 48, 5, 62, 78, 46, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(22835.737696137134);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(22835.737696137134);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 32061.40617117336, 2553.2207588582637, 0.0, 54.53224489795918, 24995.293582408613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 28287.20015811485, 1696.6771006543656, 0.495, 12.246530612244898, 23380.336392086385);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 24388.57193437362, 1365.0769868842242, 0.54, 3.569795918367347, 23380.336392086385);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 27582.21880936035, 2101.842992786451, 0.545, 11.875102040816326, 24404.94613868239);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 26012.78161431062, 2222.392095234639, 0.5, 7.188571428571429, 23702.841301522625);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 24401.731284451787, 1396.0448012994802, 0.5, 5.838367346938775, 22760.70615883584);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 31390.86108386724, 1673.2522802756682, 0.495, 17.47020408163265, 23656.976807895684);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 25922.43862241736, 2414.345810068252, 0.655, 5.106122448979592, 23025.36706952583);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 25480.517672424536, 1891.3685882128918, 0.5, 5.490612244897959, 23025.36706952583);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 27968.197464322453, 2338.963388699085, 0.5, 6.973877551020408, 23685.67870185723);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 23982.48064298216, 1198.3086550154458, 0.5, 1.9673469387755103, 23427.193365773157);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 23689.194967116295, 663.3926258429277, 0.5, 1.1453061224489796, 23427.193365773157);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 24584.195931247275, 595.190770692842, 0.5, 4.575510204081633, 23942.002398248525);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 24172.87572144208, 1131.8753389818503, 0.5, 5.928979591836734, 23113.84687916191);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 23705.790471550292, 1085.700936923003, 0.5, 2.7216326530612247, 22742.84687916191);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 25495.390996972652, 725.597108272691, 0.5, 3.7877551020408164, 22933.816471748683);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 24195.43453152807, 906.5994812735829, 0.5, 3.9436734693877553, 22933.816471748683);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 24425.409180137296, 837.1880722041825, 0.5, 4.628571428571429, 22933.816471748683);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 23956.11396491774, 912.5286664528865, 0.5, 2.880816326530612, 22577.50151059669);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 23432.800765784927, 1071.8235734055656, 0.5, 3.7722448979591836, 22577.50151059669);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 23455.025732677153, 1366.055983764112, 0.5, 1.9469387755102041, 22577.50151059669);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 24253.337063555675, 1238.1837826088233, 0.5, 4.42530612244898, 22589.487360843912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 23388.86288822702, 970.414165417271, 0.5, 1.579591836734694, 22589.487360843912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 22964.81319343428, 798.720331943787, 0.5, 0.8759183673469387, 22589.487360843912);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 23300.15633687852, 1214.1070223261063, 0.5, 1.1395918367346938, 22728.856165416146);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 24628.070717674935, 2164.356864527645, 0.5, 1.56, 22728.856165416146);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 22740.536165416157, 82.5900720425888, 0.5, 0.12, 22728.856165416146);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 22835.737696137145, 1.102474064703213E-11, 0.5, 0.0, 22835.737696137134);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 22835.737696137145, 1.102474064703213E-11, 0.5, 0.0, 22835.737696137134);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 22835.737696137145, 1.102474064703213E-11, 0.5, 0.0, 22835.737696137134);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 51, 77, 47, 70, 40, 99, 13, 2, 42, 28, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 38, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 15, 21, 93, 87, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 78, 52, 18, 96, 74, 48, 5, 89, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 38, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 29, 38, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 25, 65, 64, 3, 55, 79, 30, 88, 41, 7, 91, 74, 96, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 97, 90, 46, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 59, 61, 76, 22, 44, 90, 97, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 44, 90, 97, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 34, 85, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 23, 37, 35, 98, 17, 93, 21, 15, 87, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 62, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 25, 65, 69, 87, 15, 21, 93, 17, 98, 35, 37, 23, 78, 52, 18, 74, 5, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 15, 87, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 15, 87, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 15, 87, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 15, 87, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 74, 5, 48, 89, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 34, 85, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 87, 15, 21, 69, 3, 64, 65, 25, 96, 55, 79, 30, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 74, 18, 52, 78, 17, 23, 37, 35, 98, 93, 87, 15, 21, 69, 25, 65, 64, 3, 96, 55, 30, 79, 88, 41, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 18, 96, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 74, 55, 79, 30, 41, 88, 7, 91, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 93, 21, 69, 87, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 43, 49, 84, 67, 72, 1, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 21, 69, 15, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(30848.395091994957);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(30848.395091994957);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 40111.719448483374, 2049.2615999305035, 0.0, 81.65795918367347, 34949.74724840918);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 5, 34850.95081469776, 1508.589007267257, 0.83, 29.787755102040816, 30543.35700392316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 10, 34868.320247840464, 1713.5199393843657, 0.83, 29.379591836734694, 30543.35700392316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 11, 38554.26248601389, 1729.645945745066, 0.4866666666666667, 36.926530612244896, 32834.65730403319);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 15, 34017.69436431491, 1563.1850646045848, 0.5566666666666666, 21.60734693877551, 31367.3103995533);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 20, 33082.20383609886, 2122.5719853227793, 0.5233333333333333, 11.578775510204082, 30836.522888467913);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 21, 35570.8859153826, 1361.2942112229532, 0.49666666666666665, 23.004897959183673, 31816.95403202046);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 25, 35593.06576203972, 1990.9768780765698, 0.51, 14.401632653061224, 31220.95403202046);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 30, 34879.80135868023, 1575.7716960707269, 0.5, 11.867755102040816, 30975.08904472804);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 31, 38586.81871000092, 2424.167452805816, 0.5, 29.255510204081634, 32037.68337293481);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 35, 34082.61685901892, 2119.1869072844584, 0.52, 12.98530612244898, 31483.893418450163);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 40, 34485.21911024746, 2241.4888887010507, 0.5133333333333333, 13.267755102040816, 31214.893418450163);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 41, 36219.5477960551, 2193.5808884915723, 0.49666666666666665, 20.87673469387755, 31394.507049911033);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 45, 34153.65026478319, 2664.560221265108, 0.5, 10.24, 31191.507049911033);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 33896.53520742675, 1904.7983427120269, 0.51, 12.663673469387755, 31080.07074163047);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 51, 36125.62562730507, 2239.224509673995, 0.49666666666666665, 14.729795918367348, 29687.43420672262);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 55, 34267.77058843976, 1908.7941505864578, 0.49666666666666665, 13.001632653061224, 29687.43420672262);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 60, 34284.7321407511, 1974.6722213184767, 0.49666666666666665, 11.223673469387755, 29687.43420672262);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 61, 35504.11830900799, 1525.4081298349759, 0.5133333333333333, 16.030204081632654, 30559.354819724012);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 65, 35151.04753181304, 1618.7014597237057, 0.5133333333333333, 15.990204081632653, 30559.354819724012);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 70, 35162.06060131087, 1913.1438600162483, 0.5, 15.863673469387756, 30353.41603730607);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 71, 37879.10135052118, 1434.2705593459834, 0.5133333333333333, 29.86857142857143, 31834.735038984436);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 75, 33553.89434718169, 1939.5430492137796, 0.63, 19.86204081632653, 30640.431203793603);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 80, 33729.21961642264, 1722.2304156323316, 0.5033333333333333, 19.58448979591837, 30359.761353610797);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 81, 35784.211983272486, 1523.254355426965, 0.5066666666666667, 28.78857142857143, 30889.915622187484);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 85, 31582.27639376944, 1823.846583097281, 0.55, 10.711836734693877, 29249.20249561814);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 90, 31318.73979761688, 2457.1172235952845, 0.5133333333333333, 7.254693877551021, 29168.20249561814);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 91, 35630.164769241936, 2164.4592150075005, 0.5, 14.412244897959184, 30742.322016104685);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 95, 32999.42303434733, 2052.6394813196766, 0.5133333333333333, 9.911836734693878, 30354.7065208843);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 32698.842637342113, 2424.077292539718, 0.5, 10.212244897959184, 30354.7065208843);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 34132.331736889115, 1703.435638936748, 0.49, 21.919183673469387, 29917.18565934876);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 105, 32155.118167897068, 2226.1956798896936, 0.52, 10.812244897959184, 29474.408543629306);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 110, 31353.9178259684, 2277.2695579284523, 0.51, 6.266938775510204, 29356.408543629306);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 111, 34249.439200342735, 1563.8144183753996, 0.49333333333333335, 9.391836734693877, 28927.848249330073);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 115, 30863.5430346112, 2057.0405126131377, 0.49333333333333335, 7.675918367346939, 28927.848249330073);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 120, 30868.703875664807, 2227.384735818984, 0.49666666666666665, 7.365714285714286, 28874.848249330073);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 121, 34509.80280606792, 2195.9509094618484, 0.5, 25.577142857142857, 30145.615136353204);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 125, 33076.101428180344, 2332.1293082503603, 0.51, 11.742857142857142, 29907.102806085346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 130, 32690.684124371124, 2624.703472475779, 0.5166666666666667, 11.419591836734694, 29705.83491758025);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 131, 36098.236868342094, 2317.5917635178134, 0.5033333333333333, 18.660408163265306, 30913.911974937717);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 135, 32891.251849590866, 2261.141424561312, 0.6066666666666667, 11.812244897959184, 30073.419965515885);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 140, 31985.61012158581, 2158.8218630260544, 0.6066666666666667, 8.244081632653062, 30073.419965515885);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 141, 36348.60491150781, 2025.2961606848867, 0.49333333333333335, 11.466122448979592, 31128.43896859766);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 145, 34050.776505771275, 2931.2949774564245, 0.5133333333333333, 9.25469387755102, 30197.003853711856);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 32723.763876952795, 2073.2363002004827, 0.5066666666666667, 8.76, 30130.003853711856);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 151, 36644.113279613724, 1158.9678339753236, 0.5033333333333333, 16.350204081632654, 31527.71667035358);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 155, 33034.69456380371, 1639.9999305249835, 0.5933333333333334, 10.255510204081633, 30924.993287485187);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 160, 33237.30839042519, 2485.0455157791307, 0.5533333333333333, 9.362448979591838, 30677.993287485187);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 161, 35873.877193226035, 1762.42144292012, 0.49666666666666665, 17.46530612244898, 31072.465383030514);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 165, 33378.66298499599, 1362.9580331729103, 0.5666666666666667, 6.910204081632653, 30900.23376853854);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 170, 33268.972620509354, 1810.331126553661, 0.5033333333333333, 8.744489795918367, 30545.032847954735);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 171, 34456.61417232176, 1806.1805700643847, 0.49666666666666665, 12.2, 30530.23932109097);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 175, 33238.553575474856, 1820.7716180528048, 0.54, 10.247346938775511, 30033.23932109097);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 180, 32336.49012500797, 1904.8474830671764, 0.49666666666666665, 8.444897959183674, 29882.667069537176);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 181, 35110.12946737258, 1398.6571830510672, 0.5066666666666667, 20.92408163265306, 30658.30405419892);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 185, 33532.07157888736, 2207.621882186699, 0.5066666666666667, 12.210612244897959, 30658.30405419892);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 190, 34392.182589507305, 2104.7587725562767, 0.5066666666666667, 17.23183673469388, 30658.30405419892);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 191, 36207.6776859806, 1805.823581042727, 0.5733333333333334, 35.157551020408164, 30554.97184965141);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 195, 33166.40426452325, 2317.7874441372524, 0.52, 9.662857142857144, 29413.672290715353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 32784.53161638225, 2601.884547773982, 0.5, 9.300408163265306, 29413.672290715353);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 34929.402171687325, 1585.4100827960888, 0.49333333333333335, 17.336326530612244, 30795.773471198);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 205, 31635.53850483405, 2095.6280996675882, 0.5166666666666667, 5.84, 29363.21070310494);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 210, 31338.442704735255, 1975.956529420444, 0.5166666666666667, 4.943673469387755, 29363.21070310494);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 211, 33828.57285738356, 1357.2094458500296, 0.49333333333333335, 13.030204081632654, 30753.470822312574);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 215, 34778.84242263688, 2053.9116187484133, 0.5133333333333333, 9.754285714285714, 30116.277074770453);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 220, 34081.84812583083, 1965.1479531471653, 0.5133333333333333, 9.509387755102042, 30116.277074770453);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 221, 35505.73405659951, 2190.5335971032728, 0.5166666666666667, 10.842448979591836, 30470.936199746444);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 225, 33071.66716152672, 1782.2712460071564, 0.6766666666666666, 11.413061224489796, 30136.331782991707);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 230, 33092.70153115822, 2130.2996982970853, 0.52, 7.1722448979591835, 29949.488312542693);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 231, 33485.82577965091, 1904.2918860216407, 0.49666666666666665, 9.649795918367348, 30317.557122165716);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 235, 31999.175289141134, 2001.6158182747909, 0.5066666666666667, 6.777959183673469, 30038.139216871037);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 240, 32223.053205844863, 1984.8815306429676, 0.55, 6.226938775510204, 29737.65386347381);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 241, 33176.08600820634, 2094.6593074539705, 0.5, 8.42204081632653, 29334.34180760064);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 245, 32360.142722090823, 1732.7616641871189, 0.5, 6.875102040816326, 29334.34180760064);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 32177.022848525903, 2078.9875186867635, 0.51, 6.169795918367347, 29296.34180760064);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 251, 36111.03152401586, 1361.43569212772, 0.49333333333333335, 15.657142857142857, 29618.93156333618);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 255, 31375.386844990182, 2171.9520465365795, 0.5333333333333333, 5.213061224489796, 29068.15468014535);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 260, 31262.42190320347, 2066.67077236711, 0.5, 5.637551020408163, 29036.15468014535);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 261, 33771.82755700227, 1739.8993923197222, 0.5033333333333333, 9.626938775510204, 29724.338336964134);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 265, 31699.761980873252, 1856.3907102859866, 0.52, 7.587755102040816, 29214.194919846395);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 270, 31641.961579304083, 2006.6579826806562, 0.52, 5.213877551020408, 29214.194919846395);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 271, 32678.93325844086, 1937.4591137902544, 0.49666666666666665, 10.391836734693877, 29180.065238385476);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 275, 30823.63924379378, 2259.9048496645632, 0.5466666666666666, 4.9951020408163265, 28886.97597563784);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 280, 30327.596404800363, 1762.0398101941296, 0.5, 3.240816326530612, 28879.97597563784);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 281, 30645.031946538562, 1620.8522826724852, 0.51, 5.851428571428571, 28682.444244006565);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 285, 30533.19583523247, 1861.607866875282, 0.5133333333333333, 7.011428571428572, 28586.278539438896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 290, 30006.435298605353, 1774.1751162330168, 0.5033333333333333, 4.44, 28513.93068055202);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 291, 32515.268140972454, 2076.2682306499173, 0.5066666666666667, 10.097959183673469, 28917.15704579448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 295, 31468.08304965291, 1796.5637282282837, 0.6266666666666667, 9.871020408163265, 28896.15704579448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 30963.677328329297, 2068.995914334961, 0.5, 7.866122448979592, 28896.15704579448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 32928.03275018522, 1625.9077149769391, 0.49666666666666665, 18.659591836734695, 29322.51087802346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 305, 31557.24848436384, 2519.4515162688585, 0.49666666666666665, 8.76734693877551, 29322.51087802346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 310, 31532.18585073444, 2018.8897314715962, 0.49666666666666665, 8.88734693877551, 29170.02570060887);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 311, 32296.99787196432, 1596.3309656081017, 0.5, 10.848163265306123, 29099.525048859097);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 315, 31140.990370679327, 1722.706131326536, 0.5, 8.173061224489796, 29099.525048859097);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 320, 31324.655826613645, 1607.21588537344, 0.5, 8.994285714285715, 29099.525048859097);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 321, 33365.57528026965, 1575.9846843001642, 0.5, 15.591836734693878, 29230.46705145456);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 325, 32462.980293040433, 1405.922638500637, 0.5, 14.143673469387755, 29230.46705145456);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 330, 32604.10497591274, 1209.5742993922167, 0.52, 14.733877551020408, 29157.9156154768);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 331, 34631.467747369825, 2560.904808211726, 0.51, 14.244081632653062, 30970.491333578826);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 335, 31536.229123711906, 1704.0543468864464, 0.5433333333333333, 3.2653061224489797, 30366.713469370006);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 340, 32020.350316857337, 1844.5950229407827, 0.5233333333333333, 8.213877551020408, 29844.043381514028);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 341, 32266.385477520544, 1729.077102143564, 0.5133333333333333, 7.549387755102041, 29866.440160626516);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 345, 31206.3854548232, 1893.4086969816103, 0.5066666666666667, 5.559183673469388, 29800.971331286157);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 32308.88279723556, 2220.4795408488703, 0.49666666666666665, 6.918367346938775, 29737.972188151038);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 351, 35457.359563427606, 1126.3128658773448, 0.49, 24.279183673469387, 30899.237120016227);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 355, 32035.532275746224, 1066.01787665687, 0.49, 6.791836734693877, 30899.237120016227);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 360, 31263.719717114294, 1551.038173672959, 0.5066666666666667, 9.478367346938775, 29651.33221924484);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 361, 32783.977203203176, 1809.6003677398762, 0.51, 11.413877551020407, 30065.405046343712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 365, 31991.12819598184, 1760.8900182708037, 0.51, 7.398367346938776, 30065.405046343712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 370, 32323.743535176174, 2423.5761863843372, 0.51, 7.765714285714286, 30065.405046343712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 371, 32928.348754213315, 2128.6760623756554, 0.5033333333333333, 8.959183673469388, 29454.360906747213);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 375, 30782.871727599075, 1792.9909327654145, 0.54, 6.468571428571429, 29203.580663729772);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 380, 30928.59388942736, 1949.5156849466757, 0.5133333333333333, 6.662857142857143, 29196.580663729772);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 381, 34627.58630273408, 951.4117190021734, 0.49, 18.42938775510204, 31500.50623183816);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 385, 32753.38262127095, 1205.9152681587743, 0.5833333333333334, 10.43265306122449, 30716.27707914485);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 390, 31398.37363024405, 1877.7589475168104, 0.5133333333333333, 3.877551020408163, 29820.53290728699);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 391, 35367.37093162347, 2126.2310255313887, 0.52, 13.212244897959184, 30756.690919039072);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 395, 32050.592742961322, 1825.3245144522818, 0.5133333333333333, 5.766530612244898, 30591.468852384103);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 31634.957622753536, 1367.1629723186304, 0.49666666666666665, 7.908571428571428, 30549.468852384103);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 33041.06884246699, 1795.3859391050567, 0.49666666666666665, 10.191020408163265, 31031.904150222585);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 405, 32339.773295212068, 1701.162905215666, 0.5033333333333333, 9.201632653061225, 30904.62692756498);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 410, 33854.87662826358, 2317.601414210022, 0.5233333333333333, 9.053877551020408, 30165.268777172372);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 411, 33437.340613037224, 2216.559058460124, 0.5166666666666667, 7.211428571428572, 29587.24670373106);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 415, 32558.19685358007, 1853.8584515475347, 0.5166666666666667, 7.8244897959183675, 29587.24670373106);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 420, 31855.903584772706, 1875.5584229872159, 0.5, 5.707755102040816, 29284.24670373106);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 421, 34207.51366955535, 787.0769010288475, 0.5166666666666667, 9.64, 29628.83156163806);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 425, 31802.614814548222, 2094.4427564671755, 0.5166666666666667, 5.315918367346939, 29628.83156163806);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 430, 31223.217375092496, 2110.7314947224177, 0.5166666666666667, 3.8759183673469386, 29628.83156163806);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 431, 33651.53824069598, 1950.3397246498246, 0.5, 7.549387755102041, 30108.699098253077);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 435, 33328.20073999183, 1966.1512598045756, 0.5, 6.2424489795918365, 30108.699098253077);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 440, 33296.13936661609, 1747.422980610863, 0.5, 7.1991836734693875, 30108.699098253077);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 441, 35236.98386564923, 1818.0021046033557, 0.49666666666666665, 13.684897959183674, 30270.853610642735);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 445, 32012.046414098997, 2499.7383004045387, 0.56, 4.914285714285715, 30126.853610642735);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 32361.05272633474, 2595.1938421783293, 0.5, 5.0016326530612245, 30097.398075727102);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 451, 33942.82951397647, 2285.026655751453, 0.5, 8.165714285714285, 30561.466821389942);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 455, 31909.78822418464, 1964.9994202909124, 0.5033333333333333, 4.0048979591836735, 30198.2769279003);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 460, 32119.52689940826, 2246.2200017895652, 0.5033333333333333, 3.370612244897959, 30198.2769279003);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 461, 34319.12996827521, 1945.404851095661, 0.49666666666666665, 9.186122448979592, 30242.317008287668);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 465, 31572.346415735497, 1848.5931514076185, 0.5566666666666666, 2.7142857142857144, 30167.481013192024);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 470, 32484.978694572674, 2280.485438734895, 0.5566666666666666, 4.575510204081633, 30167.481013192024);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 471, 32380.162171249493, 2234.4889719087437, 0.5, 3.7444897959183674, 30029.4086606322);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 475, 31868.563161318318, 2226.1925908190246, 0.5066666666666667, 3.8253061224489797, 30022.344913063705);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 480, 31872.510343365837, 2200.8164610427716, 0.5, 3.572244897959184, 29971.15052078131);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 481, 33463.104593240634, 2214.853060020638, 0.51, 6.546938775510204, 30127.466698169388);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 485, 34294.24210805332, 1216.1956845707764, 0.51, 5.886530612244898, 30127.466698169388);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 490, 33577.84525653232, 2053.7982541694387, 0.51, 5.875918367346939, 30127.466698169388);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 491, 35347.07058064517, 1833.1275635572847, 0.5, 6.756734693877551, 30860.777956388247);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 495, 34361.05615124651, 2203.774191253245, 0.5, 5.750204081632653, 30374.433897845818);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 33033.13331859065, 2005.7877837418246, 0.5033333333333333, 4.905306122448979, 29972.463894417);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 34755.562357650546, 741.5013998834969, 0.5, 7.526530612244898, 30062.179968502416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 505, 32239.196424396625, 2531.7453353230676, 0.52, 3.978775510204082, 30009.179968502416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 510, 31667.81575841746, 2167.3529463042933, 0.52, 3.199183673469388, 30009.179968502416);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 511, 31221.028607027172, 1310.020318678253, 0.5, 2.4261224489795916, 29865.863310966313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 515, 31074.471910877703, 1934.0554488895527, 0.5, 2.4024489795918367, 29865.863310966313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 520, 31177.858138346473, 1951.2954029759962, 0.5, 3.0563265306122447, 29865.863310966313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 521, 34572.45056168457, 2029.2833706424112, 0.5, 9.568979591836735, 31106.42014706201);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 525, 33380.18927218575, 2282.3782546559814, 0.5133333333333333, 5.497959183673469, 30591.600885752727);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 530, 32291.073540841066, 2232.607071561422, 0.5, 3.4261224489795916, 30517.288738007435);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 531, 32590.205167930977, 2213.7199968734385, 0.5033333333333333, 5.188571428571429, 29982.844246872355);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 535, 32685.118457987304, 1752.7583068331476, 0.56, 3.907755102040816, 29926.08166680331);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 540, 32830.405125629535, 2041.2222628803956, 0.56, 3.9379591836734695, 29926.08166680331);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 541, 33898.676519585366, 1866.7745250866958, 0.5, 5.641632653061224, 30073.069655439387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 545, 31819.62207169533, 1760.0572176276748, 0.5, 2.3387755102040817, 30073.069655439387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 32439.502128197993, 1775.1634836006049, 0.5, 3.1510204081632653, 30073.069655439387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 551, 34612.17501231372, 1581.1031070506367, 0.49666666666666665, 6.4, 30414.205699062535);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 555, 31827.46993775086, 2028.795737215113, 0.51, 4.6971428571428575, 29807.177429921958);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 560, 31384.02227242827, 2057.3295339497454, 0.51, 5.05795918367347, 29807.177429921958);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 561, 35246.167890048615, 1112.8478201674745, 0.49666666666666665, 11.339591836734694, 30206.516460931154);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 565, 32891.94902579572, 2025.5662455190577, 0.49666666666666665, 7.283265306122449, 30206.516460931154);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 570, 32078.82394072995, 2631.0845184917407, 0.49666666666666665, 5.191836734693878, 30206.516460931154);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 571, 35052.6117781557, 1217.0401576548434, 0.49666666666666665, 14.008163265306122, 30214.57713733687);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 575, 31458.026863737367, 2105.9574437157835, 0.49666666666666665, 2.266938775510204, 30214.57713733687);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 580, 31224.856305172845, 1752.0311370953814, 0.49666666666666665, 2.243265306122449, 30214.57713733687);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 581, 34891.79626662059, 783.5737090799254, 0.49666666666666665, 5.9681632653061225, 30528.90772763602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 585, 34353.98446066101, 828.7337247460889, 0.49666666666666665, 6.049795918367347, 30528.90772763602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 590, 33982.418997231034, 699.5255055801939, 0.49666666666666665, 3.329795918367347, 30528.90772763602);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 591, 34756.88183019065, 907.5716719450244, 0.5133333333333333, 6.233469387755102, 30645.803430277632);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 595, 31903.77870018947, 1938.6902846967741, 0.5133333333333333, 3.3151020408163263, 30645.803430277632);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 31615.03867739647, 1830.270808662754, 0.5, 2.972244897959184, 30645.803430277632);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 31153.43067747569, 1554.4332208344626, 0.5, 2.116734693877551, 30396.72845367257);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 605, 30980.03546089932, 1235.3753593595557, 0.5, 1.7542857142857142, 30396.72845367257);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 610, 31424.173622485563, 1917.3496400969332, 0.5, 1.8718367346938776, 30385.72845367257);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 611, 33401.45617485406, 2009.4688335073517, 0.5, 5.297959183673469, 31089.685324214523);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 615, 33719.78219885354, 2900.292826548925, 0.5, 4.74204081632653, 31089.685324214523);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 620, 32845.62072238438, 2415.67988944584, 0.5, 3.9812244897959186, 31089.685324214523);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 621, 34540.502794626256, 3252.475938961569, 0.49666666666666665, 6.182040816326531, 31004.70200168641);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 625, 32913.45114514869, 2107.15280643251, 0.5633333333333334, 4.466122448979592, 30913.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 630, 33119.78297379656, 2222.7265917715827, 0.5633333333333334, 4.915918367346939, 30913.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 631, 32761.5020373937, 2131.3098930892497, 0.5, 4.197551020408163, 30401.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 635, 31577.059578703404, 1823.423441372515, 0.5, 2.626938775510204, 30401.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 640, 31697.17659391099, 1931.8307658029944, 0.5, 3.9812244897959186, 30185.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 641, 37068.56372649476, 2344.5363210439514, 0.5, 6.016326530612245, 31690.28184968543);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 645, 34442.952573037815, 571.4053545145501, 0.5, 2.045714285714286, 31690.28184968543);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 34072.03145392912, 953.3412076111529, 0.5, 1.9159183673469389, 31690.28184968543);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 651, 34385.45588539465, 1238.2436778565432, 0.5033333333333333, 9.92, 31179.174059931403);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 655, 34506.98581926474, 485.7407988475551, 0.5033333333333333, 2.5918367346938775, 31179.174059931403);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 660, 34752.560969545164, 744.5444772833458, 0.5033333333333333, 3.388571428571429, 31179.174059931403);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 661, 35778.910945590345, 879.2970939056127, 0.5033333333333333, 5.478367346938776, 32061.02720103247);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 665, 31615.260213250094, 1089.9782916774896, 0.5233333333333333, 0.9069387755102041, 31266.08660642813);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 670, 31543.671071099612, 1248.607452896455, 0.5033333333333333, 1.217142857142857, 31080.271071099596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 671, 32883.54666474572, 1822.1859284590291, 0.5, 3.4848979591836735, 31236.038695087675);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 675, 31488.35869508766, 1127.8789636901167, 0.52, 0.9069387755102041, 31190.038695087675);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 680, 31650.944422763725, 1308.6952904913257, 0.5033333333333333, 2.2048979591836733, 31032.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 681, 35913.245013631546, 749.7220768354802, 0.49666666666666665, 6.1959183673469385, 30993.703908343443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 685, 33933.43711499711, 761.4319164741695, 0.52, 4.13795918367347, 30326.703908343443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 690, 31272.65026264643, 1629.9097753857661, 0.52, 2.7616326530612243, 30326.703908343443);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 691, 32393.001951285914, 2027.7533430984465, 0.5, 4.986122448979592, 30470.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 695, 32847.2450147176, 1908.7779285920687, 0.5, 2.833469387755102, 30470.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 31440.152522458764, 678.9414026912859, 0.49666666666666665, 2.030204081632653, 30470.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 31955.08661418005, 708.2434862054916, 0.49333333333333335, 2.740408163265306, 31590.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 705, 32232.640112764253, 1210.790527770544, 0.49333333333333335, 2.766530612244898, 31590.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 710, 31999.615688480713, 788.8782558264165, 0.49333333333333335, 2.400816326530612, 31590.643765392902);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 711, 32785.95787064911, 679.7698358808235, 0.49666666666666665, 3.6563265306122448, 31567.667543933065);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 715, 34679.914960897215, 1132.6043980721186, 0.49666666666666665, 5.324897959183674, 31567.667543933065);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 720, 32039.807767219107, 1231.6896178212053, 0.5266666666666666, 4.419591836734694, 31336.301014738365);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 721, 32730.627057265618, 1554.2975829959964, 0.5, 5.442448979591837, 31233.1562710533);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 725, 32205.473296823042, 2043.874995400849, 0.5466666666666666, 3.492244897959184, 30708.1562710533);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 730, 31877.718975311444, 1813.8699469145308, 0.5466666666666666, 2.7151020408163267, 30708.1562710533);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 731, 32974.877022286244, 1568.7655591174073, 0.5, 5.020408163265306, 30967.086276816866);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 735, 32060.60072026776, 2087.865518599497, 0.5, 1.539591836734694, 30967.086276816866);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 740, 31656.19855394615, 1558.7270347032209, 0.5, 1.350204081632653, 30967.086276816866);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 741, 31949.534091448564, 2228.4975467739623, 0.5, 1.3159183673469388, 31099.103618756737);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 745, 31734.655802698107, 2008.0030288397797, 0.5, 1.04734693877551, 31099.103618756737);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 32057.43444595343, 2521.156691311692, 0.5, 1.0816326530612246, 31099.103618756737);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 751, 31349.940272081993, 1490.6729194966226, 0.5, 0.8579591836734693, 30781.594438448148);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 755, 31108.034438448143, 1110.9645222939926, 0.5, 0.8848979591836734, 30774.594438448148);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 760, 31091.934438448145, 959.6377635039469, 0.5, 1.0522448979591836, 30774.594438448148);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 761, 32085.455416686946, 1397.031495575064, 0.5, 1.6906122448979592, 31247.93558160061);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 765, 31715.28181153473, 1141.6624369236072, 0.5, 1.2040816326530612, 31114.288043569584);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 770, 31826.445588030467, 1159.419378648976, 0.5, 2.1640816326530614, 31089.288043569584);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 771, 31445.027487279083, 1140.2069713219098, 0.5, 1.8440816326530611, 30867.1288643137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 775, 31206.438175796393, 941.2492505590635, 0.5, 1.4791836734693877, 30814.1288643137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 780, 31203.858175796395, 947.0126404425979, 0.5, 1.3248979591836734, 30814.1288643137);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 781, 33689.85822158664, 1532.9294891728214, 0.5, 3.9893877551020407, 31557.2366140296);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 785, 32134.869635812625, 1191.7565037069344, 0.5, 1.486530612244898, 31557.2366140296);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 790, 32174.018151154643, 1292.28394628927, 0.5, 1.9706122448979593, 31557.2366140296);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 791, 32312.198044227975, 1876.1349827827403, 0.5, 2.523265306122449, 30899.85880441448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 795, 31568.124766884423, 1697.749411118895, 0.5, 1.1379591836734695, 30899.85880441448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 31373.82788673876, 1231.6304899263605, 0.5, 1.1428571428571428, 30899.85880441448);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 32965.176547982126, 1509.3087985621166, 0.5, 3.755918367346939, 31078.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 805, 31667.125364824995, 919.6477259544182, 0.5, 1.6538775510204082, 31078.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 810, 32145.19335501255, 1338.4948893620558, 0.5, 2.7322448979591836, 31078.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 811, 31422.69318247011, 907.1036200696586, 0.5, 1.1273469387755102, 30942.724165201456);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 815, 31219.709521559667, 702.4386417307885, 0.5066666666666667, 1.3967346938775511, 30885.724165201456);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 820, 31198.52219973878, 789.0713368736143, 0.5066666666666667, 1.3281632653061224, 30885.724165201456);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 821, 31074.63034209922, 712.8087053102037, 0.5, 1.0522448979591836, 30794.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 825, 31000.85558721543, 756.7356078601708, 0.5, 0.9559183673469388, 30794.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 830, 30959.095091994917, 501.13056875306995, 0.5, 0.5771428571428572, 30794.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 831, 32358.010369565218, 600.6393637997893, 0.49666666666666665, 2.79265306122449, 31250.149739057608);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 835, 31805.15509199492, 1354.8530089712199, 0.51, 1.9616326530612245, 31051.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 840, 31670.755091994917, 1252.394991483868, 0.51, 1.273469387755102, 31051.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 841, 32294.24258659506, 1079.8940753565041, 0.5, 1.8244897959183672, 30964.74062943865);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 845, 31570.38062943862, 1056.4862586393988, 0.5, 0.9428571428571428, 30964.74062943865);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 31253.8098563998, 683.7451121295051, 0.5, 0.5820408163265306, 30964.74062943865);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 851, 32141.274690805323, 994.5659660556457, 0.5, 2.309387755102041, 30930.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 855, 31023.035091994916, 370.4024154723551, 0.5, 0.34530612244897957, 30930.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 860, 31049.855091994916, 407.90100889949326, 0.5, 0.5404081632653062, 30930.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 861, 31018.948987169442, 368.8302458052217, 0.5, 0.5118367346938776, 30905.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 865, 31024.015091994916, 395.89474430892426, 0.5, 0.9142857142857143, 30905.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 870, 31278.775091994918, 645.234394682764, 0.5, 1.9902040816326532, 30905.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 871, 31538.787116032607, 552.2256463541917, 0.5, 1.513469387755102, 31024.509107332033);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 875, 31282.069107331998, 599.8717264242961, 0.5, 0.9722448979591837, 31024.509107332033);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 880, 31221.1917454837, 499.32661288304996, 0.5, 0.9542857142857143, 31024.509107332033);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 881, 31582.868876702938, 835.1973011907025, 0.5, 2.0775510204081633, 30977.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 885, 30977.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30977.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 890, 31105.43461519056, 522.5587373888867, 0.5, 0.5093877551020408, 30977.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 891, 31289.14488447958, 440.765688328874, 0.5, 0.9608163265306122, 30991.180029043524);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 895, 31031.860029043524, 227.73475799710502, 0.5, 0.23918367346938776, 30991.180029043524);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 31024.21329656702, 218.57458281596178, 0.5, 0.2, 30991.180029043524);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 33535.500109246736, 933.9878082541585, 0.5, 1.2685714285714285, 30951.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 905, 31449.399333045403, 1052.4563260651462, 0.5, 1.2571428571428571, 30951.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 910, 31185.13710582415, 794.6994536973774, 0.5, 0.6808163265306122, 30951.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 911, 31204.661264748334, 556.6171537357243, 0.5, 1.0236734693877552, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 915, 30981.615091994918, 444.5330634382509, 0.5, 0.6669387755102041, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 920, 31040.10870923222, 524.8145191287904, 0.5, 0.9787755102040816, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 921, 31331.9431863189, 318.37336605750875, 0.5, 1.0057142857142858, 31147.415439852233);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 925, 31353.55165614957, 633.7796987303733, 0.5, 0.9142857142857143, 31147.415439852233);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 930, 31359.56581210565, 637.4568568112813, 0.5, 1.1591836734693877, 31147.415439852233);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 931, 31165.49509199492, 610.1958618311978, 0.5, 1.6751020408163266, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 935, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 940, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 941, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 945, 30849.455091994918, 7.495331880577408, 0.5, 0.08, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 951, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 955, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 960, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 961, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 965, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 970, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 971, 30862.428839089753, 1.469965419604284E-11, 0.5, 0.0, 30862.428839089738);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 975, 30862.428839089753, 1.469965419604284E-11, 0.5, 0.0, 30862.428839089738);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 980, 30862.428839089753, 1.469965419604284E-11, 0.5, 0.0, 30862.428839089738);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 981, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 985, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 990, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 991, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 995, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 30848.395091994917, 4.042404903911781E-11, 0.5, 0.0, 30848.395091994957);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 71, 34, 26, 11, 148, 54, 82, 33, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 111, 131, 28, 13, 2, 45, 127, 42, 122, 114, 119, 135, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 55, 142, 118, 117, 128, 25, 123, 64, 3, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 83, 9, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 14, 16, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 19, 56, 6, 116, 8, 144, 86, 50, 124, 60, 24, 80, 134, 139, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 49, 115, 81, 125, 94, 32, 75, 12, 145, 102, 111, 131, 28, 45, 33, 57, 107, 66, 104, 141, 147, 27, 92, 130, 46, 112, 62, 5, 48, 74, 30, 79, 137, 132, 88, 41, 121, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 15, 93, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 16, 14, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 82, 54, 148, 134, 139, 6, 8, 116, 33, 45, 28, 131, 111, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 120, 47, 13, 70, 40, 99, 135, 2, 122, 42, 127, 114, 119, 56, 19, 86, 144, 124, 50, 60, 24, 80, 57, 107, 66, 104, 141, 147, 27, 92, 130, 46, 112, 62, 5, 48, 74, 138, 79, 30, 88, 41, 121, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 90, 97, 44, 22, 59, 76, 109, 61, 149, 34, 85, 26, 11, 82, 54, 148, 114, 119, 42, 127, 45, 28, 131, 111, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 24, 80, 124, 50, 144, 86, 8, 116, 56, 19, 6, 139, 134, 33, 122, 2, 135, 13, 70, 40, 99, 47, 29, 120, 84, 67, 72, 60, 107, 27, 92, 130, 46, 112, 62, 5, 48, 74, 138, 55, 79, 30, 88, 41, 121, 137, 132, 7, 91, 129, 147, 141, 104, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 140, 126, 10, 14, 16, 31, 108, 90, 97, 44, 22, 59, 109, 76, 61, 149, 34, 85, 26, 11, 82, 54, 148, 114, 119, 42, 127, 135, 13, 70, 40, 99, 47, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 24, 80, 124, 50, 144, 86, 8, 116, 56, 19, 6, 139, 134, 33, 122, 2, 45, 28, 131, 111, 84, 67, 72, 60, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 66, 141, 104, 147, 137, 132, 88, 30, 79, 121, 41, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 102, 145, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 47, 99, 40, 70, 13, 135, 127, 42, 119, 114, 148, 82, 54, 116, 139, 134, 33, 122, 2, 45, 28, 131, 111, 84, 67, 72, 68, 107, 57, 27, 92, 130, 46, 112, 5, 62, 48, 129, 104, 66, 141, 147, 137, 132, 88, 30, 79, 121, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 6, 8, 56, 144, 86, 50, 124, 60, 24, 80, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 47, 99, 40, 70, 13, 135, 127, 42, 119, 114, 148, 82, 54, 116, 139, 134, 33, 122, 2, 45, 28, 131, 111, 84, 67, 72, 68, 107, 57, 27, 92, 130, 46, 112, 5, 62, 48, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 93, 21, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 129, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 39, 53, 63, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 135, 127, 42, 119, 114, 148, 82, 54, 116, 139, 134, 33, 122, 70, 40, 99, 47, 13, 84, 67, 72, 143, 1, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 45, 2, 135, 127, 42, 28, 111, 131, 13, 99, 40, 70, 47, 77, 95, 51, 120, 29, 106, 100, 38, 84, 67, 72, 143, 113, 43, 1, 63, 39, 53, 107, 60, 24, 80, 68, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 134, 139, 144, 86, 124, 50, 57, 27, 92, 130, 46, 112, 62, 48, 5, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 15, 87, 93, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 45, 2, 135, 127, 42, 28, 131, 13, 99, 40, 70, 47, 29, 120, 106, 100, 38, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 95, 51, 77, 111, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 66, 104, 141, 147, 91, 7, 41, 121, 79, 30, 88, 132, 137, 92, 27, 57, 130, 46, 112, 48, 5, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 33, 82, 54, 148, 119, 114, 122, 45, 2, 135, 127, 42, 28, 131, 13, 40, 70, 99, 47, 29, 120, 106, 100, 38, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 111, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 27, 92, 130, 46, 112, 62, 5, 48, 91, 7, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 93, 21, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 33, 82, 54, 148, 119, 114, 122, 45, 2, 135, 127, 42, 28, 131, 13, 40, 70, 99, 47, 29, 120, 106, 100, 38, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 111, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 93, 21, 15, 87, 136, 78, 17, 23, 37, 103, 101, 110, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 14, 16, 10, 31, 44, 90, 108, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 33, 82, 54, 148, 119, 114, 122, 42, 2, 135, 127, 45, 28, 131, 13, 40, 70, 99, 47, 120, 106, 100, 38, 84, 67, 72, 43, 49, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 29, 111, 134, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 66, 104, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 6, 56, 8, 116, 33, 82, 54, 148, 119, 114, 122, 127, 42, 135, 2, 45, 106, 111, 146, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 143, 1, 53, 39, 63, 68, 113, 49, 72, 67, 84, 38, 100, 120, 29, 47, 99, 40, 70, 13, 131, 28, 134, 139, 144, 86, 124, 50, 60, 24, 80, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 147, 104, 66, 141, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 136, 78, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 6, 56, 8, 116, 54, 82, 148, 119, 114, 42, 2, 45, 28, 131, 106, 100, 120, 29, 38, 84, 67, 72, 43, 143, 1, 53, 39, 63, 68, 113, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 47, 99, 40, 70, 13, 135, 127, 122, 33, 111, 134, 139, 144, 86, 124, 50, 60, 24, 80, 107, 57, 27, 92, 130, 46, 112, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 66, 141, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 126, 58, 140, 14, 16, 10, 31, 108, 90, 44, 97, 22, 59, 109, 76, 61, 149, 34, 85, 19, 26, 11, 8, 56, 6, 116, 54, 82, 148, 119, 114, 42, 2, 45, 28, 131, 106, 120, 29, 38, 100, 84, 67, 139, 134, 33, 111, 13, 47, 99, 70, 40, 127, 122, 135, 51, 77, 95, 4, 36, 102, 145, 32, 12, 75, 81, 125, 94, 146, 115, 43, 143, 1, 53, 39, 63, 68, 113, 49, 72, 80, 24, 124, 144, 86, 50, 60, 57, 107, 66, 147, 132, 137, 88, 30, 79, 121, 41, 7, 91, 62, 48, 5, 112, 46, 130, 92, 27, 104, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 58, 126, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 6, 116, 8, 56, 86, 144, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 13, 47, 99, 70, 40, 127, 135, 29, 120, 106, 100, 38, 84, 67, 72, 43, 143, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 49, 113, 63, 39, 53, 68, 80, 24, 124, 50, 60, 57, 107, 66, 104, 141, 41, 121, 79, 30, 88, 137, 132, 147, 92, 27, 130, 46, 112, 62, 5, 48, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 103, 110, 101, 98, 35, 37, 83, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 86, 144, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 2, 45, 28, 131, 111, 13, 47, 99, 70, 40, 127, 135, 29, 120, 106, 100, 38, 84, 67, 72, 49, 113, 63, 39, 53, 143, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 43, 68, 80, 24, 50, 124, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 91, 48, 5, 62, 112, 9, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 98, 101, 110, 103, 35, 83, 9, 112, 71, 20, 73, 126, 58, 140, 16, 14, 10, 108, 31, 90, 44, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 19, 11, 116, 8, 6, 56, 144, 24, 80, 68, 43, 146, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 143, 53, 39, 63, 113, 49, 72, 67, 84, 38, 100, 106, 120, 29, 135, 127, 70, 40, 99, 47, 13, 111, 131, 28, 45, 2, 42, 122, 114, 119, 148, 54, 82, 33, 134, 139, 86, 124, 50, 60, 57, 107, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 91, 48, 5, 62, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 112, 71, 20, 73, 126, 58, 140, 16, 14, 10, 31, 44, 108, 90, 97, 22, 59, 109, 76, 61, 149, 34, 85, 26, 11, 19, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 116, 8, 6, 54, 82, 148, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 49, 72, 67, 84, 43, 113, 39, 53, 1, 143, 63, 68, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 7, 91, 48, 5, 62, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 58, 126, 16, 14, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 49, 43, 113, 143, 63, 39, 53, 1, 72, 67, 84, 68, 80, 24, 60, 124, 50, 8, 6, 56, 144, 86, 139, 134, 116, 57, 107, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 7, 91, 48, 5, 62, 112, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 71, 20, 73, 140, 126, 58, 16, 14, 10, 31, 108, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 36, 4, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 49, 43, 113, 143, 63, 39, 53, 1, 72, 67, 84, 139, 134, 86, 144, 8, 6, 56, 116, 124, 50, 60, 24, 80, 68, 107, 66, 104, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 112, 46, 130, 92, 27, 57, 129, 91, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 88, 30, 79, 121, 41, 132, 137, 147, 141, 104, 66, 107, 24, 80, 60, 50, 124, 116, 56, 6, 8, 144, 86, 134, 139, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 46, 130, 92, 27, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 88, 30, 79, 121, 41, 132, 137, 147, 66, 104, 141, 27, 92, 57, 107, 24, 80, 60, 50, 124, 86, 144, 8, 6, 56, 116, 54, 82, 148, 114, 119, 33, 134, 139, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 33, 119, 114, 148, 82, 54, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 9, 83, 112, 48, 5, 62, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 66, 104, 141, 27, 92, 57, 107, 60, 50, 124, 86, 144, 56, 8, 6, 116, 139, 134, 84, 67, 24, 80, 68, 143, 63, 39, 53, 1, 43, 113, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 33, 54, 82, 148, 119, 114, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 121, 41, 79, 30, 88, 137, 132, 147, 66, 104, 141, 27, 92, 57, 107, 60, 50, 124, 86, 144, 56, 8, 6, 116, 139, 134, 84, 67, 24, 80, 68, 143, 63, 39, 53, 1, 43, 113, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 48, 5, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 24, 80, 68, 72, 49, 113, 143, 63, 39, 53, 1, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 85, 26, 19, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 50, 124, 86, 144, 56, 6, 8, 116, 139, 134, 84, 67, 24, 80, 68, 72, 49, 113, 143, 63, 39, 53, 1, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 19, 149, 34, 85, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 129, 92, 27, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 34, 149, 19, 26, 85, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 53, 39, 63, 143, 113, 43, 49, 72, 68, 80, 24, 67, 84, 134, 139, 116, 8, 6, 56, 86, 144, 124, 50, 60, 57, 107, 66, 104, 141, 147, 137, 132, 88, 30, 79, 121, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 104, 92, 27, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 34, 149, 19, 26, 85, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 53, 39, 63, 143, 113, 43, 49, 72, 68, 80, 24, 67, 84, 134, 139, 116, 8, 6, 56, 86, 144, 124, 50, 60, 57, 107, 66, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 34, 149, 19, 26, 85, 11, 54, 82, 33, 148, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 146, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 1, 53, 39, 63, 143, 113, 43, 49, 72, 68, 80, 24, 67, 84, 134, 139, 116, 6, 56, 8, 144, 86, 124, 50, 60, 107, 57, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 107, 57, 60, 67, 84, 134, 139, 116, 8, 6, 56, 86, 144, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 85, 26, 19, 149, 34, 61, 59, 76, 109, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 50, 124, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 29, 120, 100, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 6, 56, 8, 116, 86, 144, 139, 134, 84, 67, 38, 146, 11, 85, 26, 19, 149, 34, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 14, 16, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 116, 6, 56, 8, 144, 86, 50, 124, 139, 134, 84, 67, 38, 146, 29, 120, 100, 106, 111, 131, 45, 28, 11, 26, 85, 19, 149, 34, 61, 59, 76, 109, 22, 97, 90, 108, 31, 10, 14, 16, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 66, 141, 104, 57, 107, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 100, 38, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 116, 6, 56, 8, 144, 86, 50, 124, 139, 134, 111, 131, 28, 45, 29, 120, 106, 11, 26, 85, 19, 149, 34, 61, 109, 76, 59, 22, 97, 90, 108, 31, 10, 16, 14, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 139, 134, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 135, 40, 70, 99, 13, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 106, 29, 120, 84, 67, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 124, 50, 144, 86, 56, 116, 6, 8, 33, 82, 54, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 44, 14, 16, 10, 31, 108, 90, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 29, 120, 106, 111, 131, 28, 45, 42, 122, 114, 119, 127, 135, 2, 13, 40, 70, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 134, 139, 124, 50, 86, 144, 8, 56, 6, 116, 33, 82, 54, 148, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 68, 72, 67, 84, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 100, 120, 29, 106, 134, 139, 49, 43, 113, 115, 1, 53, 39, 63, 143, 107, 57, 60, 24, 80, 50, 124, 86, 144, 8, 56, 6, 116, 33, 82, 54, 148, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 124, 86, 144, 139, 116, 8, 6, 56, 19, 149, 34, 85, 26, 11, 148, 54, 82, 33, 134, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 120, 29, 106, 100, 38, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 72, 68, 80, 24, 60, 50, 59, 61, 76, 109, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 59, 61, 149, 34, 85, 26, 11, 148, 54, 82, 33, 139, 134, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 135, 13, 70, 40, 99, 47, 51, 77, 95, 29, 120, 106, 100, 38, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 84, 67, 49, 43, 113, 143, 63, 39, 53, 1, 115, 72, 68, 80, 24, 60, 124, 50, 86, 144, 8, 116, 6, 56, 19, 22, 97, 90, 108, 31, 16, 14, 10, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 8, 6, 116, 139, 144, 86, 124, 50, 60, 24, 80, 68, 72, 115, 1, 53, 39, 63, 143, 113, 43, 49, 67, 84, 106, 29, 120, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 24, 80, 68, 113, 143, 63, 39, 53, 1, 43, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 99, 40, 70, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 50, 124, 60, 80, 24, 68, 63, 39, 53, 143, 1, 113, 43, 49, 72, 67, 84, 106, 120, 29, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 99, 40, 70, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 24, 80, 68, 39, 63, 53, 1, 143, 113, 43, 49, 72, 67, 84, 29, 120, 106, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 99, 40, 70, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 86, 144, 50, 124, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 29, 120, 106, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 99, 40, 70, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 99, 40, 70, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 27, 92, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 99, 70, 40, 47, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 24, 80, 68, 72, 113, 1, 53, 39, 63, 143, 43, 49, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 40, 70, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 113, 43, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 135, 127, 119, 114, 122, 42, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 92, 27, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 143, 113, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 45, 28, 131, 111, 134, 54, 82, 33, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 106, 120, 29, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 45, 28, 131, 111, 134, 54, 82, 33, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 113, 43, 49, 72, 67, 84, 106, 29, 120, 100, 38, 146, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 45, 28, 131, 111, 134, 54, 82, 33, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 108, 31, 10, 16, 14, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 113, 43, 49, 72, 67, 84, 111, 131, 28, 45, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 51, 95, 77, 4, 36, 102, 145, 32, 12, 75, 94, 125, 81, 115, 146, 38, 100, 120, 29, 106, 134, 33, 82, 54, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 49, 72, 67, 84, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 47, 13, 99, 70, 40, 135, 127, 42, 122, 2, 45, 28, 131, 111, 134, 33, 82, 54, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 84, 67, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 47, 13, 99, 70, 40, 135, 127, 42, 122, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 119, 114, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 10, 16, 14, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 67, 49, 115, 146, 81, 125, 94, 12, 75, 145, 32, 102, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 47, 13, 40, 70, 99, 135, 127, 42, 122, 2, 45, 28, 131, 111, 134, 33, 82, 54, 148, 119, 114, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 67, 134, 82, 54, 33, 45, 28, 111, 131, 13, 47, 99, 70, 40, 2, 135, 127, 42, 122, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 28, 2, 45, 33, 82, 54, 134, 67, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 38, 100, 120, 131, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 28, 131, 13, 47, 99, 70, 40, 135, 2, 45, 122, 42, 127, 119, 114, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 16, 14, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 28, 131, 13, 47, 99, 70, 40, 135, 2, 45, 122, 42, 127, 119, 114, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 16, 14, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 75, 32, 12, 94, 81, 125, 115, 49, 67, 134, 28, 131, 13, 47, 99, 40, 70, 135, 2, 45, 127, 42, 122, 114, 119, 33, 54, 82, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 49, 115, 67, 134, 28, 131, 13, 47, 99, 70, 40, 135, 2, 45, 127, 42, 122, 119, 114, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 115, 49, 67, 134, 28, 131, 13, 47, 99, 40, 70, 135, 127, 42, 2, 45, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 16, 14, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 75, 32, 102, 145, 12, 94, 125, 81, 115, 49, 67, 33, 119, 114, 122, 45, 2, 42, 127, 135, 70, 40, 99, 47, 13, 131, 28, 134, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 67, 131, 13, 47, 99, 70, 40, 135, 2, 127, 42, 114, 119, 122, 45, 28, 134, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 108, 31, 10, 16, 14, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 82, 54, 148, 33, 45, 28, 131, 13, 47, 99, 70, 40, 135, 2, 42, 122, 127, 114, 119, 11, 149, 34, 85, 26, 61, 59, 22, 97, 90, 108, 31, 10, 16, 14, 44, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 82, 54, 148, 33, 28, 131, 13, 47, 99, 40, 70, 135, 2, 45, 42, 122, 127, 114, 119, 34, 85, 26, 11, 149, 61, 59, 97, 90, 108, 31, 14, 16, 10, 44, 22, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 127, 114, 119, 122, 42, 45, 2, 135, 70, 40, 99, 47, 13, 131, 28, 33, 54, 82, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 134, 54, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 131, 28, 2, 45, 33, 82, 148, 11, 26, 34, 85, 149, 61, 59, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 33, 82, 54, 148, 11, 26, 85, 149, 34, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 131, 28, 2, 45, 61, 59, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 33, 82, 54, 148, 45, 2, 28, 131, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 31, 14, 16, 10, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 82, 54, 33, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 31, 14, 16, 10, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 119, 114, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 122, 42, 114, 119, 33, 54, 82, 148, 11, 26, 85, 34, 149, 59, 61, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 119, 114, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 148, 54, 82, 11, 26, 34, 85, 149, 61, 59, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 33, 82, 54, 148, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 108, 31, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 34, 85, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 44, 97, 90, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 44, 90, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 16, 14, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 89, 105, 133, 52, 18, 96, 74, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 93, 15, 87, 78, 136, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 71, 83, 9, 112, 62, 5, 48, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 109, 76, 19, 56, 6, 8, 116, 139, 144, 86, 124, 50, 60, 80, 24, 68, 63, 39, 53, 143, 1, 43, 113, 72, 84, 106, 29, 111, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 49, 115, 67, 134, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 33, 82, 54, 11, 26, 85, 34, 149, 61, 59, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");


    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(29016.01243398712);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(29016.01243398712);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 40111.719448483374, 2049.2615999305035, 0.0, 81.65795918367347, 34949.74724840918);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 34710.40940187465, 1449.7534827517504, 0.83, 11.646530612244899, 30543.35700392316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 33663.01744533684, 1111.9572850170132, 0.51, 7.51265306122449, 30543.35700392316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 37389.05832837145, 1540.710659688465, 0.5, 23.853061224489796, 33309.89338857183);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 31348.518304744688, 2025.9080246544256, 0.49333333333333335, 7.633469387755102, 29114.206796688777);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 31008.064966149745, 2187.0841586131273, 0.5266666666666666, 6.354285714285714, 28831.206796688777);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 36082.91147659923, 2361.7887511167028, 0.5233333333333333, 13.681632653061225, 30123.299777400425);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 32425.832299644273, 2152.5845221162026, 0.49666666666666665, 9.04408163265306, 30098.299777400425);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 31309.016499667, 1902.6945627025843, 0.49666666666666665, 6.079183673469387, 29618.869557009493);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 33602.35288072976, 1736.0122755021584, 0.49, 12.58530612244898, 29766.775379782455);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 30265.81191119079, 1643.190219889375, 0.49666666666666665, 6.410612244897959, 28869.90450496038);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 29955.212586435355, 1448.2683191411904, 0.49666666666666665, 5.053061224489796, 28740.90450496038);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 32204.984662614774, 1609.7996744300613, 0.49333333333333335, 12.233469387755102, 29823.481993662288);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 30812.644555912135, 1162.3141960247788, 0.49666666666666665, 5.419591836734694, 29550.961510313853);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 30856.9577052226, 1457.7030984989567, 0.49666666666666665, 5.79265306122449, 29318.424088328615);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 32961.275741531834, 1446.461192481929, 0.49666666666666665, 8.93061224489796, 29343.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 29616.54845315447, 1091.0575901690456, 0.49666666666666665, 3.4612244897959186, 28816.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 29721.623247775984, 1281.0942542242265, 0.49666666666666665, 5.530612244897959, 28810.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 30710.20724776329, 669.2903716213161, 0.49333333333333335, 7.304489795918367, 29284.295864898224);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 29792.217275561827, 1186.6258432146192, 0.5033333333333333, 3.96, 29015.507230137213);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 29586.82518406646, 856.5371340370459, 0.49666666666666665, 3.126530612244898, 29015.507230137213);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 31117.62176009531, 963.7494097159599, 0.49333333333333335, 7.7273469387755105, 29173.20992336317);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 29350.92831012187, 726.6552641594708, 0.49666666666666665, 1.333061224489796, 29053.76547641535);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 29026.494365354334, 725.4919775570046, 0.49666666666666665, 1.3812244897959183, 28745.76547641535);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 30594.588519243476, 533.4708598482305, 0.49333333333333335, 6.596734693877551, 29016.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 29124.61153604947, 386.1511179967445, 0.49333333333333335, 0.5142857142857142, 29016.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 29061.872433987115, 226.9546398984356, 0.49666666666666665, 0.3551020408163265, 29016.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 29139.068523577316, 430.4029075403192, 0.49666666666666665, 0.5093877551020408, 29016.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 29098.392433987116, 329.37986816291675, 0.49666666666666665, 0.34530612244897957, 29016.01243398712);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 29016.012433987114, 7.34982709802142E-12, 0.49666666666666665, 0.0, 29016.01243398712);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 71, 34, 26, 11, 148, 54, 82, 33, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 111, 131, 28, 13, 2, 45, 127, 42, 122, 114, 119, 135, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 8, 6, 56, 116, 54, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 67, 84, 134, 139, 111, 131, 28, 45, 33, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 62, 91, 7, 121, 41, 79, 30, 138, 55, 142, 118, 96, 3, 64, 65, 123, 25, 117, 128, 69, 15, 87, 21, 93, 136, 78, 105, 133, 52, 18, 74, 88, 132, 137, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 6, 137, 132, 53, 39, 63, 143, 1, 43, 113, 68, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 24, 80, 86, 56, 8, 116, 54, 82, 148, 11, 19, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 73, 20, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 71, 112, 5, 48, 74, 18, 52, 133, 105, 78, 136, 93, 21, 87, 15, 69, 128, 117, 25, 123, 65, 64, 3, 96, 118, 142, 55, 138, 30, 79, 88, 41, 121, 7, 91, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 56, 8, 139, 24, 80, 68, 72, 49, 43, 113, 143, 1, 53, 39, 63, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 6, 116, 11, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 5, 48, 74, 18, 52, 133, 105, 78, 136, 93, 21, 87, 15, 69, 128, 117, 25, 123, 65, 64, 3, 96, 118, 142, 55, 138, 30, 79, 88, 137, 132, 41, 121, 7, 91, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 117, 25, 123, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 117, 123, 25, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 36, 4, 95, 77, 51, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 67, 84, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 77, 51, 95, 84, 67, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 2, 13, 70, 40, 99, 47, 77, 51, 95, 84, 67, 134, 139, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 6, 8, 116, 11, 26, 34, 85, 19, 149, 59, 76, 109, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 6, 8, 116, 11, 26, 34, 85, 19, 149, 59, 76, 109, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 8, 116, 6, 11, 26, 34, 85, 19, 149, 59, 76, 109, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 8, 116, 6, 11, 26, 34, 85, 19, 149, 59, 76, 109, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 8, 116, 6, 11, 26, 34, 85, 19, 149, 59, 109, 76, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 56, 8, 116, 6, 11, 26, 34, 85, 19, 149, 59, 109, 76, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 18, 52, 133, 105, 78, 136, 87, 15, 21, 93, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 116, 6, 8, 56, 85, 34, 26, 11, 19, 149, 59, 109, 76, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 64, 65, 123, 25, 117, 128, 69, 15, 21, 93, 87, 136, 78, 105, 52, 133, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 45, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 116, 6, 8, 56, 85, 34, 26, 11, 19, 149, 59, 109, 76, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 64, 65, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 122, 42, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 33, 82, 54, 148, 114, 119, 116, 6, 8, 56, 85, 34, 26, 11, 19, 149, 59, 109, 76, 61, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 64, 65, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 127, 122, 42, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 139, 134, 33, 82, 54, 148, 114, 119, 116, 6, 8, 56, 85, 149, 34, 26, 11, 19, 109, 76, 61, 59, 22, 44, 90, 97, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 45, 28, 2, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 6, 8, 56, 116, 11, 19, 34, 26, 85, 149, 61, 109, 76, 59, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 45, 28, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 34, 26, 85, 149, 61, 109, 76, 59, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 110, 101, 103, 37, 23, 17, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 45, 28, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 85, 26, 34, 149, 61, 76, 109, 59, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 23, 37, 103, 98, 101, 110, 17, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 85, 26, 34, 149, 61, 76, 109, 59, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 11, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 65, 64, 117, 123, 25, 128, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 64, 117, 123, 25, 128, 65, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 64, 117, 123, 25, 128, 65, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 6, 8, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 5, 48, 74, 3, 64, 117, 123, 25, 128, 65, 69, 15, 21, 93, 87, 136, 17, 78, 105, 133, 52, 18, 96, 118, 142, 55, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 34, 85, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 71, 20, 73, 58, 140, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 93, 21, 15, 69, 65, 128, 25, 123, 117, 64, 3, 118, 96, 55, 142, 138, 137, 132, 88, 30, 79, 121, 41, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 132, 137, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 85, 34, 19, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 11, 26, 34, 85, 19, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 62, 74, 18, 52, 133, 105, 78, 17, 136, 87, 15, 21, 93, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 96, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 48, 5, 129, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 83, 9, 112, 62, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 17, 78, 105, 133, 52, 18, 74, 48, 5, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 83, 9, 112, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 105, 133, 52, 18, 74, 48, 5, 91, 7, 132, 137, 88, 30, 79, 121, 41, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 83, 9, 112, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 74, 48, 5, 91, 7, 132, 137, 41, 121, 88, 30, 79, 138, 55, 142, 118, 96, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 105, 133, 52, 18, 96, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 136, 78, 83, 9, 112, 62, 5, 48, 74, 138, 79, 30, 88, 121, 41, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 18, 52, 133, 136, 78, 105, 9, 83, 112, 62, 5, 48, 74, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 25, 123, 117, 64, 3, 118, 142, 55, 96, 18, 52, 133, 136, 78, 105, 9, 83, 112, 62, 5, 48, 74, 138, 79, 30, 88, 137, 132, 41, 121, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 142, 55, 96, 18, 52, 133, 105, 9, 83, 112, 62, 5, 48, 74, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 112, 62, 5, 48, 18, 74, 96, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 112, 62, 5, 48, 18, 74, 96, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 89, 46, 130, 92, 27, 104, 141, 147, 66, 107, 57, 60, 50, 124, 144, 86, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 45, 2, 13, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 116, 8, 6, 56, 19, 11, 26, 85, 149, 34, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 73, 20, 71, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 52, 133, 105, 9, 83, 48, 112, 62, 5, 74, 18, 3, 64, 65, 128, 25, 123, 117, 118, 96, 142, 55, 138, 41, 121, 79, 30, 88, 137, 132, 7, 91, 129, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.75, 10, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(42278.59636982616);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(42278.59636982616);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 46564.42118143889, 4349.664088172347, 0.0, 57.111836734693874, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 5, 37977.54231056649, 2518.6452064378705, 0.0, 13.30938775510204, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 10, 38478.644565444854, 2791.620567872461, 0.0, 14.29469387755102, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 11, 42721.4859692603, 2965.231606481939, 0.485, 39.19673469387755, 33778.584325428);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 15, 37844.05388128266, 2444.322089689584, 0.6, 20.950204081632652, 31120.670404947647);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 20, 34988.303138533636, 2697.8278320547597, 0.495, 11.349387755102041, 30151.7916254269);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 21, 47365.93003010917, 3925.488243670937, 0.55, 38.37877551020408, 35169.29633405373);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 25, 40229.14545618248, 3895.6531015269984, 0.58, 17.111020408163267, 31681.935045989125);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 30, 38110.098640924676, 2632.476460513922, 0.58, 9.75673469387755, 31681.935045989125);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 31, 46450.120726147834, 3516.0690421473505, 0.49, 30.45469387755102, 35504.731329440605);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 35, 43587.909073750096, 3515.5227481468937, 0.49, 22.721632653061224, 35504.731329440605);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 40, 44054.34863348213, 3650.5321141690433, 0.49, 22.7665306122449, 35504.731329440605);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 41, 45930.231827182004, 3559.50795130264, 0.615, 44.328163265306124, 35802.98714467747);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 45, 34574.8166049157, 3196.0738386893254, 0.84, 10.573061224489797, 30750.339986910854);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 34177.95872448174, 3042.1317728159893, 0.525, 7.275102040816327, 30257.503233710973);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 51, 45456.6220610429, 3692.561283750316, 0.47, 36.17142857142857, 35895.99289124282);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 55, 41003.08643694299, 3574.472420569232, 0.495, 25.608979591836736, 31720.430939869533);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 60, 36047.65590713567, 2781.611489697728, 0.585, 16.573061224489795, 30073.861808141646);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 61, 47484.14646241958, 4949.908968435372, 0.515, 28.078367346938776, 35663.673614297164);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 65, 41905.0417098015, 3105.7235368671654, 0.515, 14.142857142857142, 35663.673614297164);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 70, 38789.35564132063, 2759.3961081849684, 0.495, 14.156734693877551, 34201.53634240339);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 71, 46315.71641033501, 2549.4345633486923, 0.48, 39.58857142857143, 38300.3923041085);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 75, 37415.61710778553, 2758.2122740581995, 0.725, 18.692244897959185, 33551.03025533726);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 80, 36236.085130805885, 3346.3639294917048, 0.515, 12.488163265306122, 32595.599000778213);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 81, 43892.578123352956, 2945.876277538064, 0.58, 42.161632653061226, 37006.77448052962);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 85, 39285.033151735624, 2209.233781522669, 0.73, 24.89061224489796, 32718.148711206686);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 90, 39135.99913551441, 2904.7097640798916, 0.535, 23.94938775510204, 32041.022671796814);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 91, 47893.39496958641, 3648.1267277867055, 0.505, 37.98530612244898, 38254.7735893564);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 95, 41505.50800294302, 3587.9125251907008, 0.795, 15.461224489795919, 34644.056522022365);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 40512.50280311053, 2062.5827633671124, 0.5, 13.695510204081632, 34644.056522022365);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 45328.79377126142, 2797.585363158373, 0.49, 29.951836734693877, 35796.48751156567);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 105, 39775.81004112108, 3360.715852857232, 0.705, 18.44816326530612, 32944.93017584398);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 110, 36052.580317109685, 2917.0011847298547, 0.705, 8.737142857142857, 32944.93017584398);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 111, 45348.15659324658, 3478.992000321718, 0.49, 30.33469387755102, 35150.33301377899);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 115, 39853.06244202158, 3680.5843846235143, 0.49, 12.446530612244898, 35150.33301377899);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 120, 40758.297071037145, 2377.4218975729636, 0.5, 19.186122448979592, 33709.41707174012);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 121, 48279.17902153411, 4046.2898662483412, 0.52, 34.842448979591836, 34547.04435901274);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 125, 38584.95213116461, 3043.115986078457, 0.64, 13.568979591836735, 32743.490388217313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 130, 37727.44021895265, 3711.0499442987266, 0.64, 11.774693877551021, 32743.490388217313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 131, 45768.96513147906, 3651.80808356751, 0.465, 39.546122448979595, 33523.53724422306);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 135, 40403.11567472202, 1588.9591338179828, 0.465, 19.391020408163264, 33523.53724422306);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 140, 39260.56321472326, 2973.6152902429644, 0.465, 21.433469387755103, 33523.53724422306);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 141, 46529.56173241889, 3696.644016182812, 0.64, 38.57632653061224, 39502.55986889941);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 145, 36714.10759034532, 2710.7477365343593, 0.635, 12.475102040816326, 32053.434309214248);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 35378.46061804695, 2372.2783732018424, 0.635, 8.453877551020408, 32053.434309214248);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 151, 45749.67019425343, 3124.1831483867936, 0.48, 28.78857142857143, 33340.88523524748);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 155, 37652.24695717511, 2552.635557003862, 0.48, 5.817142857142857, 33340.88523524748);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 160, 37854.14623517035, 2927.3249270136707, 0.48, 8.470204081632653, 33340.88523524748);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 161, 45751.20451146674, 2675.664249611808, 0.565, 32.031020408163265, 36371.26953110876);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 165, 43396.19662068851, 3775.284811206291, 0.565, 24.996734693877553, 36371.26953110876);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 170, 43038.9007199558, 3679.3639270499984, 0.565, 26.89142857142857, 36371.26953110876);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 171, 47587.10978174038, 3245.1337302857737, 0.59, 30.27673469387755, 38342.02223720127);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 175, 41722.2670830216, 2388.5865865272576, 0.63, 23.328979591836735, 34555.8757751348);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 180, 41453.50149809977, 2583.626910059655, 0.63, 19.6065306122449, 34555.8757751348);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 181, 49061.33817876219, 3646.1965943144055, 0.545, 36.68408163265306, 35129.81788668878);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 185, 41461.1579750956, 3939.1975322848434, 0.64, 12.586938775510204, 34316.40230806613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 190, 36963.63501426673, 2986.1051356946728, 0.64, 7.513469387755102, 34316.40230806613);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 191, 47957.650044515656, 3537.2071946938113, 0.48, 33.91918367346939, 34656.90247056494);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 195, 41292.026253215336, 2240.7133177672804, 0.48, 20.355102040816327, 34656.90247056494);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 39974.23962748341, 3068.159382134884, 0.575, 15.61061224489796, 34656.90247056494);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 44765.33833183654, 2903.612666220655, 0.545, 31.772244897959183, 35001.437398444235);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 205, 37061.732405907445, 3109.0805833632917, 0.64, 6.643265306122449, 34501.17494460976);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 210, 36226.38533671931, 2194.504234591478, 0.64, 5.310204081632653, 34501.17494460976);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 211, 47438.60495560146, 2993.184823674739, 0.475, 28.60326530612245, 39249.7645547237);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 215, 42151.00018882938, 3519.0552705757477, 0.78, 17.09795918367347, 35331.498607380316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 220, 41097.19403645607, 3670.929650974751, 0.78, 16.59673469387755, 35331.498607380316);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 221, 46644.05003572992, 3536.118715986947, 0.53, 28.175510204081633, 37831.75189632713);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 225, 38750.053127890256, 2895.4433743578325, 0.725, 13.280816326530612, 34499.464841596295);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 230, 37749.81372690524, 2377.390744232905, 0.495, 7.302040816326531, 34246.67911218506);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 231, 45473.597336273335, 3500.005656620367, 0.515, 23.54204081632653, 37888.91422488347);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 235, 38658.18083928252, 1915.1359588974178, 0.59, 10.128979591836735, 36857.049276080135);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 240, 39480.255694154555, 2754.5296873399366, 0.585, 10.573877551020407, 36234.37853325834);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 241, 46999.146378458965, 3147.8053397971576, 0.475, 32.82530612244898, 36720.82281280558);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 245, 41054.73206384325, 3148.0831723524298, 0.495, 20.14204081632653, 36313.993952908204);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 39480.342266728214, 3006.2019856311827, 0.495, 16.358367346938774, 36313.993952908204);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 251, 45033.208431812694, 2501.69944857895, 0.465, 37.3665306122449, 38612.005683733856);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 255, 38667.71630469939, 3293.7051483151918, 0.7, 7.019591836734694, 35127.14918272044);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 260, 37154.97822368317, 1666.1002514841916, 0.7, 6.496326530612245, 35127.14918272044);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 261, 46054.27427314896, 4135.457197938425, 0.47, 28.423673469387754, 35322.473940031574);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 265, 36081.50512828278, 2497.773361745146, 0.75, 7.69469387755102, 33303.27761750593);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 270, 35953.90687816982, 2149.773610171245, 0.75, 6.664489795918367, 33303.27761750593);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 271, 44361.177825440456, 2720.7101289575044, 0.49, 21.165714285714287, 38425.3608717503);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 275, 37869.76694620309, 2489.435614729413, 0.69, 4.871836734693877, 35376.91737873964);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 280, 37322.54049374583, 1848.5031784931975, 0.69, 4.017142857142857, 35376.91737873964);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 281, 47026.582668926065, 2641.8792298899243, 0.485, 22.04734693877551, 39646.79197833352);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 285, 43889.39981172836, 1938.2359783767888, 0.485, 12.755102040816327, 39646.79197833352);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 290, 42414.4389492941, 3305.496132138714, 0.605, 22.85795918367347, 34037.86678853161);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 291, 46091.65175483513, 2842.0942746073483, 0.685, 32.73061224489796, 38254.44144317468);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 295, 41617.45926949922, 3092.796223125284, 0.575, 12.285714285714286, 36267.14969844334);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 40281.95617091351, 2705.5207011529064, 0.495, 9.946122448979592, 35689.56711116803);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 46407.93215216635, 2674.7489586019765, 0.475, 23.738775510204082, 37082.77433838182);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 305, 38259.10865753507, 2529.1765699143903, 0.565, 8.076734693877551, 35449.10133182104);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 310, 37607.33969307299, 2677.5076847049313, 0.565, 3.9526530612244897, 35449.10133182104);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 311, 45752.12131744534, 3143.850587684512, 0.465, 27.229387755102042, 35465.94857231263);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 315, 37246.83467558494, 2490.9141235285742, 0.7, 9.768163265306123, 35126.83750603321);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 320, 36715.87715958364, 1589.5312483440287, 0.7, 8.662040816326531, 35126.83750603321);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 321, 42782.25238869589, 2191.880286770859, 0.485, 23.13714285714286, 37112.265873654425);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 325, 38892.667108869384, 1989.6010152047736, 0.52, 7.2122448979591836, 36368.14119336802);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 330, 39505.042770257176, 2432.149630341498, 0.52, 7.462857142857143, 36368.14119336802);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 331, 45568.044603048154, 3244.023880388179, 0.48, 20.220408163265308, 36628.58953475274);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 335, 38042.47497998241, 3384.8894150983433, 0.735, 6.188571428571429, 35158.672392795204);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 340, 36998.59124391999, 2548.2266921138744, 0.735, 4.070204081632653, 35158.672392795204);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 341, 44046.290257084875, 3213.696579507021, 0.46, 25.558367346938777, 36156.923401646854);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 345, 37008.62089611544, 1764.3855926524213, 0.605, 6.083265306122449, 35489.0821438896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 37549.987311349076, 2903.666683024109, 0.605, 5.932244897959183, 35489.0821438896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 351, 43113.02696759027, 3259.1428601080493, 0.475, 21.099591836734692, 36551.028803930036);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 355, 38614.80226723311, 2419.460624797229, 0.475, 5.564081632653061, 36551.028803930036);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 360, 38327.8572321553, 2870.026287924523, 0.5, 4.533061224489796, 35225.430046206675);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 361, 43410.683423929724, 2030.815040619541, 0.595, 24.438367346938776, 37221.1290976737);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 365, 39876.10800073824, 2365.098759632893, 0.59, 8.695510204081632, 35751.979793588966);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 370, 38593.26014224873, 2351.0889361219483, 0.59, 8.78204081632653, 35751.979793588966);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 371, 45905.930273215876, 2609.5788384451103, 0.475, 21.16734693877551, 38036.75761045492);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 375, 39952.767322558, 3299.3839629952668, 0.585, 10.018775510204081, 35973.23312461987);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 380, 40980.50818183425, 2753.7325075453673, 0.585, 6.8677551020408165, 35973.23312461987);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 381, 45927.140299680636, 2103.7947853364417, 0.445, 25.25877551020408, 39108.6097148986);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 385, 40024.22310504475, 906.405023277521, 0.695, 9.21795918367347, 37176.190996794205);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 390, 37488.751624450204, 940.8914393031534, 0.485, 1.980408163265306, 37151.55976175039);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 391, 43186.47286284322, 2638.8133292221814, 0.49, 20.375510204081632, 35571.15899615846);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 395, 37701.59929433732, 1829.8501205037937, 0.49, 5.865306122448979, 35571.15899615846);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 39198.763465773365, 2425.7209157474877, 0.52, 7.378775510204082, 35571.15899615846);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 43289.980019374154, 1863.7586029831778, 0.51, 21.223673469387755, 38283.206152136445);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 405, 39688.36380726841, 1869.0444991602976, 0.565, 8.044897959183674, 36195.981103557795);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 410, 36883.32526242181, 1346.2033501279689, 0.565, 2.5983673469387756, 36195.981103557795);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 411, 42722.597898351065, 1610.6837729888503, 0.48, 20.693877551020407, 37781.23307660733);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 415, 37854.772451341065, 2405.0167550810565, 0.635, 11.675918367346938, 34720.03903195968);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 420, 35325.73109866113, 2532.443620937593, 0.615, 2.876734693877551, 33736.332756639844);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 421, 41316.495080251036, 2434.5295567033663, 0.485, 16.053061224489795, 36628.48007508386);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 425, 38956.20386138495, 1952.4305066333784, 0.485, 7.364081632653061, 36628.48007508386);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 430, 36915.981565275186, 2235.546093828173, 0.515, 2.9820408163265304, 35781.340441517445);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 431, 42133.307195494825, 2323.5618295484946, 0.47, 15.742040816326531, 35527.43425151269);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 435, 37468.55610568352, 2182.935226740652, 0.64, 4.394285714285714, 35148.06974449793);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 440, 37501.688307479766, 2324.450596900592, 0.49, 4.368163265306123, 34894.765713349516);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 441, 43725.534030286326, 2801.071693247922, 0.505, 19.648979591836735, 36906.847227357815);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 445, 38086.043723480194, 3526.255903900029, 0.68, 4.213877551020408, 35284.34314381641);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 37876.030093250425, 3422.4738563739124, 0.68, 3.760816326530612, 35284.34314381641);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 451, 42544.15964065132, 2310.1432281583943, 0.465, 23.760816326530612, 35249.45472946065);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 455, 37147.36985740294, 2767.579696248309, 0.465, 7.2457142857142856, 35249.45472946065);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 460, 36656.47932937736, 1378.549443888452, 0.465, 6.2661224489795915, 35249.45472946065);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 461, 41793.13086316506, 2032.4876329893739, 0.47, 25.328163265306124, 34688.48629590089);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 465, 35082.846772649675, 1604.8934542504758, 0.675, 1.6710204081632654, 34457.541712619895);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 470, 34702.83880914838, 806.6118610109703, 0.675, 1.1346938775510205, 34457.541712619895);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 471, 43516.92313188604, 2120.484776568993, 0.48, 20.455510204081634, 37119.76307962979);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 475, 41221.8630027464, 2312.8034223631053, 0.48, 9.859591836734694, 37119.76307962979);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 480, 40940.995367450945, 2500.320195749529, 0.48, 10.437551020408163, 37119.76307962979);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 481, 42658.13276669517, 1786.429122072801, 0.49, 20.477551020408164, 36407.16842214363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 485, 38965.00735434779, 2485.661895305621, 0.49, 7.444081632653061, 36407.16842214363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 490, 38449.44868707748, 1867.6583864034997, 0.49, 7.628571428571429, 36407.16842214363);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 491, 44336.99274556636, 2027.7358658150836, 0.485, 20.04, 37873.529130735566);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 495, 38862.77002661915, 1945.7810240961173, 0.485, 2.6840816326530614, 37873.529130735566);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 38492.018114548286, 1664.818093011378, 0.495, 1.2579591836734694, 37873.529130735566);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 45043.3972293079, 2167.706375782276, 0.49, 13.517551020408163, 37939.57463475536);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 505, 38845.435681509174, 2773.1594820116684, 0.685, 1.8008163265306123, 36609.981383123806);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 510, 38892.84432205361, 2896.44306483747, 0.685, 3.0628571428571427, 36609.981383123806);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 511, 43267.88621629712, 1880.7766112729905, 0.485, 17.75591836734694, 38133.624323333264);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 515, 39748.0140510949, 2297.8780395619833, 0.485, 4.508571428571429, 38133.624323333264);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 520, 39701.76440390179, 2340.901105489414, 0.6, 5.016326530612245, 36042.51210738254);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 521, 44969.49714136598, 2451.3081832794346, 0.485, 18.35918367346939, 37163.02576096418);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 525, 37982.859353424494, 1526.2111665579494, 0.485, 2.5828571428571427, 37163.02576096418);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 530, 38227.99279632275, 1659.2510118895827, 0.505, 3.330612244897959, 36989.41734491771);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 531, 41043.10851974501, 1817.7882896875917, 0.485, 7.641632653061224, 35842.07236107802);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 535, 37468.076578060325, 2803.8958131913323, 0.525, 3.150204081632653, 35663.81259181154);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 540, 36386.09348770123, 1461.3307477043152, 0.525, 1.7069387755102041, 35663.81259181154);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 541, 43948.1861523272, 2507.8684244018364, 0.495, 12.993469387755102, 36602.02185170659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 545, 38962.437133661486, 2538.133607531799, 0.495, 3.613877551020408, 36602.02185170659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 38814.12224395225, 2760.6949166115273, 0.495, 2.8644897959183675, 36602.02185170659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 551, 44918.59185249983, 2515.546129483834, 0.49, 15.489795918367347, 38477.36382872754);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 555, 38010.90009077694, 1872.498769657086, 0.645, 1.136326530612245, 37321.63896425346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 560, 37954.12401443984, 1590.336810632574, 0.645, 1.473469387755102, 37321.63896425346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 561, 42902.7835013597, 2275.775681226401, 0.48, 15.586938775510204, 38840.02446115947);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 565, 38016.158642355695, 1857.9659292495928, 0.55, 2.464489795918367, 36683.96764388628);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 570, 39658.247400247885, 2105.1459016885865, 0.495, 5.501224489795918, 36405.19443484211);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 571, 44719.35122654109, 2388.621402186848, 0.495, 12.383673469387755, 38829.0350274467);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 575, 39538.22727914767, 3670.4430398778363, 0.635, 3.5208163265306123, 37077.264687487004);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 580, 38756.10113092263, 3125.8786069180023, 0.635, 2.6653061224489796, 37077.264687487004);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 581, 44385.94043764884, 4122.806315746249, 0.48, 13.160816326530613, 36420.67991644261);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 585, 37478.78589484559, 2533.5002861698295, 0.48, 2.6416326530612246, 36420.67991644261);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 590, 38169.04322573349, 2816.4023553058505, 0.48, 3.0873469387755104, 36420.67991644261);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 591, 45807.308396657194, 2293.7230750237936, 0.485, 11.30938775510204, 38575.56917909642);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 595, 39044.30935655083, 847.3330134656533, 0.585, 2.233469387755102, 37694.55902273375);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 37870.09032112266, 603.3471994692773, 0.495, 0.7485714285714286, 37694.55902273375);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 44184.126740712, 2350.6754669963234, 0.49, 16.26938775510204, 37154.12117841422);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 605, 38605.21728635018, 2023.425374175368, 0.49, 5.179591836734694, 37154.12117841422);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 610, 38534.920445376316, 2250.4101901357435, 0.49, 3.7183673469387757, 37154.12117841422);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 611, 43715.092061544914, 2375.328262708375, 0.485, 17.505306122448978, 38109.28993104343);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 615, 39747.15932127266, 2711.8349799497296, 0.485, 4.100408163265306, 38109.28993104343);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 620, 40568.371859829385, 2685.4634991186545, 0.485, 4.915918367346939, 38109.28993104343);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 621, 44358.8336575485, 2548.04654480297, 0.48, 14.466122448979592, 38436.95844116525);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 625, 38487.41270038849, 1002.9608736970725, 0.605, 1.556734693877551, 37792.635933198646);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 630, 38288.21260516257, 727.869269157439, 0.605, 2.1020408163265305, 37792.635933198646);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 631, 41756.17146540459, 2486.4088629778676, 0.47, 11.448979591836734, 37610.66011962589);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 635, 40378.08615250912, 3508.365928440127, 0.525, 7.926530612244898, 37416.26566642282);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 640, 40036.23217625233, 2971.4898298155404, 0.525, 5.604081632653061, 37416.26566642282);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 641, 44070.32520815432, 2689.2119295996163, 0.485, 11.363265306122448, 38468.13576755749);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 645, 40658.81111548842, 2970.324864610521, 0.485, 3.5093877551020407, 38468.13576755749);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 40777.71981460718, 2353.4357532383515, 0.485, 5.508571428571429, 38468.13576755749);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 651, 44590.288185195124, 2721.4064800281817, 0.49, 12.97795918367347, 38372.213613228836);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 655, 39414.767228725046, 1742.6441613980787, 0.49, 2.873469387755102, 38372.213613228836);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 660, 39922.908743986205, 2422.4988269099827, 0.49, 4.999183673469388, 38372.213613228836);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 661, 44556.58881495108, 3246.8357627994237, 0.49, 9.956734693877552, 39099.05551448036);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 665, 43341.44495457634, 4142.367469017518, 0.53, 4.598367346938775, 38565.04491526711);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 670, 39999.74401933546, 2721.9111621643083, 0.53, 3.016326530612245, 38565.04491526711);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 671, 44115.24486728531, 2112.9991935581256, 0.485, 14.245714285714286, 40043.72960676294);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 675, 43896.499958629785, 4288.752587976794, 0.52, 8.79265306122449, 39505.44627468444);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 680, 40052.10637608031, 1008.7290161520776, 0.52, 2.0808163265306123, 39505.44627468444);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 681, 44221.07288266266, 1489.1022472858133, 0.48, 11.639183673469388, 39983.06442563596);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 685, 40367.65391542475, 1546.8687290355238, 0.58, 2.4685714285714284, 39712.750952393086);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 690, 39615.27810812502, 2244.324890090645, 0.49, 1.5297959183673469, 38538.51369970374);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 691, 41275.20574564589, 1583.5808439962807, 0.5, 8.129795918367346, 38692.525787371414);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 695, 38997.31148986965, 1222.8879278779434, 0.5, 1.4212244897959183, 38692.525787371414);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 38867.0015777467, 2025.916595870945, 0.49, 1.9648979591836735, 37979.24814315886);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 42191.66824511877, 1464.1119672572268, 0.49, 9.617142857142857, 38257.210817998566);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 705, 38135.56053558262, 1648.1885851209986, 0.525, 0.7526530612244898, 37646.05519387889);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 710, 37860.284648833054, 1248.5633506621637, 0.525, 0.24, 37646.05519387889);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 711, 41196.39007063219, 1572.606624087245, 0.48, 9.622857142857143, 38489.89366725949);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 715, 38627.095948479604, 1449.1052828607715, 0.565, 0.9420408163265306, 38186.945870975855);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 720, 38727.87441684537, 1533.5629218292781, 0.565, 1.56, 38186.945870975855);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 721, 44328.81980026988, 2707.8882448786226, 0.485, 6.0653061224489795, 39528.809783098346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 725, 40336.937692000305, 1320.6381217545681, 0.485, 3.266938775510204, 39528.809783098346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 730, 40401.39453680257, 1775.1407285896007, 0.485, 3.0914285714285716, 39528.809783098346);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 731, 43073.77294983928, 1623.170269664245, 0.49, 8.106122448979592, 37849.69110110504);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 735, 38460.10897175334, 1910.9091468147249, 0.49, 0.7477551020408163, 37849.69110110504);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 740, 38997.999912459694, 2554.9941403913317, 0.49, 1.409795918367347, 37849.69110110504);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 741, 43959.91750019568, 2344.606184589338, 0.49, 9.594285714285714, 38352.61309919952);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 745, 40345.44410423046, 2710.9400685987966, 0.49, 3.8269387755102042, 38352.61309919952);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 39521.78426807621, 2484.989206044788, 0.49, 1.893061224489796, 38352.61309919952);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 751, 41388.90321929332, 2137.009261296873, 0.485, 7.495510204081633, 37708.27001054326);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 755, 39521.17948641805, 2810.915301765705, 0.485, 2.089795918367347, 37708.27001054326);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 760, 40085.2807678204, 3036.7145808877185, 0.485, 2.463673469387755, 37708.27001054326);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 761, 43809.73832948186, 2859.321375971665, 0.495, 4.3428571428571425, 38356.80372870505);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 765, 38997.66282956905, 1655.410550665002, 0.495, 1.310204081632653, 38356.80372870505);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 770, 39229.29107826648, 1955.261975040221, 0.495, 1.9338775510204083, 38356.80372870505);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 771, 41450.756975892116, 1123.072215822765, 0.485, 6.475102040816327, 39149.14023615628);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 775, 40232.33178187763, 1621.2404890017276, 0.485, 4.173877551020408, 39149.14023615628);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 780, 40046.11507570236, 1750.0492276750115, 0.485, 3.537142857142857, 39081.2316702308);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 781, 43102.953134008356, 2213.378304472025, 0.485, 7.728979591836735, 38527.14405158626);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 785, 41486.1951973651, 2733.6311710904615, 0.485, 4.16, 38527.14405158626);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 790, 41722.01059562285, 3017.3854272284216, 0.485, 3.7485714285714287, 38527.14405158626);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 791, 42301.35856313898, 2311.373399742344, 0.485, 7.788571428571428, 38520.2950595769);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 795, 39136.57287358866, 1224.5084570153376, 0.485, 1.2946938775510204, 38520.2950595769);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 39370.54783946129, 1542.8136540295884, 0.495, 1.3910204081632653, 38520.2950595769);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 42089.55296058964, 1484.5374239629211, 0.485, 4.0685714285714285, 39609.81114265293);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 805, 40131.28766516028, 1803.7414406049202, 0.515, 1.3877551020408163, 39551.944121306195);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 810, 40294.09130327953, 2035.278598219474, 0.515, 1.3583673469387756, 39551.944121306195);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 811, 40751.93331572703, 1046.6502170710287, 0.485, 3.697142857142857, 38493.69441981992);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 815, 38963.067427725684, 808.8726434502021, 0.485, 1.8155102040816327, 38493.69441981992);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 820, 39113.40952877867, 1078.460331305573, 0.485, 2.1183673469387756, 38493.69441981992);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 821, 40736.20210531293, 1412.4829463580493, 0.485, 7.474285714285714, 38636.55474814238);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 825, 38505.34547817236, 1046.6579900071063, 0.54, 2.257142857142857, 38084.37952429755);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 830, 38871.00306748052, 1223.659152772201, 0.54, 4.16734693877551, 38084.37952429755);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 831, 40680.23379697869, 1568.823392372601, 0.49, 4.884081632653062, 38767.20751801705);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 835, 39040.78000758662, 889.0855455049111, 0.49, 0.7175510204081633, 38767.20751801705);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 840, 38913.841741240816, 643.0984548811414, 0.49, 0.5453061224489796, 38767.20751801705);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 841, 42202.7473216648, 663.6595347376309, 0.485, 4.036734693877551, 39252.5528316791);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 845, 39615.62012486645, 905.2670026377713, 0.485, 1.7526530612244897, 39252.5528316791);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 39933.87097835591, 1344.6535969757326, 0.485, 1.493877551020408, 39252.5528316791);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 851, 40345.17181545092, 782.5357601348378, 0.49, 5.253877551020408, 39346.04766102236);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 855, 39493.191969888445, 570.0532933477446, 0.49, 0.8497959183673469, 39346.04766102236);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 860, 39535.44857132803, 792.7216261032592, 0.49, 0.6293877551020408, 39346.04766102236);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 861, 42869.996965599305, 1915.1684158062362, 0.475, 5.778775510204081, 38365.5625928852);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 865, 38738.42188393555, 864.6394669578902, 0.475, 1.136326530612245, 38365.5625928852);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 870, 38520.94316262771, 633.1212730428051, 0.475, 0.4685714285714286, 38365.5625928852);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 871, 39755.71161566786, 395.01289720666574, 0.485, 2.826122448979592, 38728.37120159729);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 875, 38728.37120159733, 3.67491354901071E-11, 0.485, 0.0, 38728.37120159729);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 880, 38728.37120159733, 3.67491354901071E-11, 0.485, 0.0, 38728.37120159729);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 881, 39439.93694817405, 2384.5099724700867, 0.495, 1.6048979591836734, 38071.13898717485);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 885, 38562.03794515456, 1691.5915595226188, 0.495, 0.5012244897959184, 38071.13898717485);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 890, 38764.57094043067, 1913.9329716848947, 0.495, 0.7118367346938775, 38071.13898717485);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 891, 39910.90216010893, 141.00458313963563, 0.485, 0.27755102040816326, 39421.35681778807);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 895, 39935.05054914037, 385.3987359487173, 0.485, 0.2783673469387755, 39421.35681778807);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 39780.14402898229, 313.20293264155606, 0.49, 0.6604081632653062, 39421.35681778807);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 40271.7132595218, 78.52671058890898, 0.48, 0.8212244897959183, 40251.96558854941);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 905, 40251.96558854939, 1.469965419604284E-11, 0.48, 0.0, 40251.96558854941);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 910, 40251.96558854939, 1.469965419604284E-11, 0.48, 0.0, 40251.96558854941);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 911, 38955.19655560819, 2.204948129406426E-11, 0.485, 0.0, 38955.196555608214);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 915, 38955.19655560819, 2.204948129406426E-11, 0.485, 0.0, 38955.196555608214);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 920, 38955.19655560819, 2.204948129406426E-11, 0.485, 0.0, 38955.196555608214);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 921, 41548.54123130408, 665.2714523417493, 0.485, 0.35183673469387755, 40873.50525331715);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 925, 40392.78943448663, 151.40299770826488, 0.49, 0.3004081632653061, 40348.591844191586);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 930, 40405.83406389886, 156.58643673119528, 0.49, 0.6465306122448979, 40348.591844191586);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 931, 41712.74600734959, 19.222561529943555, 0.48, 0.23020408163265307, 41637.42561056839);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 935, 41637.42561056838, 7.34982709802142E-12, 0.48, 0.0, 41637.42561056839);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 940, 41637.42561056838, 7.34982709802142E-12, 0.48, 0.0, 41637.42561056839);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 941, 39866.9486211387, 0.0, 0.49, 0.0, 39866.9486211387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 945, 39890.625580446795, 167.4213848463457, 0.49, 0.08, 39866.9486211387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 39914.3025397549, 234.34112280210206, 0.49, 0.156734693877551, 39866.9486211387);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 951, 40335.47733340663, 3.67491354901071E-11, 0.49, 0.0, 40335.47733340659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 955, 40335.47733340663, 3.67491354901071E-11, 0.49, 0.0, 40335.47733340659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 960, 40335.47733340663, 3.67491354901071E-11, 0.49, 0.0, 40335.47733340659);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 961, 39766.17254852963, 5.144878968614994E-11, 0.485, 0.0, 39766.172548529576);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 965, 39766.17254852963, 5.144878968614994E-11, 0.485, 0.0, 39766.172548529576);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 970, 39766.17254852963, 5.144878968614994E-11, 0.485, 0.0, 39766.172548529576);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 971, 41652.440410285715, 7.34982709802142E-12, 0.485, 0.0, 41652.44041028571);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 975, 41652.440410285715, 7.34982709802142E-12, 0.485, 0.0, 41652.44041028571);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 980, 41652.440410285715, 7.34982709802142E-12, 0.485, 0.0, 41652.44041028571);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 981, 42201.183154595295, 2.204948129406426E-11, 0.485, 0.0, 42201.183154595274);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 985, 42201.183154595295, 2.204948129406426E-11, 0.485, 0.0, 42201.183154595274);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 990, 42201.183154595295, 2.204948129406426E-11, 0.485, 0.0, 42201.183154595274);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 991, 42278.59636982619, 2.939930839208568E-11, 0.485, 0.0, 42278.59636982616);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 995, 42278.59636982619, 2.939930839208568E-11, 0.485, 0.0, 42278.59636982616);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 42278.59636982619, 2.939930839208568E-11, 0.485, 0.0, 42278.59636982616);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 9, 83, 93, 69, 62, 48, 89, 18, 74, 91, 41, 30, 79, 88, 7, 55, 96, 25, 65, 64, 3, 87, 21, 15, 52, 78, 17, 23, 37, 98, 35, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 56, 8, 6, 50, 86, 82, 33, 54, 34, 85, 26, 11, 19, 28, 45, 42, 2, 13, 99, 70, 40, 47, 38, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 57, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 48, 62, 89, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 3, 25, 64, 65, 52, 78, 87, 21, 15, 69, 93, 17, 98, 37, 35, 23, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 61, 6, 8, 56, 19, 11, 85, 26, 34, 54, 82, 33, 45, 42, 2, 28, 13, 99, 70, 40, 47, 29, 95, 77, 51, 4, 36, 32, 12, 75, 94, 81, 43, 1, 72, 49, 67, 84, 38, 68, 63, 53, 39, 24, 80, 60, 86, 50, 57, 66, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 48, 62, 89, 78, 17, 23, 98, 37, 35, 83, 9, 71, 73, 58, 20, 14, 10, 16, 31, 46, 44, 90, 97, 22, 76, 59, 61, 85, 11, 26, 34, 19, 6, 8, 56, 86, 50, 60, 24, 80, 49, 43, 63, 68, 66, 57, 82, 54, 33, 28, 45, 2, 42, 13, 47, 77, 95, 51, 36, 4, 32, 12, 75, 94, 81, 72, 67, 84, 29, 99, 70, 40, 38, 1, 53, 39, 30, 79, 55, 96, 3, 64, 25, 65, 93, 69, 21, 87, 15, 52, 18, 74, 91, 7, 88, 41, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 78, 23, 37, 98, 35, 16, 14, 10, 58, 73, 20, 71, 9, 83, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 41, 30, 79, 88, 91, 7, 46, 27, 92, 57, 66, 6, 56, 8, 11, 19, 85, 34, 26, 54, 82, 33, 28, 42, 45, 2, 13, 99, 40, 70, 47, 51, 77, 95, 29, 67, 84, 72, 43, 1, 53, 39, 63, 68, 49, 81, 94, 12, 32, 75, 36, 4, 50, 60, 24, 80, 22, 90, 97, 31, 44, 59, 61, 76, 86, 38, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 73, 20, 71, 83, 9, 35, 37, 98, 58, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 26, 85, 34, 56, 11, 19, 8, 6, 50, 86, 80, 24, 60, 67, 84, 49, 43, 72, 68, 63, 53, 39, 1, 81, 94, 12, 32, 75, 4, 36, 77, 95, 29, 51, 99, 40, 70, 47, 13, 28, 2, 42, 45, 33, 54, 82, 38, 66, 57, 92, 27, 46, 23, 78, 52, 87, 15, 21, 69, 93, 25, 64, 65, 3, 18, 96, 74, 41, 88, 30, 79, 55, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 91, 7, 41, 79, 30, 88, 66, 92, 27, 57, 68, 43, 1, 81, 94, 12, 75, 32, 4, 36, 77, 51, 95, 29, 28, 45, 2, 13, 40, 70, 99, 47, 33, 54, 82, 11, 42, 38, 49, 84, 67, 72, 39, 53, 63, 24, 80, 60, 50, 86, 8, 6, 56, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 10, 16, 14, 31, 20, 73, 58, 71, 9, 83, 35, 98, 23, 37, 78, 52, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 69, 64, 3, 96, 91, 74, 55, 88, 30, 79, 41, 92, 27, 57, 60, 50, 86, 8, 56, 6, 11, 19, 85, 26, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 37, 98, 23, 93, 78, 18, 52, 65, 25, 66, 80, 24, 68, 43, 1, 53, 39, 63, 72, 49, 84, 67, 38, 95, 77, 51, 4, 36, 75, 12, 32, 94, 81, 42, 28, 45, 2, 70, 40, 99, 47, 13, 29, 82, 54, 33, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 69, 93, 78, 23, 37, 35, 98, 58, 73, 20, 9, 83, 25, 65, 64, 3, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 71, 10, 14, 16, 31, 90, 97, 22, 44, 92, 27, 57, 60, 24, 80, 50, 86, 8, 56, 6, 11, 19, 76, 59, 61, 34, 26, 85, 54, 82, 33, 45, 2, 28, 29, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 46, 84, 67, 38, 47, 70, 40, 99, 13, 42, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 73, 58, 14, 16, 10, 44, 90, 97, 22, 59, 76, 61, 34, 85, 26, 11, 19, 82, 54, 33, 45, 28, 29, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 49, 43, 72, 1, 53, 39, 63, 68, 24, 80, 27, 92, 66, 57, 56, 6, 8, 86, 60, 50, 84, 67, 38, 47, 99, 40, 70, 2, 42, 13, 46, 31, 78, 23, 37, 35, 98, 25, 69, 52, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 58, 20, 73, 10, 16, 14, 31, 44, 97, 90, 22, 61, 59, 76, 19, 34, 26, 85, 11, 6, 86, 56, 8, 50, 60, 24, 80, 84, 67, 49, 72, 43, 1, 53, 39, 63, 68, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 28, 33, 54, 82, 2, 42, 45, 57, 66, 27, 92, 46, 37, 98, 23, 35, 78, 18, 91, 74, 96, 3, 64, 65, 52, 69, 25, 55, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 44, 90, 97, 22, 60, 50, 24, 80, 82, 54, 33, 28, 45, 2, 42, 13, 99, 40, 70, 47, 51, 77, 4, 36, 38, 95, 29, 84, 68, 72, 43, 1, 39, 53, 63, 67, 49, 75, 32, 12, 94, 81, 86, 56, 6, 8, 19, 11, 85, 26, 34, 61, 59, 76, 57, 92, 27, 66, 91, 88, 30, 79, 41, 7, 55, 74, 96, 25, 64, 65, 69, 52, 18, 3, 78, 23, 37, 35, 98, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 35, 98, 37, 23, 78, 52, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 66, 92, 27, 46, 31, 14, 16, 10, 90, 97, 44, 22, 59, 76, 34, 61, 26, 85, 6, 8, 56, 19, 11, 82, 54, 33, 45, 42, 28, 2, 99, 70, 40, 95, 77, 51, 36, 4, 81, 12, 32, 75, 94, 68, 43, 72, 49, 63, 39, 53, 1, 24, 80, 67, 84, 29, 38, 47, 13, 50, 86, 60, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 35, 98, 23, 37, 78, 52, 69, 65, 25, 64, 3, 96, 18, 74, 91, 55, 41, 79, 88, 30, 7, 66, 27, 92, 57, 60, 80, 24, 50, 86, 8, 19, 34, 85, 26, 11, 56, 6, 82, 54, 33, 28, 13, 42, 2, 45, 29, 38, 4, 36, 51, 47, 99, 70, 40, 95, 77, 43, 49, 72, 81, 75, 12, 32, 94, 1, 53, 39, 63, 68, 67, 84, 76, 59, 61, 22, 44, 90, 97, 31, 10, 14, 16, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 10, 16, 14, 31, 44, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 8, 6, 54, 82, 33, 28, 2, 45, 42, 13, 99, 40, 70, 47, 51, 77, 95, 29, 38, 4, 36, 12, 32, 94, 81, 75, 67, 84, 43, 49, 72, 39, 63, 68, 53, 1, 30, 7, 91, 18, 74, 3, 96, 55, 41, 79, 88, 25, 64, 65, 69, 78, 52, 37, 23, 35, 98, 76, 59, 61, 85, 34, 11, 26, 19, 56, 90, 97, 22, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 10, 31, 97, 90, 22, 44, 59, 76, 61, 85, 34, 19, 26, 11, 56, 8, 6, 33, 54, 82, 45, 42, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 75, 12, 32, 94, 81, 38, 29, 67, 84, 24, 68, 63, 39, 53, 1, 43, 72, 49, 80, 50, 86, 60, 57, 66, 27, 92, 46, 14, 23, 35, 98, 37, 78, 69, 52, 18, 64, 25, 65, 3, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 90, 22, 44, 76, 57, 66, 27, 92, 60, 24, 80, 50, 86, 8, 6, 56, 11, 54, 82, 45, 42, 2, 28, 13, 70, 40, 99, 47, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 49, 1, 43, 63, 39, 53, 68, 72, 67, 84, 38, 29, 33, 34, 85, 26, 19, 61, 59, 97, 46, 37, 98, 23, 35, 69, 78, 52, 18, 25, 64, 65, 3, 74, 96, 30, 79, 88, 41, 55, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 31, 22, 97, 44, 90, 35, 98, 37, 23, 69, 52, 78, 18, 25, 65, 64, 3, 96, 74, 91, 7, 55, 88, 41, 79, 30, 27, 92, 57, 60, 24, 80, 50, 86, 8, 6, 56, 11, 26, 85, 34, 19, 61, 59, 76, 82, 54, 33, 28, 13, 70, 40, 99, 47, 77, 51, 4, 36, 45, 42, 2, 84, 38, 29, 95, 12, 32, 75, 94, 81, 39, 53, 1, 43, 72, 67, 49, 68, 63, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 22, 76, 59, 61, 19, 56, 11, 26, 34, 85, 54, 82, 6, 8, 86, 50, 60, 24, 80, 72, 49, 84, 67, 28, 2, 42, 33, 45, 13, 47, 40, 99, 70, 51, 77, 95, 29, 38, 36, 4, 32, 75, 12, 94, 81, 43, 1, 63, 39, 53, 68, 57, 27, 92, 66, 79, 30, 41, 88, 55, 96, 18, 74, 25, 3, 65, 64, 78, 52, 69, 98, 37, 23, 35, 31, 44, 97, 46, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 76, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 63, 39, 1, 49, 72, 68, 53, 43, 81, 94, 12, 32, 75, 4, 36, 95, 51, 77, 38, 67, 84, 29, 99, 40, 70, 47, 13, 45, 2, 42, 28, 33, 82, 54, 6, 56, 11, 26, 34, 85, 19, 61, 59, 22, 97, 31, 46, 98, 35, 37, 23, 69, 52, 78, 18, 74, 96, 3, 64, 65, 25, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 31, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 18, 69, 25, 64, 65, 3, 78, 23, 37, 35, 98, 22, 97, 76, 59, 61, 85, 26, 34, 19, 11, 82, 54, 33, 6, 8, 56, 86, 50, 57, 60, 80, 24, 68, 43, 72, 49, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 29, 38, 40, 70, 99, 47, 13, 28, 45, 2, 42, 84, 67, 1, 63, 39, 53, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 66, 27, 92, 57, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 81, 94, 12, 75, 32, 36, 4, 95, 51, 77, 29, 38, 47, 40, 99, 70, 42, 45, 54, 82, 11, 19, 56, 86, 50, 8, 6, 26, 85, 34, 59, 76, 61, 33, 28, 13, 2, 84, 67, 79, 55, 96, 74, 52, 18, 65, 64, 3, 78, 23, 37, 35, 98, 69, 25, 88, 30, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 7, 41, 88, 30, 79, 55, 74, 52, 69, 65, 64, 25, 96, 3, 18, 23, 37, 35, 98, 78, 66, 57, 60, 80, 24, 50, 86, 6, 56, 54, 82, 33, 2, 42, 45, 28, 85, 34, 76, 59, 61, 19, 26, 11, 8, 67, 84, 72, 68, 63, 53, 39, 1, 43, 49, 38, 29, 13, 40, 99, 70, 47, 51, 95, 4, 36, 77, 75, 32, 12, 94, 81, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 7, 79, 30, 88, 41, 74, 96, 64, 65, 69, 23, 35, 98, 37, 78, 52, 18, 3, 55, 25, 57, 92, 27, 66, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 72, 43, 49, 67, 84, 29, 95, 51, 77, 38, 4, 36, 12, 32, 75, 81, 94, 47, 28, 2, 42, 70, 40, 99, 13, 45, 33, 54, 82, 6, 8, 56, 19, 11, 85, 26, 34, 61, 59, 76, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 57, 50, 86, 60, 80, 24, 68, 49, 72, 1, 43, 63, 39, 53, 66, 27, 92, 59, 61, 76, 19, 6, 8, 56, 33, 82, 54, 11, 34, 85, 26, 40, 70, 99, 47, 28, 2, 45, 42, 13, 51, 77, 95, 38, 4, 36, 12, 75, 32, 94, 81, 84, 67, 29, 35, 98, 37, 23, 78, 52, 69, 25, 65, 64, 3, 96, 41, 88, 30, 79, 55, 18, 74, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 79, 30, 88, 41, 7, 74, 96, 64, 25, 65, 37, 98, 35, 23, 78, 52, 69, 3, 18, 61, 26, 85, 19, 6, 8, 56, 86, 50, 24, 80, 68, 39, 53, 63, 1, 43, 49, 72, 84, 67, 29, 47, 99, 2, 45, 42, 13, 70, 40, 51, 77, 95, 38, 36, 4, 12, 75, 32, 94, 81, 28, 33, 82, 54, 11, 34, 59, 76, 60, 57, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 69, 25, 65, 64, 3, 74, 96, 18, 52, 78, 23, 37, 35, 98, 41, 79, 30, 88, 7, 66, 57, 60, 80, 24, 68, 63, 39, 53, 72, 84, 67, 49, 43, 1, 81, 94, 75, 32, 12, 38, 29, 36, 4, 51, 77, 95, 47, 99, 40, 70, 13, 42, 2, 45, 28, 33, 82, 54, 19, 34, 85, 26, 11, 56, 6, 8, 50, 86, 61, 59, 76, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 18, 52, 78, 23, 37, 98, 35, 69, 65, 25, 64, 3, 88, 30, 79, 41, 7, 66, 43, 49, 84, 67, 72, 80, 24, 50, 57, 68, 63, 39, 53, 1, 81, 94, 75, 32, 12, 38, 29, 36, 4, 51, 77, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 82, 54, 19, 34, 85, 76, 59, 61, 26, 11, 56, 8, 6, 86, 60, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 69, 18, 78, 23, 35, 98, 37, 52, 3, 64, 25, 79, 30, 66, 57, 92, 27, 68, 63, 39, 53, 1, 43, 49, 84, 67, 72, 94, 81, 4, 36, 51, 77, 95, 29, 38, 32, 75, 12, 13, 99, 70, 40, 47, 28, 45, 42, 2, 33, 54, 82, 6, 8, 11, 19, 85, 34, 61, 59, 76, 26, 56, 86, 50, 60, 24, 80, 41, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 3, 64, 69, 78, 37, 98, 35, 23, 52, 18, 30, 88, 41, 79, 7, 66, 57, 27, 92, 50, 60, 24, 80, 86, 8, 6, 56, 11, 19, 85, 26, 34, 59, 61, 76, 82, 54, 33, 2, 42, 45, 28, 70, 40, 13, 99, 47, 38, 77, 51, 95, 29, 4, 36, 12, 75, 32, 94, 81, 49, 67, 84, 39, 63, 1, 43, 72, 68, 53, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 52, 78, 37, 23, 35, 98, 69, 18, 79, 30, 88, 41, 7, 66, 92, 27, 57, 60, 50, 86, 8, 6, 56, 11, 26, 34, 85, 19, 54, 82, 33, 28, 2, 42, 45, 84, 68, 24, 80, 72, 63, 39, 53, 1, 67, 49, 43, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 77, 51, 47, 13, 70, 99, 40, 61, 59, 76, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 69, 52, 78, 23, 98, 37, 35, 27, 92, 57, 60, 24, 80, 50, 86, 8, 56, 6, 76, 59, 61, 19, 11, 26, 34, 85, 82, 54, 33, 28, 45, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 43, 49, 63, 39, 53, 68, 72, 84, 67, 38, 29, 2, 42, 70, 40, 99, 66, 88, 79, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 98, 35, 37, 23, 78, 69, 79, 30, 7, 41, 88, 27, 66, 57, 60, 24, 80, 50, 86, 8, 6, 56, 54, 82, 45, 42, 2, 13, 99, 70, 40, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 84, 67, 38, 29, 28, 33, 11, 26, 85, 34, 19, 59, 61, 76, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 78, 69, 98, 35, 23, 37, 27, 92, 57, 50, 86, 56, 8, 6, 19, 11, 26, 85, 34, 61, 76, 59, 60, 80, 24, 72, 49, 43, 81, 94, 75, 12, 32, 4, 36, 95, 51, 77, 38, 29, 28, 40, 70, 99, 47, 13, 2, 45, 42, 54, 82, 33, 67, 84, 1, 63, 53, 39, 68, 66, 7, 30, 88, 41, 79, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 78, 23, 37, 35, 98, 92, 66, 57, 60, 24, 80, 50, 86, 8, 6, 56, 59, 76, 61, 34, 85, 19, 11, 26, 54, 82, 33, 45, 2, 99, 40, 70, 47, 13, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 1, 39, 53, 63, 68, 72, 49, 67, 84, 42, 28, 29, 38, 7, 41, 30, 79, 88, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 78, 23, 98, 35, 37, 79, 30, 88, 41, 7, 27, 92, 66, 57, 86, 50, 8, 6, 56, 26, 85, 34, 61, 59, 76, 19, 11, 54, 82, 33, 45, 42, 2, 99, 70, 40, 47, 13, 28, 51, 95, 77, 4, 36, 12, 32, 75, 94, 81, 43, 1, 39, 53, 63, 68, 72, 49, 67, 84, 38, 29, 80, 24, 60, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 41, 30, 88, 79, 53, 63, 43, 72, 49, 67, 84, 38, 29, 95, 51, 77, 36, 4, 32, 94, 12, 75, 81, 1, 39, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 34, 26, 19, 85, 61, 59, 76, 68, 80, 24, 60, 57, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 27, 66, 7, 79, 30, 88, 41, 92, 57, 60, 24, 80, 68, 72, 49, 43, 39, 53, 63, 1, 81, 94, 75, 32, 12, 36, 4, 77, 51, 95, 47, 99, 40, 70, 13, 45, 28, 54, 82, 33, 86, 8, 6, 56, 11, 19, 85, 26, 61, 59, 76, 50, 67, 84, 38, 29, 42, 2, 34, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 27, 92, 57, 66, 39, 53, 63, 68, 1, 43, 49, 72, 67, 84, 6, 56, 8, 19, 26, 85, 34, 11, 54, 82, 33, 28, 45, 2, 42, 47, 13, 70, 40, 99, 38, 29, 4, 36, 95, 77, 51, 81, 94, 75, 32, 12, 80, 60, 24, 86, 50, 76, 59, 61, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 41, 30, 79, 88, 66, 27, 92, 57, 60, 24, 68, 49, 72, 67, 84, 38, 29, 51, 95, 77, 36, 4, 32, 75, 12, 94, 81, 43, 1, 53, 39, 63, 80, 50, 86, 56, 8, 6, 82, 45, 28, 2, 13, 47, 40, 99, 70, 42, 54, 33, 11, 85, 26, 19, 34, 61, 76, 59, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 41, 30, 79, 88, 39, 63, 53, 72, 49, 43, 1, 81, 94, 32, 75, 12, 36, 4, 51, 77, 95, 38, 29, 84, 67, 68, 24, 80, 60, 50, 86, 56, 6, 8, 82, 54, 11, 26, 85, 34, 61, 76, 59, 19, 2, 28, 45, 42, 33, 13, 47, 99, 70, 40, 92, 27, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 41, 88, 30, 67, 84, 29, 38, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 1, 39, 53, 63, 68, 72, 49, 43, 80, 24, 60, 50, 86, 8, 56, 11, 19, 85, 26, 34, 61, 59, 76, 6, 54, 82, 33, 45, 28, 70, 40, 99, 47, 13, 42, 2, 66, 92, 27, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 66, 27, 92, 57, 76, 50, 60, 24, 80, 68, 86, 54, 33, 82, 99, 40, 70, 2, 45, 28, 42, 13, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 43, 39, 53, 63, 1, 72, 67, 84, 8, 6, 56, 11, 19, 85, 26, 34, 61, 59, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 66, 27, 92, 57, 60, 86, 56, 6, 11, 19, 85, 26, 34, 61, 59, 76, 80, 24, 50, 8, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 77, 51, 95, 38, 29, 4, 36, 32, 12, 75, 94, 81, 49, 43, 1, 53, 39, 63, 72, 68, 84, 67, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 66, 60, 24, 80, 68, 84, 67, 72, 49, 43, 1, 53, 39, 63, 81, 94, 12, 32, 75, 36, 4, 95, 77, 51, 29, 38, 2, 42, 45, 28, 13, 47, 40, 70, 99, 33, 26, 34, 11, 82, 54, 56, 8, 6, 86, 50, 59, 61, 85, 19, 76, 27, 92, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 66, 57, 60, 50, 24, 80, 68, 84, 67, 72, 63, 53, 39, 1, 43, 49, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 29, 47, 70, 40, 99, 13, 28, 45, 2, 42, 82, 54, 33, 19, 56, 8, 6, 11, 34, 26, 85, 59, 61, 76, 86, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 86, 8, 56, 6, 76, 59, 61, 19, 85, 34, 26, 11, 82, 54, 33, 45, 2, 42, 28, 13, 70, 40, 99, 47, 29, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 38, 84, 67, 49, 72, 43, 1, 39, 53, 63, 68, 80, 24, 60, 50, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 86, 50, 56, 8, 19, 11, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 38, 29, 51, 95, 77, 4, 36, 32, 75, 12, 94, 81, 49, 68, 63, 53, 39, 72, 84, 67, 1, 43, 80, 24, 6, 26, 34, 85, 61, 59, 76, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 56, 11, 85, 26, 34, 61, 59, 76, 19, 8, 6, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 29, 84, 67, 72, 43, 49, 1, 81, 94, 32, 75, 12, 36, 4, 38, 63, 39, 53, 66, 57, 80, 24, 68, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 56, 59, 76, 61, 34, 26, 85, 19, 11, 6, 8, 54, 82, 28, 45, 2, 13, 99, 70, 40, 47, 95, 29, 38, 84, 67, 49, 72, 63, 39, 53, 1, 43, 81, 94, 12, 32, 75, 36, 4, 51, 77, 42, 33, 80, 24, 68, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 8, 56, 19, 76, 61, 59, 34, 85, 11, 26, 54, 82, 33, 45, 2, 40, 70, 99, 47, 77, 51, 38, 95, 36, 4, 32, 75, 12, 94, 81, 72, 49, 43, 1, 63, 39, 53, 68, 24, 80, 67, 84, 29, 13, 42, 28, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 80, 24, 68, 72, 49, 43, 1, 53, 39, 63, 81, 94, 75, 12, 32, 77, 51, 95, 38, 29, 13, 70, 40, 99, 47, 36, 4, 67, 84, 28, 45, 2, 42, 82, 54, 33, 8, 56, 11, 19, 26, 85, 34, 61, 59, 76, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 85, 76, 59, 61, 34, 26, 8, 56, 19, 54, 82, 33, 28, 45, 42, 2, 40, 70, 99, 13, 47, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 84, 67, 72, 49, 43, 1, 39, 53, 63, 68, 66, 57, 80, 24, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 19, 76, 61, 59, 34, 26, 85, 54, 82, 33, 28, 45, 42, 2, 13, 99, 40, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 84, 67, 49, 43, 63, 53, 39, 1, 68, 72, 24, 80, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 19, 26, 85, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 38, 29, 77, 95, 51, 36, 4, 94, 12, 32, 75, 81, 49, 72, 68, 24, 80, 67, 84, 63, 39, 1, 43, 53, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 19, 26, 85, 34, 82, 54, 33, 45, 42, 2, 13, 47, 99, 70, 40, 51, 77, 95, 4, 36, 94, 32, 75, 12, 81, 38, 29, 28, 84, 67, 49, 72, 1, 43, 39, 63, 53, 66, 80, 24, 68, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 19, 26, 85, 34, 54, 82, 33, 45, 2, 47, 99, 70, 40, 95, 77, 51, 4, 36, 12, 75, 32, 94, 81, 38, 29, 28, 42, 13, 67, 84, 43, 1, 53, 39, 63, 68, 72, 49, 80, 24, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 82, 28, 45, 42, 2, 40, 70, 13, 99, 38, 81, 94, 32, 75, 12, 4, 36, 95, 77, 51, 47, 29, 33, 54, 67, 72, 43, 63, 39, 53, 1, 49, 68, 84, 24, 80, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 19, 26, 54, 82, 33, 42, 28, 45, 2, 13, 40, 99, 70, 47, 29, 38, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 72, 49, 67, 84, 68, 24, 80, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 19, 26, 54, 82, 33, 45, 28, 2, 42, 13, 40, 99, 70, 47, 29, 38, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 72, 49, 43, 1, 53, 39, 68, 63, 84, 67, 24, 80, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 24, 80, 67, 84, 28, 82, 54, 33, 45, 42, 2, 99, 70, 40, 13, 47, 51, 95, 77, 29, 38, 36, 4, 75, 32, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 68, 63, 53, 39, 1, 43, 72, 67, 84, 29, 77, 51, 95, 36, 4, 75, 32, 12, 94, 81, 49, 38, 47, 70, 99, 40, 13, 2, 45, 42, 28, 33, 54, 82, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 72, 49, 68, 63, 39, 53, 1, 43, 67, 84, 38, 51, 95, 77, 4, 36, 32, 12, 75, 94, 81, 33, 54, 82, 28, 45, 42, 40, 70, 99, 47, 13, 2, 29, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 67, 84, 38, 29, 47, 40, 99, 70, 13, 82, 54, 33, 45, 42, 2, 28, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 72, 63, 39, 53, 68, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 38, 67, 84, 29, 28, 99, 70, 40, 2, 42, 45, 33, 82, 54, 13, 47, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 43, 1, 53, 68, 39, 63, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 39, 53, 63, 43, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 47, 13, 70, 40, 99, 42, 2, 28, 45, 54, 82, 33, 84, 67, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 53, 63, 39, 43, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 38, 29, 47, 2, 99, 40, 70, 13, 42, 45, 28, 54, 82, 33, 84, 67, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 84, 29, 13, 33, 82, 54, 45, 42, 2, 28, 40, 70, 99, 47, 51, 95, 77, 4, 36, 94, 75, 32, 12, 81, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 84, 67, 43, 29, 51, 77, 95, 38, 4, 36, 94, 81, 12, 75, 32, 99, 70, 40, 13, 47, 42, 45, 2, 28, 54, 82, 33, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 29, 38, 84, 67, 33, 82, 54, 45, 2, 42, 28, 13, 70, 40, 99, 47, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 84, 36, 4, 32, 12, 75, 94, 81, 38, 29, 95, 77, 51, 99, 70, 40, 47, 13, 28, 45, 2, 42, 33, 82, 54, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 84, 54, 82, 33, 45, 42, 2, 28, 13, 99, 70, 40, 47, 51, 77, 95, 4, 32, 12, 75, 94, 81, 36, 38, 29, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 84, 54, 82, 33, 28, 45, 2, 13, 47, 99, 70, 40, 42, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 32, 12, 75, 36, 4, 51, 77, 95, 84, 38, 29, 47, 70, 99, 40, 13, 2, 42, 45, 28, 33, 54, 82, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 32, 75, 36, 4, 77, 51, 47, 70, 40, 99, 13, 42, 2, 28, 45, 33, 54, 82, 29, 95, 38, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 84, 29, 47, 99, 2, 42, 40, 70, 13, 45, 28, 33, 54, 82, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 51, 95, 77, 38, 84, 29, 13, 47, 99, 70, 40, 42, 2, 45, 28, 33, 54, 82, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 29, 2, 45, 28, 33, 54, 82, 42, 13, 47, 70, 40, 99, 38, 84, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 29, 38, 54, 82, 33, 42, 47, 40, 70, 99, 13, 2, 45, 28, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 38, 29, 47, 40, 70, 99, 13, 28, 45, 2, 42, 33, 82, 54, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 70, 40, 47, 13, 45, 28, 2, 42, 54, 82, 33, 29, 38, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 47, 13, 40, 70, 42, 2, 45, 28, 84, 38, 29, 33, 82, 54, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 28, 45, 54, 82, 33, 84, 38, 29, 2, 42, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 28, 42, 2, 45, 82, 54, 33, 84, 38, 29, 47, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 84, 38, 29, 47, 13, 45, 33, 28, 2, 42, 54, 82, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 45, 42, 2, 28, 47, 33, 82, 54, 29, 38, 84, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 2, 42, 45, 28, 29, 38, 84, 54, 82, 33, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 2, 42, 45, 33, 82, 54, 29, 38, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 42, 45, 2, 29, 38, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 42, 2, 29, 38, 84, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 42, 2, 29, 38, 84, 66, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 42, 2, 29, 38, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 42, 2, 38, 29, 84, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 48, 62, 89, 17, 87, 15, 21, 93, 83, 9, 71, 20, 58, 73, 16, 14, 10, 90, 44, 22, 97, 31, 46, 91, 55, 74, 96, 65, 25, 64, 3, 18, 52, 69, 23, 37, 98, 35, 78, 7, 79, 30, 41, 88, 27, 92, 60, 50, 86, 6, 11, 8, 56, 76, 59, 61, 34, 85, 26, 19, 80, 24, 49, 72, 68, 1, 63, 39, 53, 43, 67, 81, 94, 12, 75, 32, 36, 4, 77, 95, 51, 99, 40, 70, 13, 47, 28, 82, 54, 33, 45, 2, 42, 84, 29, 38, 57, 66, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_US_MADTSP mmas_us_madtsp = new MMAS_US_MADTSP(graph, 0.8, 1000, 0.75, 100, 1.0, 5.0);
        mmas_us_madtsp.setMmasSeed(1);
        mmas_us_madtsp.setDbgpSeed(1);
        mmas_us_madtsp.setStatisticInterval(1);
        mmas_us_madtsp.setShowLog(false);
        mmas_us_madtsp.run();
        assertThat(mmas_us_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(33199.510653380814);
        assertThat(mmas_us_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(33199.510653380814);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getGlobalStatistics())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");

        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1, 46564.42118143889, 4349.664088172347, 0.0, 57.111836734693874, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 50, 38136.993577450274, 2840.3124929339983, 0.0, 13.25469387755102, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 100, 35936.451074773584, 3085.106671895809, 0.525, 9.288979591836735, 32499.423638867313);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 101, 41079.87379800192, 2627.7378664434123, 0.51, 33.7534693877551, 33853.44009063607);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 150, 34573.876140113105, 2621.825229371392, 0.575, 12.188571428571429, 30409.99706594752);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 200, 36929.63900866206, 2877.2782844181684, 0.535, 15.561632653061224, 30409.99706594752);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 201, 43023.48593141209, 3179.806863901601, 0.51, 33.244081632653064, 33295.11072266018);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 250, 36450.619513652426, 3924.98922406561, 0.5, 7.031020408163266, 30149.120139826573);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 300, 32873.776916878225, 2589.1998472390815, 0.5, 6.079183673469387, 29897.850578333615);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 301, 43626.81735136716, 2811.5036173420085, 0.49, 21.60326530612245, 33226.35812032022);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 350, 35375.26092616827, 2666.106327275357, 0.49, 4.2759183673469385, 33226.35812032022);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 400, 34434.390710367945, 2593.5101086401337, 0.5, 5.091428571428572, 32391.746659699438);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 401, 41888.89271276249, 3036.2838775941505, 0.49, 23.01142857142857, 32939.560252684176);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 450, 33492.55844838604, 2024.8935549780385, 0.495, 4.85469387755102, 31615.20066977041);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 500, 33084.06363459398, 1962.1589751851036, 0.495, 4.192653061224489, 31615.20066977041);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 501, 43959.71019521506, 3470.8234350276202, 0.49, 11.693877551020408, 32834.383873450344);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 550, 32287.852501638947, 1860.2646447967893, 0.51, 3.260408163265306, 31196.82381382706);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 600, 32327.306480681556, 1928.785918356625, 0.5, 2.633469387755102, 31196.82381382706);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 601, 36567.53074430401, 1281.426565929864, 0.485, 13.43591836734694, 32292.613666705834);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 650, 32631.65255818641, 1010.5997902690012, 0.485, 1.0253061224489797, 32292.613666705834);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 700, 32543.46320348762, 732.5382124340266, 0.495, 0.963265306122449, 32292.613666705834);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 701, 35737.16471366231, 946.5138894528891, 0.49, 5.330612244897959, 33524.86884351945);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 750, 32017.610210043007, 417.4524445764216, 0.51, 1.026122448979592, 31873.734988263852);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 800, 32075.914405563617, 804.3773680799173, 0.5, 0.7746938775510204, 31873.734988263852);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 801, 34488.64525006808, 748.4827556708781, 0.49, 7.532244897959184, 32904.22063819896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 850, 32904.22063819899, 2.939930839208568E-11, 0.49, 0.0, 32904.22063819896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 900, 32965.90546110832, 246.9785121374943, 0.5, 0.5526530612244898, 32904.22063819896);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 901, 36269.86929753895, 513.3938591094579, 0.49, 2.4473469387755102, 33233.07755276141);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 950, 33317.813990303424, 585.4496864426961, 0.5, 0.23510204081632652, 33199.510653380814);
        TestUtils.checkValues(mmas_us_madtsp.getIterationStatistics(), 1000, 33199.51065338079, 2.204948129406426E-11, 0.495, 0.0, 33199.510653380814);
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 71, 20, 58, 73, 10, 16, 14, 90, 97, 22, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 81, 94, 12, 75, 32, 4, 36, 38, 51, 77, 95, 29, 13, 47, 99, 70, 40, 42, 2, 28, 45, 54, 82, 33, 6, 11, 26, 85, 34, 19, 56, 8, 86, 57, 92, 27, 66, 46, 44, 31, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 96, 74, 91, 41, 30, 79, 88, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 26, 11, 85, 34, 19, 61, 59, 76, 86, 8, 6, 56, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 75, 12, 32, 81, 94, 27, 66, 57, 92, 46, 7, 41, 88, 30, 55, 79, 25, 64, 3, 65, 52, 21, 93, 87, 15, 69, 96, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 8, 54, 82, 33, 38, 29, 13, 2, 28, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 80, 24, 50, 86, 6, 56, 57, 92, 27, 66, 55, 79, 88, 30, 41, 7, 91, 74, 96, 25, 64, 3, 65, 52, 93, 21, 69, 15, 87, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 8, 6, 56, 86, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 95, 77, 51, 36, 4, 94, 81, 32, 12, 75, 29, 38, 47, 99, 70, 40, 42, 13, 2, 28, 45, 82, 54, 33, 85, 61, 11, 34, 26, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 8, 6, 56, 86, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 95, 77, 51, 36, 4, 94, 81, 32, 12, 75, 29, 38, 47, 99, 70, 40, 42, 13, 2, 28, 45, 82, 54, 33, 85, 61, 11, 34, 26, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 8, 6, 56, 86, 60, 80, 24, 72, 49, 43, 1, 53, 39, 63, 68, 67, 84, 95, 77, 51, 36, 4, 94, 81, 32, 12, 75, 29, 38, 47, 99, 70, 40, 42, 13, 2, 28, 45, 82, 54, 33, 85, 61, 11, 34, 26, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 84, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 49, 53, 39, 63, 68, 67, 80, 24, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 15, 87, 93, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 84, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 84, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 84, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 84, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 52, 21, 93, 87, 15, 69, 25, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 84, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 52, 87, 93, 21, 15, 69, 25, 64, 65, 3, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 85, 61, 56, 86, 8, 6, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 43, 1, 72, 67, 84, 49, 53, 39, 63, 68, 24, 80, 60, 50, 57, 92, 27, 66, 7, 41, 88, 30, 79, 55, 96, 52, 87, 93, 21, 15, 69, 25, 64, 65, 3, 74, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 82, 54, 33, 42, 45, 28, 13, 2, 40, 70, 99, 47, 51, 77, 29, 38, 95, 36, 4, 32, 75, 81, 94, 12, 49, 84, 67, 68, 63, 39, 53, 1, 43, 72, 80, 24, 50, 60, 57, 92, 27, 66, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 69, 93, 15, 52, 87, 21, 3, 91, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 45, 29, 13, 47, 40, 70, 99, 42, 54, 82, 50, 60, 24, 80, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 84, 67, 72, 68, 66, 57, 92, 27, 91, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 3, 52, 87, 21, 69, 93, 15, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 45, 29, 13, 47, 40, 70, 99, 42, 54, 82, 50, 60, 24, 80, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 84, 67, 72, 68, 66, 57, 92, 27, 91, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 3, 52, 87, 21, 69, 93, 15, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 45, 29, 13, 47, 40, 70, 99, 42, 54, 82, 50, 60, 24, 80, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 84, 67, 72, 68, 66, 57, 92, 27, 91, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 3, 52, 87, 21, 69, 93, 15, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 45, 29, 13, 47, 40, 70, 99, 42, 54, 82, 50, 60, 24, 80, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 84, 67, 72, 68, 66, 57, 92, 27, 91, 7, 41, 30, 88, 79, 55, 96, 25, 65, 64, 3, 52, 87, 21, 69, 93, 15, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 4, 36, 29, 13, 99, 40, 70, 47, 51, 77, 12, 32, 75, 94, 81, 49, 72, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 21, 69, 93, 25, 65, 64, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 4, 36, 29, 13, 99, 40, 70, 47, 51, 77, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 29, 13, 99, 40, 70, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 66, 27, 92, 57, 91, 7, 41, 88, 30, 79, 55, 96, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 72, 49, 43, 39, 53, 63, 68, 66, 57, 92, 27, 7, 41, 88, 30, 79, 55, 96, 74, 52, 87, 15, 69, 21, 93, 25, 3, 64, 65, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 36, 4, 32, 75, 12, 94, 81, 1, 43, 49, 72, 68, 63, 39, 53, 66, 57, 92, 27, 91, 74, 52, 87, 15, 21, 93, 69, 3, 25, 64, 65, 96, 41, 88, 30, 79, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 57, 92, 27, 66, 88, 41, 79, 30, 7, 91, 74, 96, 55, 3, 65, 25, 64, 69, 21, 93, 87, 15, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 68, 1, 53, 39, 63, 43, 27, 92, 57, 66, 88, 30, 79, 41, 64, 65, 25, 3, 96, 55, 74, 52, 21, 15, 87, 93, 69, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 7, 41, 88, 30, 79, 55, 74, 52, 21, 15, 87, 93, 69, 64, 65, 25, 3, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 15, 87, 21, 93, 25, 65, 64, 3, 52, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 52, 25, 64, 3, 65, 87, 15, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
        assertThat(TestUtils.getTourString(mmas_us_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 46, 97, 44, 22, 76, 59, 19, 26, 34, 56, 86, 6, 8, 61, 85, 11, 33, 28, 2, 42, 45, 82, 54, 50, 60, 24, 80, 67, 84, 38, 95, 77, 51, 47, 40, 70, 99, 13, 29, 4, 36, 12, 32, 75, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 66, 92, 27, 57, 91, 7, 41, 88, 30, 79, 55, 96, 74, 69, 21, 93, 87, 15, 52, 25, 64, 65, 3, 0]");
    }

}
