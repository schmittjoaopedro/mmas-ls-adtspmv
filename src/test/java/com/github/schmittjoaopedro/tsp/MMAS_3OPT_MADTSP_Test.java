package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_3OPT_MADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_3OPT_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(23152.3879115671);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(23152.3879115671);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 25479.658218801425, 2150.2048167644975, 0.0, 7.645714285714286, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 25622.242881529393, 2382.4290136889053, 0.0, 9.076734693877551, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 29143.968309082346, 1765.8245333647048, 0.495, 17.768979591836736, 22441.365561042152);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 24438.00586755615, 1797.9087440324017, 0.495, 7.394285714285714, 22441.365561042152);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 23959.104188501635, 1835.65926058423, 0.5, 5.542857142857143, 22053.365561042152);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 30117.844431710182, 2312.4434281796207, 0.49, 14.484897959183673, 22591.955182770304);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 26298.48432055307, 2325.5478678422605, 0.49, 7.122448979591836, 22591.955182770304);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 26078.04959219786, 2147.764449490791, 0.49, 6.321632653061225, 22591.955182770304);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 28053.457032067192, 2178.398054645423, 0.5, 11.239183673469388, 22758.415939636907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 26346.552532614896, 2290.9970302057122, 0.5, 7.853877551020408, 22700.415939636907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 25693.68739474132, 2164.8825111818446, 0.5, 7.338775510204082, 22700.415939636907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 26266.113641168402, 2427.8937896451325, 0.5, 9.35265306122449, 22580.401931222907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 25307.43082149458, 2505.421567340299, 0.5, 6.474285714285714, 22580.401931222907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25001.935094204997, 2156.1822876796314, 0.5, 5.818775510204081, 22580.401931222907);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 27542.241431585142, 2258.1142709159576, 0.5, 8.598367346938776, 22702.394318801562);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 25443.45885114742, 1708.0495502628858, 0.5, 5.65469387755102, 22702.394318801562);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 25704.50534277632, 1992.5188646753911, 0.5, 6.626122448979592, 22702.394318801562);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 30355.899473161255, 1788.6908922232153, 0.495, 18.75673469387755, 23365.562795731086);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 27695.825513409978, 2214.1977667349274, 0.495, 13.362448979591838, 23365.562795731086);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 27713.0815016377, 2404.4487073718306, 0.495, 12.862857142857143, 23365.562795731086);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 29554.956673861012, 2407.1411314564093, 0.5, 16.688979591836734, 22835.82255541434);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 26405.761344374274, 1980.6060982351587, 0.5, 9.766530612244898, 22835.82255541434);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 26797.036719107928, 2217.036375240129, 0.5, 10.311020408163266, 22835.82255541434);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 27951.056432668534, 1826.565416020003, 0.5, 11.535510204081632, 22638.52691287273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 26679.705006260097, 2426.401833878929, 0.5, 12.304489795918368, 22638.52691287273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 25968.76295956193, 2776.557418613614, 0.5, 9.256326530612245, 22580.52691287273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 29111.131537689016, 1996.923768056005, 0.495, 15.21469387755102, 23462.751260274912);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 27107.255971266128, 2378.1959407363092, 0.495, 9.275102040816327, 23462.751260274912);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 26487.286994267266, 2537.831652578905, 0.525, 7.219591836734694, 23462.751260274912);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 28068.23373863849, 2830.998542308555, 0.505, 9.72734693877551, 23064.330210796452);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 24861.64230594177, 2019.2155064534634, 0.505, 5.3126530612244895, 23064.330210796452);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 25923.9418264479, 2278.3224093228564, 0.5, 10.278367346938776, 22611.330210796452);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 28718.263167103374, 2145.045783163764, 0.5, 14.96408163265306, 23164.85223074069);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 24876.987598142772, 1970.7113213519988, 0.5, 5.267755102040816, 23162.85223074069);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 25029.635160984937, 2365.229279769175, 0.52, 6.88, 22781.85223074069);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 26893.66061702798, 2248.0687071923253, 0.5, 10.813061224489797, 22638.81970286983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 23975.451269821842, 1855.0745538936928, 0.595, 4.3795918367346935, 22547.81970286983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 24072.002726784358, 1970.5265327557454, 0.595, 3.9804081632653063, 22547.81970286983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 26970.437557997666, 1406.3353859644, 0.495, 6.610612244897959, 23092.473491107306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 25695.15428514444, 1611.2740810084454, 0.495, 5.492244897959184, 23092.473491107306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 25510.061368941417, 1458.4732922488247, 0.495, 4.688979591836735, 23092.473491107306);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 27824.584735340373, 2916.7836858149885, 0.5, 9.614693877551021, 22423.30647212131);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 23839.539107304237, 1437.8548695467891, 0.5, 2.7689795918367346, 22423.30647212131);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 23767.32848359377, 1658.0679504385314, 0.5, 2.5461224489795917, 22423.30647212131);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 27417.256053019817, 2660.4234056868936, 0.505, 7.48, 23027.38509425472);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 26200.305090841466, 1756.5871476674588, 0.505, 7.933061224489796, 23027.38509425472);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 25844.38994862968, 2178.9511453775262, 0.505, 5.140408163265306, 23027.38509425472);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 28134.895638470556, 1861.2877764455843, 0.495, 16.64, 23263.536917341175);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 26461.544782867924, 1797.9787768501665, 0.495, 9.394285714285715, 23263.536917341175);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 26326.602776368338, 1950.5552978932785, 0.495, 14.212244897959184, 23263.536917341175);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 28225.716977122156, 1881.4824299179086, 0.565, 14.362448979591838, 23370.840694198985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 25604.653987756104, 1916.1525647680226, 0.54, 5.383673469387755, 23324.84069419899);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 25112.591447473897, 1725.6253834821266, 0.5, 6.467755102040816, 22972.840694198985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 26629.416837508197, 1850.0302790915755, 0.5, 10.285714285714286, 22544.195278977222);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 25991.27946786246, 1745.7292844672043, 0.5, 9.888979591836735, 22544.195278977222);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 26304.63646151634, 2032.5541014240468, 0.5, 10.12734693877551, 22544.195278977222);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 26415.991707321384, 2017.3370640395667, 0.51, 11.088163265306122, 22538.27119527122);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 24151.472566125653, 1266.571570286609, 0.51, 6.5902040816326535, 22538.27119527122);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 24590.913677585064, 1636.7109687394259, 0.5, 6.372244897959184, 22538.27119527122);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 26718.293987823956, 1829.2885767145665, 0.5, 10.153469387755102, 23386.38684646161);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 26110.26688521529, 1993.6986972995016, 0.5, 6.6538775510204085, 23386.38684646161);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 25364.827574978135, 1818.7583311972292, 0.5, 5.85469387755102, 23386.38684646161);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 26120.08290228347, 2132.091156812555, 0.5, 8.31265306122449, 22745.632164994648);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 25104.640862444878, 1698.0617030538826, 0.5, 5.773877551020409, 22745.632164994648);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 25254.586177081605, 1654.4958526610167, 0.5, 5.401632653061225, 22745.632164994648);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 25574.017901140895, 1810.9192323058703, 0.5, 6.2693877551020405, 22690.049809799068);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 24947.280965502967, 1760.8110284934232, 0.5, 5.173877551020408, 22690.049809799068);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 24685.039562495658, 1534.1121722513747, 0.5, 5.506938775510204, 22690.049809799068);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 24771.685618338928, 1852.7828587831539, 0.5, 5.155918367346938, 22597.760742334387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 24837.769606957063, 2264.796118477134, 0.5, 4.698775510204082, 22597.760742334387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 25240.40344565225, 1735.7129043828634, 0.5, 4.556734693877551, 22597.760742334387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 25615.986641861426, 1349.1885573661864, 0.5, 7.906122448979592, 22699.718977906803);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 24966.40979521399, 1701.4031030305484, 0.5, 5.533877551020408, 22699.718977906803);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 25646.577979088095, 1843.363257601701, 0.5, 5.990204081632653, 22699.718977906803);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 26641.166419448204, 1953.4204378803474, 0.5, 7.315918367346939, 22965.746245763425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 24683.770757913073, 1835.9587411697155, 0.525, 4.355102040816327, 22876.746245763425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 24750.69539666656, 1874.4655112977864, 0.525, 4.671836734693877, 22876.746245763425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 28369.007915850892, 2660.5297721941356, 0.5, 11.534693877551021, 23231.893124596067);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 25162.379746659044, 2012.696205689947, 0.5, 4.197551020408163, 23231.893124596067);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 25471.724128213547, 2285.1861153513264, 0.5, 5.417959183673469, 23231.893124596067);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 26402.247724334986, 1498.4480111921773, 0.49, 9.511020408163265, 22653.230809329158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 24754.727865308538, 1095.4395561974954, 0.49, 2.991020408163265, 22653.230809329158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 24250.242134345623, 1193.7512351310584, 0.49, 3.2416326530612243, 22653.230809329158);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 24387.490297677767, 1537.6564698226284, 0.5, 4.608163265306122, 22770.58032147381);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 23876.264853066412, 1402.6719340445331, 0.5, 3.1240816326530614, 22770.58032147381);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 24300.288006340554, 1635.037083129098, 0.5, 3.857142857142857, 22770.58032147381);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 27340.808371121646, 2112.728105848921, 0.495, 17.12816326530612, 22867.42179473229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 24528.816536552757, 1313.8959201941957, 0.495, 3.256326530612245, 22867.42179473229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 24368.39897452057, 1355.6327440281707, 0.495, 3.0473469387755103, 22867.42179473229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 26644.54356512337, 2077.131290889931, 0.49, 7.417142857142857, 22763.85916875641);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 23426.841459744006, 1094.1624481993802, 0.49, 3.2375510204081634, 22763.85916875641);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 23404.503101130267, 1254.4726441028313, 0.49, 2.0318367346938775, 22763.85916875641);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 24947.95869949895, 1559.568320705679, 0.5, 5.699591836734694, 22610.90449622902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 24989.54047281983, 2516.7693477087446, 0.5, 2.016326530612245, 22610.90449622902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 24813.347067824547, 2352.564180376584, 0.5, 2.646530612244898, 22610.90449622902);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 24869.474292707568, 1642.7127197823302, 0.5, 3.373877551020408, 22794.364361578264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 24894.79991828841, 1443.6248928426012, 0.5, 5.010612244897959, 22794.364361578264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 24817.423873016607, 1524.5386092085116, 0.5, 4.0955102040816325, 22794.364361578264);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 25411.89922082178, 1599.3072395793988, 0.5, 7.011428571428572, 22679.147803427608);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 24956.235597263458, 1556.020106040901, 0.5, 4.644081632653061, 22679.147803427608);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 25168.118643566304, 1828.220571707207, 0.5, 5.799183673469388, 22679.147803427608);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 27409.33512318665, 1413.1814482372417, 0.5, 9.635918367346939, 23022.52215254793);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 25284.12145205532, 1618.961704614127, 0.5, 6.286530612244898, 23022.52215254793);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 25270.326448533488, 1636.8053463755896, 0.5, 7.094693877551021, 23022.52215254793);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 27766.549396179704, 1461.820090845685, 0.495, 13.626122448979592, 22680.999991113604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 24673.99755309687, 1676.5971927930532, 0.495, 4.171428571428572, 22680.999991113604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 24403.88038439641, 1778.2903136102009, 0.495, 3.719183673469388, 22680.999991113604);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 25903.0295029717, 1756.1545694884792, 0.5, 6.354285714285714, 22952.25133148853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 24142.98225725768, 1343.6675136928823, 0.5, 3.349387755102041, 22952.25133148853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 24487.373524358543, 1508.9817604792195, 0.5, 4.587755102040816, 22952.25133148853);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 25009.01635583227, 1366.496552750384, 0.5, 5.1657142857142855, 22664.55193939139);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 23935.899675754175, 1466.1958650372762, 0.5, 3.620408163265306, 22664.55193939139);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 23943.53280803794, 1266.7605233996385, 0.5, 3.0987755102040815, 22664.55193939139);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 23589.25671240323, 854.5857434619605, 0.495, 3.431020408163265, 22611.94670292163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 24319.3681196539, 1951.5160118448537, 0.495, 3.942857142857143, 22611.94670292163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 24211.80593839254, 1714.861224882047, 0.495, 3.4, 22611.94670292163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 26120.41569981385, 1735.1996312362273, 0.5, 6.192653061224489, 22619.16124626228);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 24922.451725612395, 1959.866600013509, 0.5, 4.612244897959184, 22619.16124626228);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 25362.73335004285, 2006.2095890417127, 0.5, 4.601632653061224, 22619.16124626228);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 26255.11445197164, 1343.8381198048728, 0.495, 8.36, 22956.380869499546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 25008.800869499548, 1295.1171894024553, 0.495, 3.541224489795918, 22956.380869499546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 24618.75806430185, 1368.2248182652766, 0.495, 4.0955102040816325, 22956.380869499546);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 27228.64978018499, 1313.613599464691, 0.495, 7.249795918367347, 23171.525883390368);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 23942.393221728027, 1337.5660031990985, 0.525, 4.0620408163265305, 23169.525883390368);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 23461.85694293816, 652.0636179947224, 0.525, 1.9085714285714286, 23169.525883390368);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 25323.581581922015, 1596.4742509548919, 0.5, 5.7371428571428575, 22704.746245763425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 23248.600699879924, 868.1833203046535, 0.5, 2.7910204081632655, 22704.746245763425);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 22937.442130879117, 717.2439299570784, 0.5, 1.6734693877551021, 22641.20938501647);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 25472.07850245618, 1410.604280877817, 0.5, 7.398367346938776, 22907.513458934664);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 23774.966647509515, 1114.8449686833471, 0.5, 3.0628571428571427, 22907.513458934664);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 23398.734748115086, 958.3565503146904, 0.5, 2.859591836734694, 22642.513458934664);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 26386.255904580146, 952.2297110426996, 0.495, 7.010612244897959, 22828.34490214952);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 24148.91282224881, 1612.7752669880879, 0.495, 4.925714285714286, 22828.34490214952);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24303.124493600888, 1410.2884508564216, 0.495, 3.510204081632653, 22828.34490214952);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 25569.940646293617, 1083.0719391982032, 0.495, 7.227755102040816, 22607.792479730273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 24254.272899135085, 968.2420963474535, 0.495, 4.7371428571428575, 22607.792479730273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 24189.116059976717, 904.4595646029186, 0.495, 4.155102040816327, 22607.792479730273);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 25497.949935530796, 1357.6038248383334, 0.495, 4.650612244897959, 22619.95091832968);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 23290.064887602315, 1182.4504005877586, 0.605, 2.7624489795918366, 22522.42151398982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 23531.21314031704, 1193.0584986186614, 0.605, 3.0987755102040815, 22522.42151398982);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 25250.51967225338, 726.5644851432046, 0.495, 4.002448979591836, 22686.20527033821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 24188.403969967483, 1198.7048497069277, 0.495, 2.6155102040816325, 22686.20527033821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 24261.145900389467, 1350.2740606951154, 0.495, 3.6555102040816325, 22686.20527033821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 26253.145527848203, 901.4827209086417, 0.5, 2.9126530612244896, 22740.783656204767);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 24281.287887686492, 1438.4234035342695, 0.5, 3.216326530612245, 22740.783656204767);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 24122.880371860316, 1541.1346788429407, 0.5, 3.0914285714285716, 22740.783656204767);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 24012.92403391118, 1092.1156100850333, 0.5, 3.189387755102041, 22701.267217906858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 23503.620691597065, 1112.7797388572446, 0.5, 2.0253061224489795, 22701.267217906858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 23827.284832313922, 1142.0002950025246, 0.5, 3.170612244897959, 22701.267217906858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 25256.178138859814, 853.843579078722, 0.495, 5.764897959183673, 22887.97465360238);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 23816.228176640187, 1012.8742713631199, 0.495, 3.186938775510204, 22887.97465360238);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 23854.892525117066, 1104.8808031342514, 0.495, 4.164897959183674, 22887.97465360238);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 25729.65701719461, 772.3194049530586, 0.5, 4.386938775510204, 22936.16907930762);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 23560.18349154248, 964.7173026668976, 0.6, 1.9551020408163264, 22932.736543698353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 23649.629780660205, 1150.6893626951116, 0.6, 2.0546938775510206, 22932.736543698353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 23848.487425514402, 966.64048068155, 0.5, 3.2546938775510204, 22823.18975066726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 24011.205339908618, 1190.2699517691565, 0.5, 2.7379591836734694, 22823.18975066726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 24059.58212918199, 1209.5634058267951, 0.5, 2.32, 22823.18975066726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 26054.043237615093, 827.906801303913, 0.5, 3.5216326530612245, 22646.045075147318);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 23776.572100715093, 1245.8581833995781, 0.57, 2.9591836734693877, 22644.045075147318);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 23624.851174457963, 1147.4487095931463, 0.57, 2.533061224489796, 22644.045075147318);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 24054.903052979516, 847.7419149401785, 0.495, 3.3053061224489797, 22889.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 23570.922999507227, 975.5973033269146, 0.495, 3.0546938775510206, 22889.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 23290.11189523005, 810.318143111515, 0.495, 2.026938775510204, 22889.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 24731.10771964849, 1326.001326741766, 0.5, 6.363265306122449, 22942.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 23868.951391479364, 1032.6991988310056, 0.5, 3.1616326530612247, 22942.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 24204.620446746787, 1287.2623731955398, 0.5, 4.769795918367347, 22942.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 24552.103521129764, 1204.605991588242, 0.5, 6.324897959183674, 22601.61720895522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 24876.393440607957, 327.4731289288566, 0.5, 1.2775510204081633, 22601.61720895522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 24070.047330538448, 1104.7179756983637, 0.5, 2.0587755102040814, 22601.61720895522);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 24768.42840182956, 1068.177099480993, 0.5, 7.9012244897959185, 22631.31926856441);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 23437.17783346081, 1061.7080558071088, 0.5, 2.6620408163265306, 22631.31926856441);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 23561.338430755466, 1049.461892775092, 0.5, 2.7681632653061223, 22631.31926856441);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 25317.881202237088, 856.259769870667, 0.49, 8.454693877551021, 23125.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 24349.453059353866, 1456.8137925486774, 0.49, 3.946938775510204, 23125.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 24119.377870521355, 1485.8567997501018, 0.5, 2.675918367346939, 23075.202314219372);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 24338.156969357093, 435.6394511422209, 0.495, 3.7322448979591836, 22720.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 23007.59743527993, 765.102080018018, 0.545, 1.596734693877551, 22715.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 22978.30010446519, 679.161677092766, 0.5, 1.4024489795918367, 22715.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 23162.635155655807, 787.2259484489182, 0.5, 2.9640816326530612, 22586.597140995305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 23993.598214285277, 1188.0840700162255, 0.5, 2.2816326530612243, 22586.597140995305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 23898.86613831464, 1211.7602143939723, 0.5, 2.9036734693877553, 22586.597140995305);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 24260.145925198834, 1164.8949757088108, 0.5, 3.8514285714285714, 22637.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 23132.43705342587, 1041.328169774925, 0.5, 2.464489795918367, 22637.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 23159.961477113153, 1002.9476780060155, 0.5, 2.2824489795918366, 22637.650805493275);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 24728.83640408637, 508.49438524728265, 0.495, 6.431836734693878, 22838.606434230038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 24703.525477363015, 1097.92092260418, 0.495, 5.659591836734694, 22838.606434230038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 24652.15979250396, 1139.5075200734182, 0.495, 5.302040816326531, 22838.606434230038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 25318.50838572164, 1823.363642349725, 0.5, 6.01795918367347, 22845.01957302723);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 24008.94331794103, 1249.980195057797, 0.5, 3.5861224489795918, 22845.01957302723);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 24085.366450311612, 1043.1598430075555, 0.5, 3.620408163265306, 22845.01957302723);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 24826.387765982272, 902.2584756712793, 0.495, 7.191836734693878, 22679.651204549686);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 23843.056912744185, 1217.14940970691, 0.495, 2.270204081632653, 22679.651204549686);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 23402.4277907107, 1095.6278475004144, 0.5, 2.323265306122449, 22414.651204549686);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 24431.396696060398, 1110.8768987041965, 0.5, 4.966530612244898, 22416.60339047974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 23546.9777133406, 1159.3390770456756, 0.5, 3.244081632653061, 22416.60339047974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 23428.082410978117, 1061.458463964961, 0.5, 3.8587755102040817, 22416.60339047974);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 22931.55652198724, 612.3422998984847, 0.5, 2.9224489795918367, 22607.90660683959);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 23162.90974774926, 874.1941964316354, 0.5, 2.9804081632653063, 22607.90660683959);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 23283.88961437696, 1003.5498209733744, 0.5, 2.9885714285714284, 22607.90660683959);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 25022.44699773638, 1031.6786474971527, 0.5, 4.593469387755102, 22924.698004966587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 24156.043500624317, 979.0157987575554, 0.5, 2.3624489795918366, 22924.698004966587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 24332.36377002886, 1121.8341002777504, 0.5, 3.2048979591836733, 22924.698004966587);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 25295.611575140836, 1678.0352595184825, 0.5, 3.4808163265306122, 22681.746693046538);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 23571.807067105558, 1321.6969324714094, 0.5, 2.7208163265306125, 22681.746693046538);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 23422.11547019038, 1227.0111630044632, 0.5, 2.1746938775510203, 22681.746693046538);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 23499.733944519645, 944.3819144867354, 0.5, 2.3755102040816327, 22766.63336735944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 23434.89336735943, 941.8440403413563, 0.5, 1.9175510204081632, 22766.63336735944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 23494.40767604557, 1002.1746546752449, 0.5, 2.0873469387755104, 22766.63336735944);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 24543.09462299609, 1118.1413562930516, 0.5, 4.680816326530612, 22895.353644654955);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 23847.610095703276, 1123.6324861901708, 0.5, 3.4506122448979593, 22895.353644654955);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 23784.1986467753, 1036.5801590873036, 0.5, 2.8620408163265307, 22895.353644654955);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 24880.933586151677, 1190.385525681188, 0.5, 5.412244897959184, 22871.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 24361.937492436013, 556.0363382686002, 0.5, 2.3216326530612243, 22871.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 23981.134307693308, 737.1871503550855, 0.5, 1.3110204081632653, 22871.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 26148.118076747793, 534.9616040497566, 0.495, 3.8824489795918367, 23032.577021660512);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 24386.790552362472, 1054.043603050873, 0.495, 2.786938775510204, 23032.577021660512);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 24076.597021660513, 1026.8945952705749, 0.495, 1.7869387755102042, 23032.577021660512);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 24324.590916786765, 924.7414335397166, 0.5, 3.173877551020408, 23040.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 24265.107109997756, 1101.972757510681, 0.5, 2.789387755102041, 23040.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 24018.74226955008, 985.8255423755259, 0.5, 1.9559183673469387, 23040.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 24797.644331674062, 1086.15577531382, 0.5, 3.2914285714285714, 23139.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 24331.92226955008, 1092.7105875588766, 0.5, 2.8987755102040818, 23139.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24459.08226955008, 1135.6194211952875, 0.5, 2.873469387755102, 23139.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 25577.24403819655, 524.339755781293, 0.5, 3.5183673469387755, 22907.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 24211.232191934305, 886.8511845317946, 0.5, 2.679183673469388, 22907.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 24140.30677220349, 953.5985962298489, 0.5, 2.088979591836735, 22907.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 24869.34974134617, 367.6549019959562, 0.495, 4.34530612244898, 22838.466646745885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 23377.886646745887, 939.8634527397686, 0.495, 1.5853061224489795, 22838.466646745885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 23460.35615920197, 918.8659741575713, 0.495, 2.222857142857143, 22838.466646745885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 25174.52438170991, 843.095077053049, 0.5, 2.9183673469387754, 22673.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 24743.654995789373, 2146.439174487995, 0.5, 1.9183673469387754, 22673.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 24774.428592582393, 2186.366544046826, 0.5, 1.6285714285714286, 22673.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 24735.302192605683, 874.7794089469263, 0.5, 2.039183673469388, 23095.974672561064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 24279.413988842432, 1042.4369986073398, 0.5, 2.9738775510204083, 23095.974672561064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 24570.87528737451, 898.8517592199171, 0.5, 2.5338775510204083, 23095.974672561064);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 24190.95922506365, 889.7289880930803, 0.5, 2.7012244897959183, 22904.33453951564);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 23033.338848717034, 452.60563049205734, 0.5, 0.5755102040816327, 22904.33453951564);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 23010.878848717035, 396.38145600121413, 0.5, 0.4669387755102041, 22904.33453951564);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 23146.38752994886, 767.0799067353875, 0.5, 0.8416326530612245, 22699.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 23041.835418298306, 802.0999428497364, 0.5, 0.8759183673469387, 22699.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 22954.893361463823, 710.3127084518608, 0.5, 0.6669387755102041, 22699.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 23780.38919443726, 999.3474109241555, 0.5, 2.376326530612245, 22929.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 23412.81668977113, 829.1226454277562, 0.5, 1.3159183673469388, 22929.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 23186.511109992185, 601.4270266913003, 0.5, 1.0579591836734694, 22929.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 23833.363436078307, 701.6455002417989, 0.5, 1.393469387755102, 23381.691526561895);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 23267.812239830546, 280.59728356122855, 0.505, 0.4710204081632653, 23209.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 23396.622269550073, 522.7265816693022, 0.505, 0.9493877551020408, 23209.942269550076);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 25105.51374140041, 997.0864696889599, 0.5, 4.0718367346938775, 23652.553247100637);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 24112.233907997364, 1169.1881403004872, 0.55, 2.1053061224489795, 23316.553247100637);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 24276.23643098865, 1192.3820436720841, 0.55, 2.3526530612244896, 23316.553247100637);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 25377.269494628916, 329.1148936266006, 0.5, 1.6073469387755102, 23334.86243437528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 24211.293484037986, 1043.7745272497466, 0.5, 1.8783673469387756, 23334.86243437528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 24232.708862208223, 968.4911730531371, 0.5, 1.5820408163265307, 23334.86243437528);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 24925.048955041046, 915.7086093219493, 0.5, 3.1551020408163266, 23486.93675888043);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 24468.475992277377, 965.0542970269267, 0.5, 1.7844897959183674, 23486.93675888043);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 24438.281316921715, 988.2596620913525, 0.5, 1.766530612244898, 23486.93675888043);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 24550.65982804091, 1457.3791641316377, 0.5, 1.8432653061224489, 23348.55523565426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 24821.79239984825, 1408.8515720864273, 0.5, 2.954285714285714, 23348.55523565426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 24943.03243422483, 1379.2778955551858, 0.5, 2.9951020408163265, 23348.55523565426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 23598.463826020914, 426.27130576951674, 0.5, 1.633469387755102, 23047.183826020908);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 23066.883826020916, 139.30003589374988, 0.5, 0.12, 23047.183826020908);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 23192.097316805317, 422.53564888158746, 0.5, 0.6995918367346938, 23047.183826020908);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 23424.771773650646, 125.34384696171378, 0.5, 0.31755102040816324, 23291.145594869973);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 23315.346359492993, 171.12524774836007, 0.5, 0.12, 23291.145594869973);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 23302.825594869973, 82.59007204258872, 0.5, 0.12, 23291.145594869973);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 23616.081910652545, 113.1724357944908, 0.5, 0.2, 23438.364451144647);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 23468.873136292714, 155.2361905220537, 0.5, 0.23918367346938776, 23438.364451144647);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23438.36445114462, 2.939930839208568E-11, 0.5, 0.0, 23438.364451144647);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 24012.674110695054, 336.40703771942634, 0.5, 1.8538775510204082, 23303.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 23303.3879115671, 0.0, 0.5, 0.0, 23303.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 23340.2679115671, 182.50866795182918, 0.5, 0.23510204081632652, 23303.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 23324.5879115671, 149.90663761154806, 0.5, 0.12, 23303.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 23194.72727457364, 299.3845069304333, 0.5, 0.12, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 23172.7479115671, 143.96694064958106, 0.5, 0.12, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 23172.7479115671, 143.96694064958103, 0.5, 0.12, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 23425.811617275565, 1.102474064703213E-11, 0.5, 0.0, 23425.811617275554);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 23425.811617275565, 1.102474064703213E-11, 0.5, 0.0, 23425.811617275554);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 23425.811617275565, 1.102474064703213E-11, 0.5, 0.0, 23425.811617275554);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 23210.169988430986, 188.3549940389015, 0.5, 0.12, 23183.532569719926);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 23183.532569719933, 7.34982709802142E-12, 0.5, 0.0, 23183.532569719926);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 23183.532569719933, 7.34982709802142E-12, 0.5, 0.0, 23183.532569719926);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 23400.961971507877, 0.0, 0.5, 0.0, 23400.961971507877);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 23400.961971507877, 0.0, 0.5, 0.0, 23400.961971507877);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 23400.961971507877, 0.0, 0.5, 0.0, 23400.961971507877);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 23152.3879115671, 0.0, 0.5, 0.0, 23152.3879115671);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 49, 72, 67, 84, 43, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 91, 7, 41, 88, 30, 79, 55, 96, 74, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 86, 50, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 42, 2, 28, 45, 33, 82, 54, 6, 56, 8, 19, 11, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 86, 50, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94, 12, 75, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 24, 80, 68, 72, 49, 84, 67, 43, 63, 39, 53, 1, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 38, 29, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 54, 82, 33, 45, 28, 2, 42, 40, 70, 99, 13, 47, 29, 38, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 53, 39, 63, 68, 43, 49, 72, 67, 84, 80, 24, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 82, 54, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 43, 49, 72, 67, 84, 80, 24, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 38, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 80, 24, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 19, 11, 54, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 94, 12, 81, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 67, 84, 33, 82, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 19, 11, 54, 82, 33, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 67, 84, 28, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 14, 16, 10, 31, 46, 62, 5, 48, 89, 9, 83, 71, 73, 20, 58, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 42, 2, 45, 28, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 67, 84, 72, 43, 1, 53, 39, 63, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 14, 16, 10, 31, 46, 71, 20, 58, 73, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 84, 67, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 44, 97, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 49, 84, 67, 72, 43, 1, 53, 39, 63, 68, 80, 24, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 88, 30, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 89, 48, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 38, 95, 77, 51, 4, 36, 12, 32, 75, 94, 81, 43, 49, 84, 67, 72, 1, 39, 53, 63, 68, 80, 24, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 83, 9, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 63, 39, 53, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 17, 23, 37, 98, 35, 9, 46, 62, 5, 48, 89, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 88, 30, 79, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 99, 40, 70, 47, 29, 38, 51, 77, 95, 4, 36, 32, 12, 75, 94, 81, 1, 53, 39, 63, 43, 49, 72, 84, 67, 68, 80, 24, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 20, 71, 83, 9, 89, 48, 5, 62, 46, 73, 58, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 67, 84, 72, 68, 80, 24, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 3, 64, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 3, 64, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 72, 63, 53, 39, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 72, 63, 53, 39, 68, 80, 24, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 67, 84, 72, 63, 53, 39, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 37, 35, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 39, 53, 63, 43, 49, 67, 84, 72, 68, 80, 24, 19, 26, 85, 34, 59, 61, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 64, 3, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 63, 39, 53, 1, 43, 49, 72, 84, 67, 68, 80, 24, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 37, 35, 98, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 84, 67, 72, 63, 53, 39, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 1, 63, 39, 53, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 75, 12, 94, 81, 49, 72, 43, 1, 53, 39, 63, 68, 80, 24, 67, 84, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 67, 84, 80, 24, 19, 26, 85, 34, 61, 59, 76, 97, 22, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 67, 84, 80, 24, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 39, 53, 63, 68, 72, 43, 49, 84, 67, 80, 24, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 84, 67, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 87, 15, 93, 21, 69, 65, 25, 64, 3, 52, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 84, 67, 80, 24, 19, 85, 34, 26, 61, 59, 76, 22, 97, 90, 44, 31, 14, 16, 10, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 80, 24, 19, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 49, 43, 67, 84, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 68, 72, 43, 49, 67, 84, 80, 24, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 72, 68, 80, 24, 84, 67, 19, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 93, 87, 15, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 37, 98, 23, 17, 93, 21, 87, 15, 69, 25, 64, 65, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 93, 21, 87, 15, 69, 65, 3, 64, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 52, 78, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 96, 74, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 85, 26, 34, 61, 76, 59, 22, 97, 44, 90, 46, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 97, 22, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 34, 85, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 64, 25, 65, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 44, 90, 97, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 5, 48, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 79, 30, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 52, 78, 87, 93, 21, 15, 69, 65, 64, 25, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 46, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 5, 89, 48, 62, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 96, 74, 18, 89, 48, 5, 46, 62, 91, 55, 79, 30, 88, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 25, 64, 65, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 98, 35, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 37, 98, 35, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 96, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 17, 23, 37, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 87, 52, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 25, 65, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 74, 18, 96, 55, 79, 30, 88, 41, 91, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 25, 65, 3, 18, 74, 7, 41, 88, 30, 79, 55, 96, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 88, 30, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 41, 88, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 30, 79, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 60, 50, 86, 8, 6, 56, 11, 54, 82, 33, 28, 45, 42, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 1, 53, 39, 63, 43, 49, 84, 67, 72, 68, 80, 24, 19, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 46, 62, 5, 48, 89, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(23088.879421201884);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(23088.879421201884);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 32017.634697867114, 2691.8294718872035, 0.0, 54.50775510204082, 22806.71991709633);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 25963.85111944969, 2279.4221991462664, 0.5, 6.7975510204081635, 22517.580715886936);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 25514.483008791114, 2253.530777184694, 0.5, 7.150204081632653, 22517.580715886936);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 28207.911421627836, 1863.4279732467282, 0.5, 14.511020408163265, 22596.135165323023);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 25058.379562218754, 2116.3395992551386, 0.5, 6.060408163265306, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 24722.056632405467, 2165.639525738759, 0.5, 5.264489795918367, 22201.116574898733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 30041.78838116087, 2368.6523064845733, 0.49, 11.953469387755103, 22994.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 25443.833024965552, 2224.8874016346317, 0.495, 4.525714285714286, 22922.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 25787.020093351166, 2341.235325209952, 0.495, 4.17795918367347, 22922.915321501518);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 27156.337816351388, 2263.763391709166, 0.495, 5.7942857142857145, 23127.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 24796.413985320778, 1714.113397495118, 0.495, 3.6122448979591835, 23127.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 23866.560049911208, 1018.8773218718269, 0.5, 2.433469387755102, 23127.138898153906);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 25000.88579802576, 1542.453191476995, 0.5, 3.996734693877551, 22945.320675727777);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 24660.599351826644, 1437.3318350814147, 0.5, 3.7616326530612243, 22945.320675727777);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 24440.975606230433, 1135.4331465167338, 0.5, 3.3877551020408165, 22945.320675727777);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 25002.945771359136, 1145.7205439476047, 0.5, 4.417959183673469, 23063.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 24438.42960627193, 1149.8036988623794, 0.5, 3.8514285714285714, 23063.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 24297.538125370596, 1164.1827506764173, 0.5, 4.146938775510204, 23063.750720660442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 24611.804537262917, 1101.7269622788556, 0.5, 5.604081632653061, 22755.975307162553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 24306.313389443327, 1244.7947025988744, 0.5, 3.133877551020408, 22755.975307162553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 24431.135307162545, 1077.878573298268, 0.5, 3.650612244897959, 22755.975307162553);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 25397.58660993372, 869.5974439643841, 0.5, 6.152653061224489, 22971.06990145684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 24185.869901456826, 1200.2294508525765, 0.5, 2.3893877551020406, 22971.06990145684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 23944.869901456826, 1179.7161367317588, 0.5, 1.7763265306122449, 22971.06990145684);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 24953.069679595927, 2272.3229985006487, 0.5, 2.189387755102041, 23088.879421201884);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 23173.4632721176, 307.126382964187, 0.5, 0.5126530612244898, 23088.879421201884);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 23088.879421201887, 3.67491354901071E-12, 0.5, 0.0, 23088.879421201884);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 23088.879421201887, 3.67491354901071E-12, 0.5, 0.0, 23088.879421201884);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 23100.29942120189, 80.7515944115036, 0.5, 0.12, 23088.879421201884);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 23088.879421201887, 3.67491354901071E-12, 0.5, 0.0, 23088.879421201884);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 18, 96, 74, 91, 7, 41, 88, 30, 79, 55, 3, 64, 25, 65, 69, 21, 93, 15, 87, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 38, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 44, 90, 46, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 87, 93, 15, 21, 69, 65, 25, 64, 3, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 91, 7, 41, 88, 30, 79, 55, 96, 89, 48, 5, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 45, 28, 33, 54, 82, 8, 6, 86, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 44, 90, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 19, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 89, 48, 5, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 19, 85, 34, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 40, 70, 13, 28, 2, 42, 45, 33, 82, 54, 6, 8, 86, 56, 11, 26, 34, 85, 19, 61, 59, 76, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 6, 8, 86, 56, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 65, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 96, 18, 74, 55, 79, 30, 41, 88, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 58, 20, 73, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 25, 64, 3, 74, 18, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 65, 25, 64, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 27, 92, 66, 57, 50, 60, 24, 80, 68, 63, 39, 53, 43, 1, 49, 72, 67, 84, 29, 38, 4, 36, 32, 75, 12, 94, 81, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 45, 28, 33, 82, 54, 11, 6, 8, 86, 56, 19, 85, 26, 34, 61, 59, 76, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 23, 37, 17, 78, 52, 93, 87, 15, 21, 69, 3, 64, 25, 65, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 46, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(29913.22546796049);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(29913.22546796049);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 129, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 40016.22976406926, 2379.356272740218, 0.0, 81.43836734693878, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 34030.1760569372, 1524.3009950695932, 0.0, 32.562448979591835, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 34034.09169778277, 1760.5393642660229, 0.0, 17.725714285714286, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 37383.580555738816, 2193.327179876958, 0.49, 33.118367346938776, 29604.92523117799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 32600.115855638058, 1725.2904324997585, 0.49, 18.153469387755102, 29604.92523117799);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 31220.179316945934, 2228.137179810291, 0.5, 10.315918367346939, 28424.679044494464);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 34802.86876792594, 2260.919454518213, 0.5133333333333333, 20.191836734693876, 28875.685957911268);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 33148.87277963006, 2363.9577797323286, 0.5133333333333333, 16.555102040816326, 28875.685957911268);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 33473.70109304469, 2200.2204142058845, 0.5133333333333333, 15.66530612244898, 28875.685957911268);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 38110.6712683616, 2081.6933159037003, 0.4866666666666667, 34.6, 28857.145297295225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 30979.830898901786, 1931.7643275507698, 0.4866666666666667, 11.888979591836735, 28857.145297295225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 30694.74739106109, 2044.9239308708695, 0.4866666666666667, 10.41469387755102, 28857.145297295225);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 35888.684723990664, 2231.0689069532286, 0.49333333333333335, 21.844897959183672, 29162.49944994569);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 34349.33867193555, 1903.7029589772271, 0.49333333333333335, 17.812244897959182, 29162.49944994569);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 34613.7931674649, 1621.232396715258, 0.49333333333333335, 17.63673469387755, 29162.49944994569);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 36002.442079736895, 1751.6736796978066, 0.5233333333333333, 30.70530612244898, 29321.7438402466);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 33548.44038183163, 2003.9937213773517, 0.5233333333333333, 16.20326530612245, 29321.7438402466);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 34093.14157038474, 1861.3078902025902, 0.5233333333333333, 18.119183673469387, 29321.7438402466);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 36347.6284307414, 1919.0612858393138, 0.5333333333333333, 17.984489795918368, 33200.92052763999);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 33577.63685535138, 1703.8640817861012, 0.55, 19.434285714285714, 28797.698795731005);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 32817.483682531616, 1888.6979442890745, 0.55, 15.663673469387755, 28797.698795731005);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 35431.01822668934, 2353.4742697055995, 0.56, 22.917551020408162, 28671.373286608996);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 30927.63009759306, 2689.9883218517602, 0.56, 6.529795918367347, 28671.373286608996);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 30946.677222891813, 2174.1278310197285, 0.56, 8.668571428571429, 28671.373286608996);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 33689.79921220722, 2081.6168182769143, 0.49666666666666665, 12.88326530612245, 29070.34827269978);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 33514.9353252657, 2501.9149884073768, 0.49666666666666665, 10.740408163265306, 29070.34827269978);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 32789.68291900931, 2888.997872825272, 0.49666666666666665, 11.10204081632653, 29070.34827269978);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 37154.026660385185, 2213.806874709632, 0.49333333333333335, 26.366530612244897, 29453.082435111806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 32184.03802437833, 2227.7454634102173, 0.49333333333333335, 16.209795918367348, 29453.082435111806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 32197.64270090512, 2154.0100359356884, 0.5, 14.237551020408164, 29453.082435111806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 36518.44705313239, 1444.437549885816, 0.49666666666666665, 23.088979591836736, 29554.559823798685);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 33227.48586529246, 2541.1509946295732, 0.49666666666666665, 12.755918367346938, 29554.559823798685);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 32556.95487686703, 2958.0321531701697, 0.49666666666666665, 8.071020408163266, 29554.559823798685);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 36182.9076846074, 2749.675206672452, 0.49333333333333335, 23.78857142857143, 29005.848249330073);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 33887.509922081146, 2098.094004784367, 0.49333333333333335, 13.649795918367348, 29005.848249330073);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 33715.90158231496, 2063.837649652357, 0.49333333333333335, 13.937959183673469, 29005.848249330073);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 36160.094960534865, 1916.7767400898858, 0.49333333333333335, 18.217142857142857, 29373.922332147446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 32161.398044001682, 2453.769582002247, 0.49333333333333335, 11.22938775510204, 29373.922332147446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 31835.367823115306, 2465.2432419814613, 0.49333333333333335, 7.81061224489796, 29373.922332147446);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 34789.44368719219, 1835.0511818329883, 0.5, 15.440816326530612, 29586.130350618667);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 33989.50830685788, 1470.3322572628222, 0.5, 11.388571428571428, 29586.130350618667);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 32157.257178445667, 1663.1147661666905, 0.5066666666666667, 10.01469387755102, 29339.13737457945);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 38306.99284916343, 2116.9789100199323, 0.49333333333333335, 25.295510204081634, 29852.473805066365);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 34553.7905286009, 2292.991407479252, 0.49333333333333335, 13.736326530612246, 29852.473805066365);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 34126.62810308917, 2287.658745073417, 0.49333333333333335, 14.741224489795918, 29852.473805066365);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 36846.92214492574, 1590.263499388896, 0.49666666666666665, 22.41795918367347, 30069.11154613885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 32976.140718457646, 2037.336412961821, 0.49666666666666665, 10.355102040816327, 30069.11154613885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 32659.581814633348, 1578.3168331553475, 0.49666666666666665, 10.624489795918368, 30069.11154613885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 35957.77636520194, 1897.3333120387413, 0.53, 21.572244897959184, 29246.379361339426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 30767.680572110938, 2071.3385022550933, 0.53, 7.020408163265306, 29246.379361339426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 30485.358231203652, 1612.7492421922975, 0.53, 4.849795918367347, 29246.379361339426);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 34122.291713216946, 2586.7499002805316, 0.5, 9.28734693877551, 28694.35594098749);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 32005.74062926371, 2270.1839804420933, 0.5, 8.251428571428571, 28694.35594098749);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 31341.5878571744, 2365.908583505728, 0.5, 12.750204081632653, 28694.35594098749);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 33174.44144568653, 2160.462509981172, 0.5, 14.777959183673469, 28732.68206882307);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 30864.097059137974, 1640.9078209084487, 0.5, 12.440816326530612, 28732.68206882307);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 30873.472657009093, 1665.3960861616777, 0.5, 12.107755102040816, 28732.68206882307);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 35799.66740815259, 2017.2368548151796, 0.49, 23.306938775510204, 29400.942895146465);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 33135.79172315705, 1938.9703513718225, 0.49, 8.95265306122449, 29400.942895146465);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 31411.563253664863, 2058.354609825671, 0.5, 7.204081632653061, 29400.942895146465);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 34525.25959842434, 2012.653124957417, 0.5, 19.62857142857143, 29374.609337235837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 32283.512435681623, 2376.354312813151, 0.5, 6.543673469387755, 29374.609337235837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 31115.597073081044, 1881.379641060232, 0.5, 6.45469387755102, 29374.609337235837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 34231.22856601279, 2211.4670487137682, 0.5133333333333333, 13.928163265306122, 28376.896824160125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 30774.35138347404, 2601.3321922131863, 0.5133333333333333, 6.604897959183673, 28376.896824160125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 30707.70164472383, 2181.3794237963734, 0.5133333333333333, 6.768163265306122, 28376.896824160125);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 34562.0391313459, 1208.6600272432922, 0.49666666666666665, 13.704489795918366, 29374.43946161142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 33266.27551980824, 1655.061053404821, 0.49666666666666665, 7.013877551020408, 29374.43946161142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 32615.317303346437, 967.0567839730866, 0.49666666666666665, 7.678367346938775, 29374.43946161142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 33789.56956305256, 1262.9359429544993, 0.52, 12.26530612244898, 32345.897815667224);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 31583.979069031873, 2551.702891868687, 0.5133333333333333, 8.827755102040816, 29238.031298816164);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 30716.704545190612, 1865.11866432656, 0.5, 5.1420408163265305, 28924.22284692098);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 33518.28270789679, 2231.3833338460636, 0.52, 12.089795918367347, 29442.28169000745);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 32426.085650096204, 2139.2732914222815, 0.52, 10.213877551020408, 29442.28169000745);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 32319.889276673654, 2074.21057195156, 0.5033333333333333, 8.611428571428572, 29423.28169000745);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 34543.804361637616, 1043.5892657648621, 0.5, 14.297142857142857, 29196.5888077805);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 32599.956498570096, 1053.3819225615105, 0.5, 8.124081632653061, 29196.5888077805);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 30748.695497132805, 1838.3678518475015, 0.5166666666666667, 6.955918367346939, 29144.5888077805);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 32850.62171984501, 2050.5250412820874, 0.5, 9.206530612244897, 29180.786756131347);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 31244.399165940406, 2241.1641470574214, 0.5, 7.68, 29180.786756131347);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 31126.06199038742, 2385.9892788619386, 0.5, 5.240816326530612, 29180.786756131347);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 34588.22304058459, 3335.834442747389, 0.49666666666666665, 11.831836734693878, 28653.28932695358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 30780.02586376301, 2105.0131279798393, 0.49666666666666665, 7.726530612244898, 28653.28932695358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 30629.898045071634, 2034.054835165227, 0.49666666666666665, 8.366530612244897, 28653.28932695358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 33516.16821815994, 1478.621644342905, 0.49666666666666665, 12.896326530612244, 29492.803515871165);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 30946.971747290114, 1705.2320813672131, 0.5333333333333333, 7.888163265306122, 28913.495020420505);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 31267.838277913266, 1717.9966914096492, 0.5333333333333333, 7.728163265306122, 28913.495020420505);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 31665.33129449234, 1725.948950985617, 0.5, 9.859591836734694, 28556.920252728545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 30481.514085595365, 1962.177840256115, 0.5, 6.060408163265306, 28556.920252728545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 29955.640252728528, 1382.8541918504525, 0.5, 4.541224489795918, 28556.920252728545);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 32458.02362157591, 1603.6281693941721, 0.5, 13.66530612244898, 28979.015749084967);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 30212.32367872087, 1855.9793149072857, 0.5533333333333333, 5.184489795918368, 28675.744435192835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 30592.690601162565, 1965.7395922827557, 0.5533333333333333, 6.451428571428571, 28675.744435192835);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 32415.540762420955, 1461.4738239100911, 0.5, 10.794285714285714, 28903.880574958708);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 30445.933986680328, 1774.0593686326883, 0.5, 5.519183673469388, 28903.880574958708);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 30420.217013784357, 1789.951136566484, 0.5066666666666667, 6.023673469387755, 28678.880574958708);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 32696.660936464807, 1981.791833846385, 0.5033333333333333, 9.429387755102042, 28742.878435195387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 30745.50410675979, 1983.8978256966532, 0.5033333333333333, 6.589387755102041, 28742.878435195387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 31452.284450209736, 2166.9755367914418, 0.5033333333333333, 7.325714285714286, 28742.878435195387);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 35882.86284606972, 1587.7132669501061, 0.49666666666666665, 18.153469387755102, 29250.988062233817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 32070.166293943756, 2330.426775111852, 0.49666666666666665, 9.075918367346938, 29250.988062233817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 31949.473146841683, 2308.2850387269455, 0.49666666666666665, 7.681632653061224, 29250.988062233817);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 35131.22786324916, 2899.940441819198, 0.5, 13.553469387755102, 28917.945590059513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 31692.840892323195, 1967.8137161920727, 0.5, 10.297142857142857, 28917.945590059513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 31308.977098106057, 1990.340017330803, 0.5, 7.856326530612245, 28917.945590059513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 33787.72442658726, 1577.7389721983113, 0.49666666666666665, 22.770612244897958, 29768.23559382297);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 31563.081241773114, 1589.3892707951675, 0.49666666666666665, 5.07265306122449, 29768.23559382297);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 31629.788513876836, 1676.1452867203072, 0.49666666666666665, 4.513469387755102, 29768.23559382297);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 34286.457237355455, 1269.1537751207757, 0.49666666666666665, 11.955102040816326, 29069.899431060865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 31139.84556855292, 2085.890291958273, 0.49666666666666665, 10.80734693877551, 29069.899431060865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 30969.80355884215, 1827.20607964467, 0.49666666666666665, 12.34530612244898, 29069.899431060865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 33392.94115303768, 1719.0954999689654, 0.5, 20.08734693877551, 29554.206268774797);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 32352.584577067842, 2049.818951619, 0.5, 11.65469387755102, 29554.206268774797);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 32189.845161541132, 1741.2865511876118, 0.52, 10.77061224489796, 29374.534043333464);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 34653.41871325715, 1393.4417579576636, 0.5033333333333333, 25.09387755102041, 30152.33084368859);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 31672.07434792895, 2003.1445685425251, 0.5266666666666666, 6.980408163265306, 29854.790051505777);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 30981.64903496593, 1832.3025924279323, 0.5, 4.7273469387755105, 29761.790051505777);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 33520.06635617346, 1709.2931926744104, 0.49666666666666665, 14.44, 29366.105501971353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 32701.2856725142, 1929.41836073443, 0.49666666666666665, 8.224489795918368, 29366.105501971353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 32653.096297612916, 2038.6578328952892, 0.5, 5.699591836734694, 29366.105501971353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 33026.93047703462, 2073.9790953324555, 0.5, 6.4, 29081.786308121358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 30448.57207846962, 1888.011916225486, 0.5, 3.013061224489796, 29081.786308121358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 29802.301020818777, 1589.140812535158, 0.5, 2.4155102040816328, 29081.786308121358);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 31182.704717440083, 2183.021926602392, 0.5, 4.596734693877551, 29035.81807881809);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 30834.84990703331, 2385.223556985728, 0.5, 4.890612244897959, 29035.81807881809);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 30646.848598212164, 2379.552697235536, 0.5, 4.94204081632653, 29035.81807881809);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 30549.96266011138, 1621.6305616035584, 0.5, 3.2742857142857145, 29161.891737945196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 29705.03208005818, 1355.4835473625237, 0.5, 1.6, 29161.891737945196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 30303.956751965223, 1718.365085553217, 0.5, 2.595918367346939, 29161.891737945196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 34858.71650734921, 1330.912418305375, 0.5, 10.051428571428572, 29653.46574593707);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 30749.574267472268, 1583.0731320899781, 0.5, 3.5526530612244898, 29653.46574593707);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 31238.078909296873, 2243.616939026788, 0.5, 3.1746938775510203, 29653.46574593707);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 35478.26392982398, 1608.025232785996, 0.51, 15.209795918367346, 29972.163902099557);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 30664.78350095463, 1258.9859808139172, 0.51, 2.5942857142857143, 29707.163902099557);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 30978.51939718414, 1738.2836759303736, 0.51, 3.526530612244898, 29707.163902099557);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 34691.523310058146, 998.2978400318084, 0.51, 10.50530612244898, 29776.23724899436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 31081.319606108187, 2178.794408828919, 0.51, 4.009795918367347, 29776.23724899436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 31123.10397337158, 2035.819555989968, 0.51, 4.393469387755102, 29776.23724899436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 31968.981243274655, 1935.7330159918968, 0.5, 6.438367346938776, 29266.615156507643);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 31121.68296520015, 2266.9630420002172, 0.5, 5.226938775510204, 29266.615156507643);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 30665.222665534526, 1978.8279626089602, 0.5, 4.183673469387755, 29266.615156507643);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 34509.593403176514, 1373.4703022527826, 0.49666666666666665, 9.648979591836735, 29697.64166073278);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 30585.002034859222, 1504.3508511988869, 0.49666666666666665, 2.803265306122449, 29697.64166073278);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 30641.23811569856, 1498.737338275574, 0.49666666666666665, 4.378775510204082, 29697.64166073278);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 31468.588498475343, 1890.34761956907, 0.5033333333333333, 4.350204081632653, 29600.51864966574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 32472.443087705626, 1996.7751938932895, 0.5033333333333333, 6.111836734693878, 29600.51864966574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 30478.2745367976, 1002.8963314343505, 0.5033333333333333, 1.0685714285714285, 29600.51864966574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 33306.71808030752, 1709.4077300933961, 0.49333333333333335, 10.777142857142858, 29706.09668766841);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 30894.116287662488, 1569.9300582354765, 0.49333333333333335, 3.1387755102040815, 29706.09668766841);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 31338.44527791936, 2267.904981386689, 0.5, 4.050612244897959, 29706.09668766841);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 34819.51044291018, 1496.9826739401578, 0.49666666666666665, 6.634285714285714, 29766.2753621345);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 30664.47934868509, 1648.1160641498614, 0.49666666666666665, 3.4514285714285715, 29766.2753621345);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 30959.526941900687, 1868.779490078592, 0.49666666666666665, 3.246530612244898, 29766.2753621345);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 34352.92389215819, 1586.2635908626755, 0.49666666666666665, 8.649795918367348, 29918.81385553503);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 30734.2056811771, 1511.3599426990143, 0.49666666666666665, 2.324081632653061, 29918.81385553503);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 30767.264271779113, 1560.8089983272992, 0.49666666666666665, 2.419591836734694, 29918.81385553503);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 33294.2425154275, 2110.0154274147826, 0.5, 7.624489795918367, 29870.50810876055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 30791.458025769567, 1718.4849456241484, 0.5, 2.275918367346939, 29870.50810876055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 30677.410187273137, 1572.4839834413006, 0.5, 1.697142857142857, 29870.50810876055);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 32600.135645522092, 2040.7408367505373, 0.5, 7.62530612244898, 29802.01050785672);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 31283.88119873438, 1711.7467747026594, 0.5, 2.700408163265306, 29802.01050785672);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 31138.861883882186, 1637.074252529107, 0.5, 2.2946938775510204, 29802.01050785672);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 31756.313012629933, 2109.4434854834763, 0.5, 3.3812244897959185, 29924.62794985101);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 31388.048686429025, 2090.204211388129, 0.5, 3.5795918367346937, 29924.62794985101);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 32009.332445883087, 2360.6815537279144, 0.5, 4.978775510204081, 29924.62794985101);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 30796.69468321536, 1614.6253725312074, 0.5, 2.1183673469387756, 29579.22275414918);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 30268.40078220804, 1801.0154955148962, 0.5, 1.56, 29579.22275414918);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 30531.572997233136, 1837.7560357841332, 0.5, 2.113469387755102, 29579.22275414918);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 33909.02444549226, 2095.527957724565, 0.49333333333333335, 15.081632653061224, 29943.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 34022.856374415765, 408.5852721720023, 0.49333333333333335, 4.448979591836735, 29943.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 31941.765746168556, 510.5210130507199, 0.49333333333333335, 1.3404081632653062, 29943.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 32899.53326814725, 1385.5145101887144, 0.5033333333333333, 9.26530612244898, 29436.075874596492);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 29699.578982832154, 1027.3647718126374, 0.5033333333333333, 0.6759183673469388, 29436.075874596492);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 30297.265303306325, 1752.1360656520299, 0.5033333333333333, 1.8571428571428572, 29436.075874596492);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 31592.610735212686, 2083.861347107783, 0.5, 5.393469387755102, 29528.88902087071);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 30639.14012856328, 2084.303619419491, 0.5, 2.983673469387755, 29528.88902087071);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 30184.550912567196, 1579.133833324009, 0.5, 1.3265306122448979, 29528.88902087071);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 31412.207060193065, 1587.1484091250745, 0.49666666666666665, 1.9534693877551021, 29486.503200376457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 30010.231645756554, 1505.0204928279877, 0.49666666666666665, 1.0171428571428571, 29486.503200376457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 30137.598447495275, 1761.3917649870152, 0.49666666666666665, 1.0857142857142856, 29486.503200376457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 31877.324274276034, 1976.0851391193437, 0.49666666666666665, 5.37469387755102, 29503.555921968622);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 30961.07437496909, 2675.605665574591, 0.49666666666666665, 2.8114285714285714, 29503.555921968622);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 30727.134348546908, 2139.989408633292, 0.49666666666666665, 2.568979591836735, 29503.555921968622);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 34820.14890861044, 1434.1166672374422, 0.49666666666666665, 13.635918367346939, 29863.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 32187.84767024341, 2158.1381865858807, 0.49666666666666665, 5.484081632653061, 29863.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 32230.22643593152, 1933.302435826058, 0.49666666666666665, 5.499591836734694, 29863.24529551084);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 34452.214254385464, 2002.8262572652736, 0.5, 8.694693877551021, 30010.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 31315.468064317116, 1833.2566822413817, 0.5, 3.1542857142857144, 30010.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 31815.81050662384, 2237.4623912359507, 0.5, 3.7657142857142856, 30010.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 34094.4249649571, 1093.4259129086731, 0.49666666666666665, 9.191020408163265, 29731.115517945967);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 30742.324618143608, 1797.6106947242458, 0.49666666666666665, 1.6481632653061224, 29731.115517945967);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 30668.770924578355, 1702.1664187166832, 0.49666666666666665, 1.460408163265306, 29731.115517945967);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 31853.779917567932, 2077.3599620932655, 0.5, 1.9314285714285715, 30127.417789772775);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 31580.730704452406, 2381.068034694377, 0.5, 2.3159183673469386, 30127.417789772775);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 31879.515634883945, 2506.761180060868, 0.5, 2.817142857142857, 30127.417789772775);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 34361.71886439598, 4444.177591551861, 0.49666666666666665, 4.671836734693877, 29992.591903087836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 31654.478365221996, 1787.0290265935928, 0.49666666666666665, 3.0008163265306123, 29992.591903087836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 31735.051199816797, 1960.0949442799874, 0.49666666666666665, 3.5061224489795917, 29992.591903087836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 34759.72408444244, 1531.1692255702233, 0.49666666666666665, 5.920816326530613, 29779.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 30973.590858034873, 2272.4201228364846, 0.49666666666666665, 2.3918367346938774, 29779.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 30465.876151837176, 1328.2741426893617, 0.49666666666666665, 1.636734693877551, 29779.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 32355.522579377663, 1815.293902421986, 0.49666666666666665, 6.166530612244898, 29891.018448498977);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 30415.96611082213, 1281.829384864456, 0.49666666666666665, 1.7942857142857143, 29891.018448498977);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 30346.19888438535, 1394.2057420320625, 0.49666666666666665, 0.9428571428571428, 29891.018448498977);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 34301.4830958221, 1778.7675092430482, 0.49666666666666665, 4.755102040816326, 29839.94553383998);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 30860.50021550101, 1427.1452125977846, 0.49666666666666665, 1.7697959183673468, 29839.94553383998);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 31357.62494385224, 1719.7686478593469, 0.49666666666666665, 2.5085714285714285, 29839.94553383998);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 32582.188938177245, 3070.4962953500694, 0.5, 3.8677551020408165, 29826.68731850376);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 30923.991096432215, 1701.1898395812957, 0.5, 1.9877551020408164, 29826.68731850376);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 31114.879009919663, 1487.1838546250242, 0.5, 2.1412244897959183, 29826.68731850376);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 33306.93253283278, 1733.1612053235074, 0.49666666666666665, 5.363265306122449, 29619.59848099013);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 31544.330479837176, 1730.6817195511726, 0.49666666666666665, 3.3012244897959184, 29619.59848099013);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 31271.987055517504, 1825.042009876689, 0.49666666666666665, 2.9861224489795917, 29619.59848099013);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 32943.837674193805, 1668.6080692278679, 0.49666666666666665, 4.44734693877551, 30505.37043583531);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 32215.30148426324, 1690.0369916144937, 0.49666666666666665, 3.2751020408163267, 30505.37043583531);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 31818.71073949217, 1571.6419714448677, 0.49666666666666665, 2.577142857142857, 30505.37043583531);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 33579.546728415444, 1133.1351082672008, 0.49666666666666665, 4.876734693877551, 29645.654662213285);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 30914.46607198543, 1677.9126785436838, 0.49666666666666665, 2.3469387755102042, 29645.654662213285);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 30436.97558493109, 1433.9370934902638, 0.5, 2.008979591836735, 29604.87999897983);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 31044.934939739655, 1382.460599253824, 0.5, 2.195918367346939, 29743.751436556166);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 31040.168695616667, 1470.3909134907403, 0.5, 2.6677551020408163, 29743.751436556166);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 30572.64184290838, 1280.6461432209462, 0.5, 1.4808163265306122, 29743.751436556166);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 32700.536132096182, 2019.9267989255009, 0.5, 3.910204081632653, 29707.882050198143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 31099.62635766499, 1600.7378301141687, 0.5, 2.522448979591837, 29707.882050198143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 30718.46820843574, 1616.6497735023802, 0.5, 1.7379591836734694, 29707.882050198143);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 31958.803111636797, 1510.0616533995872, 0.5, 5.066938775510204, 29661.545256589863);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 31341.06709788234, 1573.3280284605999, 0.5, 2.947755102040816, 29661.545256589863);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 30896.157085934705, 1433.0518341198629, 0.5, 2.0906122448979594, 29661.545256589863);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 31993.284485178014, 1661.6779649069179, 0.5, 3.0481632653061226, 29821.323556759693);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 31128.306707714513, 1597.8200869544414, 0.5, 2.6563265306122448, 29821.323556759693);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 30837.32479990587, 1340.5514667751152, 0.5, 2.1444897959183673, 29821.323556759693);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 31484.175654680697, 1715.3465320727018, 0.5, 3.0326530612244897, 29580.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 30351.222453132294, 1341.1155574683464, 0.5, 1.44, 29580.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 30816.809980439997, 1768.0479286915784, 0.5, 2.289795918367347, 29580.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 31547.360575162304, 1641.9128329719708, 0.49666666666666665, 3.769795918367347, 30145.08419714618);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 31132.246282344815, 1427.582245671231, 0.49666666666666665, 2.1551020408163266, 30145.08419714618);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 31335.71633576409, 1458.7562489875247, 0.49666666666666665, 2.397551020408163, 30145.08419714618);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 32176.411816689382, 1679.3428282430812, 0.5, 4.118367346938776, 29994.87953817762);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 31509.983297101542, 1572.3283562878278, 0.5, 2.593469387755102, 29994.87953817762);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 31349.846984807507, 1605.6289257902006, 0.5, 2.733877551020408, 29994.87953817762);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 32638.099180659974, 1237.7140907334106, 0.49666666666666665, 3.9689795918367348, 29841.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 30557.960118502146, 1226.4012989594235, 0.49666666666666665, 1.7926530612244898, 29841.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 30684.08474967422, 1827.57930218517, 0.49666666666666665, 1.8244897959183672, 29841.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 31635.69752659799, 1753.1469026650655, 0.5, 3.6848979591836737, 29884.798956121704);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 30521.197688191747, 1589.9653456069177, 0.5, 1.196734693877551, 29884.798956121704);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 30216.99895612172, 910.9240878786507, 0.5, 0.7216326530612245, 29884.798956121704);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 30642.199122095793, 850.3817153132879, 0.49666666666666665, 0.8236734693877551, 30308.365533739467);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 30465.6199737148, 767.5933043807482, 0.49666666666666665, 0.31918367346938775, 30308.365533739467);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 30736.997473058254, 1211.0293143567435, 0.49666666666666665, 1.0530612244897959, 30308.365533739467);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 34120.037629254286, 1516.9382753073673, 0.49666666666666665, 4.768979591836735, 29912.28979948949);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 30559.589799489528, 1160.3522908046118, 0.49666666666666665, 1.633469387755102, 29912.28979948949);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 30301.569799489524, 978.0193863109257, 0.49666666666666665, 1.0546938775510204, 29912.28979948949);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 31623.349653669786, 1327.744952009339, 0.5, 3.763265306122449, 30208.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 30787.626766073106, 1104.0833431468566, 0.5, 2.1975510204081634, 30208.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 30871.21166358885, 1230.7583974358995, 0.5, 2.060408163265306, 30208.64575420567);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 31948.348273994918, 529.4604251081977, 0.49333333333333335, 1.8057142857142856, 30735.295045086423);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 31257.47619879171, 880.3908900524239, 0.49333333333333335, 2.9624489795918367, 30735.295045086423);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 30937.7334503831, 339.109291314828, 0.49333333333333335, 1.9730612244897958, 30735.295045086423);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 31035.52539465278, 393.8938913292696, 0.49666666666666665, 2.3991836734693877, 29812.10755454836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 31140.1875545484, 1446.4274615868753, 0.49666666666666665, 2.8114285714285714, 29812.10755454836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 31124.834245005924, 1439.088434310675, 0.49666666666666665, 2.463673469387755, 29812.10755454836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 32167.443425479993, 1501.0614267390827, 0.49666666666666665, 5.062857142857143, 30125.82681998412);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 30985.1739125327, 1087.627698612325, 0.49666666666666665, 3.3689795918367347, 30125.82681998412);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 30844.017831294852, 1016.9963604214406, 0.49666666666666665, 2.7077551020408164, 30125.82681998412);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 30429.36604441283, 736.0063211883105, 0.49333333333333335, 2.709387755102041, 29952.554238371442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 31141.572598721854, 1489.8493886377275, 0.49333333333333335, 2.2416326530612243, 29952.554238371442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 31274.14480367566, 1615.9455829457356, 0.49333333333333335, 2.396734693877551, 29952.554238371442);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 31645.727051714704, 1407.6511615703578, 0.5, 3.679183673469388, 30056.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 31182.877886453294, 1193.1834652551224, 0.5, 2.533061224489796, 30056.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 30150.765467960508, 536.7957544921685, 0.5233333333333333, 0.27918367346938777, 29713.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 30295.11505645518, 89.02184092156476, 0.52, 1.0751020408163265, 29928.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 30096.885467960503, 677.9421927677121, 0.52, 0.3575510204081633, 29928.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 30154.7649923597, 781.5303656171584, 0.5, 0.7453061224489796, 29907.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 30633.24304663766, 910.3826790972696, 0.5166666666666667, 0.9844897959183674, 30302.070862409513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 30363.1108624095, 431.6179792362686, 0.5166666666666667, 0.12, 30302.070862409513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 30414.353299255134, 557.8531196763066, 0.5166666666666667, 0.27918367346938777, 30302.070862409513);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 30056.116791436027, 431.6179792362687, 0.5, 0.12, 29995.076791436048);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 29995.076791436026, 2.204948129406426E-11, 0.5, 0.0, 29995.076791436048);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 29995.076791436026, 2.204948129406426E-11, 0.5, 0.0, 29995.076791436048);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 31463.799539675823, 1146.6760938103996, 0.49666666666666665, 1.1257142857142857, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 30236.245467960507, 374.90801538510766, 0.49666666666666665, 0.12, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 30183.22546796051, 2.204948129406426E-11, 0.49666666666666665, 0.0, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 30183.34546796051, 0.8485281374238577, 0.49666666666666665, 0.08, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 30185.026707670757, 11.9011182664448, 0.49666666666666665, 0.16, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 30299.166707670753, 566.0228751440561, 0.49666666666666665, 0.3942857142857143, 30183.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 30471.788919049282, 715.7246124148077, 0.49666666666666665, 0.5755102040816327, 30029.228919049317);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 29918.772842755792, 3.67491354901071E-11, 0.5066666666666667, 0.0, 29918.77284275583);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 29918.772842755792, 3.67491354901071E-11, 0.5066666666666667, 0.0, 29918.77284275583);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 31816.41238095023, 1286.8275741549494, 0.49666666666666665, 0.9616326530612245, 30189.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 30189.22546796051, 2.204948129406426E-11, 0.49666666666666665, 0.0, 30189.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 30189.22546796051, 2.204948129406426E-11, 0.49666666666666665, 0.0, 30189.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 30189.22546796051, 2.204948129406426E-11, 0.49666666666666665, 0.0, 30189.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 29913.225467960503, 1.469965419604284E-11, 0.49666666666666665, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 29913.225467960503, 1.469965419604284E-11, 0.49666666666666665, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 29913.225467960503, 1.469965419604284E-11, 0.5, 0.0, 29913.22546796049);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 112, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 148, 54, 82, 33, 134, 139, 129, 62, 5, 48, 89, 9, 83, 105, 133, 52, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 112, 71, 20, 73, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 64, 117, 123, 25, 128, 65, 3, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 66, 92, 27, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 19, 11, 26, 148, 82, 54, 33, 119, 114, 122, 42, 127, 135, 40, 70, 47, 99, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 134, 139, 8, 6, 116, 56, 144, 86, 124, 50, 24, 80, 60, 57, 107, 104, 141, 129, 62, 5, 48, 89, 9, 83, 105, 133, 52, 18, 74, 96, 138, 7, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 35, 37, 23, 110, 101, 98, 103, 17, 78, 136, 93, 87, 15, 21, 69, 52, 133, 105, 83, 9, 89, 48, 5, 62, 91, 7, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 18, 74, 96, 79, 30, 41, 121, 88, 137, 132, 147, 141, 27, 92, 130, 46, 90, 108, 31, 10, 16, 14, 44, 97, 22, 109, 76, 59, 61, 149, 19, 85, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 111, 131, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 68, 67, 84, 134, 139, 116, 6, 8, 56, 144, 86, 124, 50, 80, 24, 60, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 93, 87, 15, 21, 69, 52, 133, 105, 89, 48, 5, 62, 91, 7, 41, 30, 79, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 18, 74, 96, 138, 121, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 57, 107, 60, 24, 80, 124, 50, 86, 144, 56, 8, 6, 116, 139, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 134, 33, 45, 2, 40, 70, 99, 47, 13, 135, 127, 42, 122, 114, 119, 148, 82, 54, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 16, 14, 46, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 133, 52, 18, 74, 96, 138, 121, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 80, 24, 124, 50, 86, 144, 8, 56, 6, 116, 54, 82, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 1, 143, 63, 53, 39, 68, 72, 67, 84, 139, 134, 33, 45, 2, 40, 70, 99, 47, 13, 135, 127, 42, 122, 114, 119, 148, 11, 19, 26, 85, 34, 149, 59, 61, 76, 109, 22, 97, 108, 31, 10, 16, 14, 44, 90, 46, 130, 92, 27, 129, 91, 7, 41, 30, 79, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 78, 105, 89, 48, 5, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 103, 110, 101, 98, 37, 23, 17, 136, 133, 52, 18, 74, 96, 138, 121, 41, 30, 79, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 93, 21, 15, 87, 78, 105, 89, 48, 5, 62, 129, 91, 7, 88, 137, 132, 147, 141, 104, 66, 57, 107, 60, 80, 24, 124, 50, 86, 144, 8, 56, 6, 116, 54, 82, 33, 45, 2, 40, 70, 99, 47, 13, 135, 127, 42, 122, 114, 119, 148, 11, 19, 26, 85, 34, 149, 59, 61, 76, 109, 22, 97, 108, 31, 10, 16, 14, 44, 90, 130, 27, 92, 46, 68, 72, 67, 84, 139, 134, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 113, 1, 143, 63, 53, 39, 49, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 101, 103, 37, 23, 17, 136, 133, 52, 18, 74, 96, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 93, 21, 15, 87, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 24, 80, 67, 84, 139, 134, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 50, 124, 86, 144, 56, 6, 8, 116, 54, 82, 33, 45, 2, 135, 40, 70, 99, 47, 13, 127, 42, 122, 114, 119, 148, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 136, 133, 52, 18, 74, 96, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 21, 93, 15, 87, 78, 105, 89, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 24, 80, 67, 84, 139, 134, 28, 131, 111, 29, 120, 106, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 60, 50, 124, 86, 144, 56, 6, 8, 116, 54, 82, 33, 45, 2, 40, 70, 99, 47, 13, 135, 127, 42, 122, 119, 114, 148, 11, 19, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 3, 64, 117, 25, 123, 128, 65, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 68, 63, 39, 53, 1, 143, 43, 113, 72, 49, 115, 146, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 38, 100, 120, 29, 106, 111, 131, 45, 2, 28, 13, 99, 47, 70, 40, 135, 127, 42, 122, 114, 119, 148, 116, 8, 6, 56, 144, 86, 124, 50, 60, 24, 80, 67, 84, 139, 134, 33, 82, 54, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 31, 10, 14, 16, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 136, 78, 105, 89, 62, 5, 48, 74, 96, 138, 55, 142, 118, 3, 64, 128, 25, 123, 117, 65, 69, 21, 93, 15, 87, 52, 133, 18, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 57, 107, 68, 39, 63, 53, 1, 143, 113, 43, 72, 49, 67, 84, 95, 51, 77, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 6, 8, 56, 144, 86, 124, 50, 60, 24, 80, 134, 139, 116, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 3, 64, 128, 25, 123, 117, 65, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 68, 39, 63, 53, 1, 143, 113, 43, 72, 49, 67, 84, 100, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 29, 120, 106, 111, 131, 28, 45, 2, 47, 99, 40, 70, 13, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 116, 8, 6, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 11, 19, 85, 26, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 55, 138, 142, 118, 3, 64, 128, 25, 123, 117, 65, 69, 15, 87, 21, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 72, 67, 84, 106, 120, 29, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 47, 99, 40, 70, 13, 131, 111, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 116, 8, 6, 56, 144, 86, 50, 124, 139, 134, 33, 82, 54, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 3, 65, 128, 25, 123, 117, 64, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 121, 79, 30, 88, 41, 132, 137, 147, 141, 104, 66, 107, 57, 60, 24, 80, 68, 63, 39, 53, 113, 143, 1, 43, 72, 49, 67, 84, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 146, 38, 100, 106, 120, 29, 47, 99, 40, 70, 13, 131, 111, 28, 45, 2, 135, 127, 42, 122, 114, 119, 148, 116, 8, 6, 56, 144, 86, 50, 124, 139, 134, 33, 82, 54, 11, 19, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 14, 16, 10, 31, 46, 130, 27, 92, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 128, 25, 123, 64, 3, 65, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 60, 50, 124, 24, 80, 68, 113, 143, 63, 39, 53, 1, 43, 146, 77, 51, 95, 4, 36, 102, 145, 32, 12, 75, 125, 94, 81, 115, 49, 72, 67, 84, 38, 100, 106, 120, 29, 47, 70, 40, 99, 13, 2, 135, 127, 42, 122, 119, 114, 148, 82, 54, 33, 45, 28, 111, 131, 134, 139, 144, 86, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 59, 76, 109, 22, 97, 90, 108, 44, 16, 14, 10, 31, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 15, 87, 21, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 104, 66, 107, 60, 76, 109, 59, 61, 149, 34, 85, 19, 26, 11, 148, 82, 54, 33, 122, 114, 119, 42, 127, 135, 13, 47, 99, 40, 70, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 116, 8, 6, 56, 144, 86, 50, 124, 24, 80, 68, 57, 92, 27, 130, 108, 10, 16, 14, 31, 44, 97, 22, 90, 46, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 69, 21, 93, 15, 87, 136, 78, 105, 89, 5, 48, 62, 91, 7, 88, 41, 121, 79, 30, 137, 132, 147, 141, 104, 66, 130, 46, 108, 31, 10, 14, 16, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 19, 11, 148, 54, 82, 33, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 43, 113, 143, 63, 39, 53, 1, 49, 72, 67, 84, 134, 139, 116, 8, 6, 56, 86, 144, 50, 124, 60, 24, 80, 68, 107, 57, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 33, 82, 54, 148, 119, 114, 122, 127, 42, 135, 13, 47, 99, 40, 70, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 116, 8, 6, 56, 144, 86, 124, 50, 60, 80, 24, 68, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 141, 27, 92, 130, 46, 90, 108, 31, 10, 16, 14, 44, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 19, 11, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 116, 8, 6, 56, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 27, 92, 130, 46, 31, 14, 16, 10, 108, 90, 44, 22, 97, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 54, 82, 148, 114, 119, 122, 2, 13, 47, 99, 70, 40, 135, 127, 42, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 67, 84, 134, 139, 144, 86, 124, 50, 60, 24, 80, 72, 68, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 27, 92, 130, 46, 14, 16, 10, 31, 108, 90, 44, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 56, 6, 8, 116, 33, 82, 54, 148, 119, 114, 122, 2, 135, 13, 47, 99, 70, 40, 127, 42, 45, 28, 131, 111, 106, 29, 120, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 144, 86, 124, 50, 60, 80, 24, 68, 107, 57, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 15, 87, 93, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 116, 33, 82, 54, 148, 119, 114, 122, 2, 13, 47, 99, 40, 70, 135, 127, 42, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 113, 143, 63, 39, 53, 1, 43, 72, 67, 84, 134, 139, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 121, 79, 30, 88, 41, 132, 137, 147, 141, 104, 66, 107, 57, 60, 50, 124, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 24, 80, 86, 144, 56, 8, 116, 6, 11, 26, 19, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 121, 79, 30, 88, 41, 132, 137, 147, 57, 60, 50, 124, 86, 144, 56, 8, 116, 6, 11, 26, 19, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 10, 16, 14, 31, 108, 46, 130, 92, 27, 129, 66, 107, 24, 80, 67, 84, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 139, 141, 104, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 5, 48, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 66, 104, 141, 27, 92, 57, 107, 72, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 2, 13, 47, 99, 70, 40, 135, 127, 42, 45, 28, 131, 111, 106, 120, 29, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 39, 53, 63, 68, 80, 24, 60, 50, 124, 86, 144, 116, 8, 6, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 44, 16, 14, 10, 31, 108, 90, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 30, 79, 88, 137, 132, 147, 66, 104, 141, 27, 92, 57, 107, 72, 49, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 111, 131, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 116, 6, 8, 56, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 121, 41, 79, 30, 88, 137, 132, 147, 66, 104, 141, 27, 92, 57, 107, 72, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 51, 77, 95, 4, 36, 146, 102, 145, 12, 32, 75, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 116, 8, 6, 56, 19, 11, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 57, 107, 72, 67, 84, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 62, 5, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 68, 63, 39, 53, 1, 143, 72, 67, 84, 139, 134, 33, 82, 54, 148, 114, 119, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 113, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 85, 26, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 68, 63, 39, 53, 1, 143, 113, 43, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 11, 26, 85, 34, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 68, 63, 39, 53, 43, 1, 143, 113, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 14, 16, 10, 46, 130, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 72, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 47, 99, 40, 70, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 113, 143, 53, 39, 63, 68, 80, 24, 60, 50, 124, 86, 144, 56, 6, 8, 116, 11, 19, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 68, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 127, 42, 135, 70, 40, 99, 47, 13, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 80, 24, 60, 124, 50, 86, 144, 56, 8, 6, 116, 11, 19, 26, 85, 34, 149, 61, 59, 76, 109, 22, 90, 97, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 57, 107, 68, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 42, 122, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 51, 77, 95, 4, 36, 102, 32, 75, 145, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 11, 26, 85, 34, 149, 61, 59, 109, 76, 22, 97, 90, 44, 14, 16, 10, 31, 108, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 57, 107, 68, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 70, 40, 99, 47, 13, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 36, 4, 51, 77, 95, 102, 145, 32, 12, 75, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 80, 24, 60, 124, 50, 86, 144, 8, 116, 6, 56, 19, 11, 26, 34, 85, 149, 61, 109, 76, 59, 22, 97, 90, 44, 108, 31, 16, 14, 10, 46, 130, 92, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 66, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 6, 116, 8, 56, 86, 144, 124, 50, 60, 24, 80, 68, 63, 143, 113, 72, 67, 84, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 70, 40, 99, 47, 13, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 107, 57, 104, 141, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 27, 92, 130, 46, 108, 31, 10, 14, 16, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 6, 56, 8, 116, 134, 84, 67, 72, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 50, 124, 24, 80, 60, 57, 107, 66, 104, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 134, 84, 67, 49, 72, 68, 63, 39, 53, 1, 143, 113, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 70, 40, 99, 47, 13, 135, 127, 42, 122, 114, 119, 148, 54, 82, 139, 144, 86, 50, 124, 24, 80, 60, 107, 57, 27, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 27, 92, 130, 46, 108, 31, 10, 14, 16, 44, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 33, 134, 84, 67, 72, 113, 1, 53, 39, 63, 143, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 4, 36, 51, 77, 95, 100, 38, 29, 120, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 139, 144, 86, 50, 124, 60, 80, 24, 68, 107, 57, 66, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 108, 31, 10, 16, 14, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 134, 84, 67, 49, 72, 113, 143, 63, 39, 53, 1, 43, 115, 81, 94, 125, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 47, 99, 40, 70, 13, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 108, 31, 16, 14, 10, 44, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 80, 24, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 95, 77, 51, 4, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 76, 109, 59, 61, 149, 34, 85, 26, 11, 19, 8, 56, 6, 116, 139, 144, 86, 50, 124, 60, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 29, 120, 100, 106, 111, 131, 28, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 134, 84, 67, 80, 24, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 4, 36, 51, 77, 95, 38, 100, 106, 120, 29, 111, 131, 28, 42, 45, 2, 135, 70, 13, 47, 99, 40, 127, 122, 119, 114, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 22, 97, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 8, 6, 116, 134, 84, 67, 49, 72, 113, 143, 63, 39, 53, 1, 43, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 135, 40, 70, 99, 47, 13, 127, 42, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 50, 124, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 85, 26, 11, 19, 56, 6, 8, 116, 134, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 135, 40, 70, 99, 47, 13, 2, 42, 127, 122, 114, 119, 148, 54, 82, 33, 139, 144, 86, 124, 50, 60, 80, 24, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 56, 6, 139, 134, 33, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 146, 95, 77, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 116, 8, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 6, 8, 139, 134, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 84, 67, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 102, 145, 146, 36, 4, 77, 95, 51, 47, 99, 40, 70, 13, 135, 2, 127, 42, 122, 119, 114, 148, 54, 82, 116, 56, 144, 86, 124, 50, 60, 24, 80, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 85, 34, 26, 11, 19, 56, 8, 6, 116, 139, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 135, 13, 2, 42, 127, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 67, 84, 134, 144, 86, 124, 50, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 11, 19, 56, 6, 116, 8, 144, 86, 124, 50, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 127, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 67, 84, 134, 139, 60, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 11, 19, 56, 8, 6, 116, 86, 144, 50, 124, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 42, 122, 127, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 120, 29, 100, 38, 67, 84, 134, 139, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 11, 19, 56, 6, 116, 8, 144, 86, 124, 50, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 135, 127, 42, 2, 45, 122, 114, 119, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 86, 144, 50, 124, 24, 80, 68, 72, 49, 113, 63, 39, 53, 143, 1, 43, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 127, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 120, 29, 100, 38, 84, 67, 134, 139, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 50, 124, 24, 80, 68, 72, 49, 43, 113, 143, 63, 39, 53, 1, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 50, 124, 24, 80, 68, 72, 113, 143, 63, 39, 53, 1, 43, 49, 115, 81, 125, 94, 75, 12, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 84, 67, 134, 139, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 50, 124, 24, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 125, 81, 94, 12, 75, 145, 32, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 40, 70, 99, 47, 13, 135, 127, 42, 122, 119, 114, 148, 54, 82, 33, 134, 139, 84, 67, 72, 80, 60, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 134, 139, 84, 67, 72, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 68, 39, 63, 53, 1, 143, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 77, 51, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 148, 82, 54, 33, 134, 139, 84, 67, 72, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 68, 63, 39, 53, 1, 143, 113, 43, 72, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 82, 54, 33, 134, 139, 84, 67, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 72, 63, 39, 53, 143, 1, 113, 43, 49, 115, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 134, 139, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 75, 32, 12, 94, 81, 125, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 45, 2, 135, 13, 47, 99, 70, 40, 127, 42, 122, 114, 119, 148, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 84, 67, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 13, 47, 99, 40, 70, 135, 127, 42, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 13, 47, 99, 70, 40, 135, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 75, 32, 12, 94, 125, 81, 115, 49, 72, 67, 84, 43, 113, 143, 1, 53, 39, 63, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 42, 122, 127, 135, 13, 47, 99, 70, 40, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 42, 127, 135, 13, 131, 111, 28, 45, 2, 40, 70, 99, 47, 29, 120, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 84, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 42, 127, 135, 40, 70, 99, 47, 13, 2, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 1, 53, 39, 63, 68, 72, 67, 84, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 70, 40, 99, 47, 13, 131, 28, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 100, 84, 67, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 29, 120, 106, 100, 38, 146, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 47, 99, 13, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 131, 28, 111, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 84, 67, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 131, 28, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 100, 38, 146, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 43, 1, 143, 63, 53, 39, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 84, 67, 72, 113, 43, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 100, 38, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 43, 49, 84, 67, 72, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 43, 113, 143, 1, 53, 39, 63, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 51, 77, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 43, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 53, 39, 63, 143, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 72, 67, 84, 49, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 102, 145, 32, 12, 75, 94, 125, 81, 115, 146, 84, 67, 72, 49, 43, 113, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 67, 84, 72, 43, 113, 143, 1, 39, 53, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 125, 94, 81, 115, 49, 67, 84, 72, 113, 43, 1, 143, 53, 39, 63, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 43, 1, 143, 63, 39, 53, 107, 57, 68, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 43, 143, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 43, 1, 143, 63, 53, 39, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 84, 67, 72, 113, 143, 43, 1, 53, 39, 63, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 63, 39, 53, 143, 1, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 1, 143, 53, 39, 63, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 84, 67, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 84, 67, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 84, 67, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 57, 107, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 112, 71, 20, 73, 58, 140, 126, 9, 83, 35, 98, 110, 103, 101, 37, 23, 17, 133, 52, 18, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 64, 3, 65, 69, 21, 93, 15, 87, 136, 78, 105, 89, 48, 5, 62, 91, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 130, 46, 31, 10, 16, 14, 44, 108, 90, 97, 22, 109, 76, 59, 61, 149, 34, 26, 85, 19, 11, 6, 116, 8, 56, 144, 86, 124, 50, 60, 24, 80, 139, 134, 33, 82, 54, 148, 119, 114, 122, 45, 2, 42, 127, 135, 40, 70, 99, 47, 13, 28, 131, 111, 106, 29, 120, 38, 100, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 143, 63, 39, 53, 1, 113, 72, 67, 84, 68, 107, 57, 129, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.1, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(30278.21824839056);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(30278.21824839056);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 40016.22976406926, 2379.356272740218, 0.0, 81.43836734693878, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 33428.82772425119, 2514.0487492073344, 0.0, 10.203265306122448, 30175.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 33306.444896554414, 2507.8692387845576, 0.49666666666666665, 8.808979591836735, 30143.263027703353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 38399.45183735187, 1675.617956460029, 0.4866666666666667, 26.284081632653063, 30257.420734065574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 32063.25016823952, 2235.425011051605, 0.5033333333333333, 7.088979591836734, 29660.415469932163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 31363.12365660787, 1804.5387287045316, 0.49666666666666665, 6.066938775510204, 29660.415469932163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 34159.48998153975, 2183.8074394667487, 0.49666666666666665, 13.470204081632653, 30175.913464808127);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 32589.915925239642, 2106.9833898524944, 0.49666666666666665, 6.977142857142857, 29905.122182117615);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 31327.934044173657, 1888.0513130396955, 0.49666666666666665, 4.330612244897959, 29905.122182117615);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 33687.843315331855, 1816.260707657297, 0.49666666666666665, 11.431020408163265, 29809.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 32074.233587789826, 2026.5861067444005, 0.49666666666666665, 7.118367346938776, 29809.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 31560.840766648183, 1840.4642344466472, 0.49666666666666665, 5.713469387755102, 29809.966519514153);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 32699.907385658993, 1108.5639824600594, 0.49333333333333335, 9.62938775510204, 29656.253172844317);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 31154.039919038365, 1585.7262173162312, 0.49333333333333335, 6.093061224489796, 29656.253172844317);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 30601.47316608373, 1296.6144601833203, 0.49666666666666665, 4.076734693877551, 29656.253172844317);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 33387.44888037302, 1307.7600523061146, 0.49666666666666665, 8.524897959183674, 29644.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 30291.515511896097, 1118.9361329914939, 0.49666666666666665, 2.444081632653061, 29644.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 30471.64209116864, 1265.3546223634319, 0.49666666666666665, 4.099591836734694, 29644.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 32529.746638558296, 946.9295726786055, 0.49333333333333335, 13.212244897959184, 30108.032805221617);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 30328.155429999406, 1252.2240939682724, 0.51, 4.005714285714285, 29585.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 29895.440871735565, 752.638559627521, 0.49666666666666665, 1.3510204081632653, 29585.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 30471.51708428019, 964.0332458757237, 0.49666666666666665, 3.413061224489796, 29701.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 29632.218248390574, 1.469965419604284E-11, 0.5033333333333333, 0.0, 29632.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 29724.49330923914, 373.40903541778795, 0.49666666666666665, 0.6342857142857142, 29632.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 30480.2729782072, 399.6141415600046, 0.49666666666666665, 0.6628571428571428, 29994.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 30026.318248390573, 160.8645329436656, 0.49666666666666665, 0.39755102040816326, 29994.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 29994.218248390574, 1.469965419604284E-11, 0.49666666666666665, 0.0, 29994.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 30594.98357225147, 438.91103159896903, 0.49666666666666665, 0.966530612244898, 30326.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 30278.218248390574, 1.469965419604284E-11, 0.49666666666666665, 0.0, 30278.21824839056);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 30278.218248390574, 1.469965419604284E-11, 0.49666666666666665, 0.0, 30278.21824839056);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 79, 30, 41, 121, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 121, 41, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 121, 41, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 134, 139, 67, 84, 106, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115, 49, 43, 113, 143, 63, 53, 39, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 101, 110, 98, 37, 23, 17, 136, 78, 133, 52, 15, 87, 93, 21, 69, 65, 117, 25, 123, 128, 64, 3, 118, 142, 96, 55, 138, 121, 41, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 136, 133, 52, 18, 74, 96, 138, 7, 91, 62, 5, 48, 89, 105, 78, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 36, 4, 146, 145, 102, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 117, 123, 25, 128, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 103, 110, 101, 98, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 146, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 61, 59, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 66, 104, 141, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 66, 104, 141, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 107, 57, 60, 80, 24, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 66, 104, 141, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 124, 50, 144, 86, 139, 134, 116, 8, 56, 6, 19, 85, 149, 76, 109, 61, 59, 22, 97, 108, 90, 44, 31, 10, 14, 16, 140, 58, 126, 35, 98, 110, 101, 103, 37, 23, 17, 78, 136, 87, 15, 93, 21, 69, 3, 64, 65, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 144, 86, 139, 134, 116, 6, 8, 56, 19, 85, 149, 61, 59, 109, 76, 22, 97, 90, 44, 108, 31, 10, 16, 14, 140, 58, 126, 35, 98, 101, 110, 103, 23, 37, 17, 78, 136, 15, 87, 93, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 41, 121, 88, 137, 132, 147, 141, 66, 104, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 61, 59, 76, 109, 22, 97, 44, 90, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 128, 123, 25, 117, 64, 3, 118, 142, 55, 30, 79, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 3, 64, 128, 25, 123, 117, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 48, 5, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 96, 118, 142, 55, 138, 7, 91, 129, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 128, 25, 123, 117, 65, 64, 3, 118, 142, 55, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 96, 138, 7, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 79, 30, 121, 41, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 7, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 52, 133, 105, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 52, 133, 105, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 52, 133, 105, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 112, 9, 83, 71, 20, 73, 34, 26, 11, 148, 54, 82, 33, 119, 114, 122, 42, 127, 135, 40, 70, 99, 47, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 95, 77, 51, 4, 36, 146, 102, 32, 145, 75, 12, 94, 125, 81, 115, 113, 143, 63, 39, 53, 1, 43, 49, 84, 67, 72, 68, 80, 24, 60, 50, 124, 86, 144, 139, 134, 8, 116, 6, 56, 19, 85, 149, 59, 61, 76, 109, 22, 97, 90, 44, 108, 31, 10, 14, 16, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 93, 87, 15, 21, 69, 65, 64, 128, 25, 123, 117, 3, 118, 96, 142, 55, 138, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 57, 107, 92, 27, 130, 46, 62, 5, 48, 89, 78, 136, 105, 133, 52, 18, 74, 91, 129, 0]");

    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.75, 10, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(37304.71641538353);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(37304.71641538353);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 46567.88566249352, 4338.286883293141, 0.0, 57.16, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 5, 38106.33266392526, 2237.2728848798847, 0.0, 13.702857142857143, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 10, 37988.29155065972, 1954.5983431750626, 0.0, 13.38938775510204, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 11, 42770.09684090216, 2871.5497888553036, 0.48, 37.859591836734694, 36551.28717460028);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 15, 35689.45262060045, 3742.7180822841697, 0.805, 16.318367346938775, 31245.80927961268);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 20, 35453.46572883883, 3638.415375608622, 0.805, 15.379591836734694, 31245.80927961268);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 21, 47812.28120099455, 4166.415853969764, 0.47, 44.55591836734694, 38045.56343223726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 25, 37440.23569834017, 3082.238456995094, 0.645, 8.64408163265306, 33746.34621395921);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 30, 37662.196806392625, 2612.408915082737, 0.5, 11.435102040816327, 33610.77837959814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 31, 49314.24787493783, 3884.793890122387, 0.49, 39.63673469387755, 41017.20944930131);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 35, 34452.11834169118, 4140.954191037944, 0.855, 5.7240816326530615, 32151.02763701404);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 40, 33621.066514958715, 2599.419522143144, 0.5, 6.307755102040816, 31820.60719144686);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 41, 44069.15771578855, 3557.7513788248475, 0.48, 37.58122448979592, 32741.646891374774);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 45, 36974.03925727059, 2362.842837773458, 0.48, 17.91673469387755, 32741.646891374774);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 34327.07339057101, 3210.463274483258, 0.545, 7.764897959183673, 30191.989312992002);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 51, 44634.99520666173, 3085.3065335772017, 0.49, 38.546938775510206, 39694.95193564995);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 55, 35260.31842734369, 1743.007611659199, 0.72, 6.915102040816326, 32106.6978744692);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 60, 37346.70595908904, 2118.250311551894, 0.495, 6.444081632653061, 29225.802928910067);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 61, 43450.856404728554, 2697.611581024617, 0.57, 30.121632653061223, 34795.257398014524);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 65, 41632.151962151096, 2614.558666452399, 0.57, 18.332244897959185, 34795.257398014524);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 70, 40992.13271199717, 2017.5056610056672, 0.57, 18.5534693877551, 34795.257398014524);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 71, 45839.426582288135, 3785.527498522295, 0.495, 40.414693877551024, 33455.46607212627);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 75, 36300.68586453233, 2203.502003640061, 0.495, 12.786122448979592, 33455.46607212627);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 80, 35538.07086501484, 2680.881638490244, 0.495, 8.013877551020409, 33078.800564904406);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 81, 42831.604433296445, 4098.251736643629, 0.49, 39.98122448979592, 31785.749875488083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 85, 36030.323069616534, 3383.425866579646, 0.49, 13.129795918367346, 31785.749875488083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 90, 36621.07781892971, 2349.2118242281826, 0.49, 16.04734693877551, 31785.749875488083);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 91, 43786.725933142836, 3265.5352981739334, 0.555, 31.128979591836735, 31879.549588120848);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 95, 38244.016477338475, 3013.2935990216893, 0.555, 10.160816326530613, 31879.549588120848);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 39893.04218103686, 3396.7767333978904, 0.5, 11.337959183673469, 31879.549588120848);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 47378.976486930944, 3735.4880952509993, 0.485, 35.524897959183676, 32966.505676783796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 105, 40043.99188994045, 2392.5035677142037, 0.485, 17.118367346938776, 32966.505676783796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 110, 38737.45989180003, 2435.8626711679094, 0.485, 12.873469387755103, 32966.505676783796);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 111, 46116.32044016308, 3090.393703879887, 0.485, 37.36326530612245, 33470.53548036293);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 115, 39152.07696179631, 3459.087622305459, 0.485, 10.019591836734694, 33470.53548036293);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 120, 37773.39218623549, 3089.965687712344, 0.56, 12.579591836734695, 32687.29643657865);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 121, 45395.92766482304, 3313.78162783318, 0.5, 30.975510204081633, 35322.0608162229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 125, 43734.989411752395, 3755.2988187577394, 0.5, 11.240816326530613, 35322.0608162229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 130, 42751.118131938514, 3144.0822996037937, 0.5, 16.753469387755104, 35322.0608162229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 131, 46638.59715775659, 3391.5623516490073, 0.51, 35.14938775510204, 32520.23456107814);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 135, 33662.71835511197, 1840.9093746375888, 0.79, 3.56, 32505.478868254784);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 140, 33645.28006596059, 1888.6093875550946, 0.79, 3.8481632653061224, 32505.478868254784);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 141, 44611.50991936809, 3742.752130939907, 0.485, 27.86285714285714, 33914.095789844716);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 145, 35758.201885223556, 3170.400180434176, 0.62, 9.56734693877551, 31051.618927271837);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 34206.15546959784, 2391.2569258521758, 0.515, 8.177142857142858, 30811.147434264465);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 151, 47048.75798221654, 4688.884657097302, 0.49, 28.755102040816325, 33596.008536192654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 155, 37330.89674933834, 3539.3281228787246, 0.49, 8.875918367346939, 33596.008536192654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 160, 35780.327407998404, 3060.0765528678376, 0.535, 9.560816326530611, 32811.72418801205);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 161, 45326.42995716365, 3144.4391944635368, 0.505, 31.311836734693877, 33542.838032403335);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 165, 39569.7669803373, 2505.1895113040337, 0.505, 13.62938775510204, 33542.838032403335);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 170, 39202.05387059139, 2313.98968277315, 0.505, 14.220408163265306, 33542.838032403335);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 171, 44945.64684187096, 3547.7356568905147, 0.485, 31.2334693877551, 40098.31559670771);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 175, 37336.60637162012, 2269.6801250972867, 0.595, 9.895510204081633, 32516.094138089178);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 180, 35601.56277257567, 2244.9264059069455, 0.505, 9.027755102040816, 32414.370807351806);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 181, 44921.98453609176, 2450.8450820082926, 0.495, 29.84, 33826.634107166734);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 185, 35765.29889335916, 2892.9571000574483, 0.52, 4.331428571428572, 33248.692752441304);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 190, 35793.272665784556, 2772.318403444365, 0.52, 4.936326530612245, 33248.692752441304);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 191, 46317.55256830355, 3544.558816417539, 0.49, 29.70204081632653, 32429.733249998586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 195, 37501.897374602384, 3006.726500357527, 0.49, 10.763265306122449, 32429.733249998586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 35828.047607430264, 2250.9126451448124, 0.565, 8.257959183673469, 32429.733249998586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 41555.02158048028, 3037.411318305984, 0.545, 26.61877551020408, 31704.73253279449);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 205, 34240.212521786205, 2577.451752383657, 0.545, 5.251428571428572, 31704.73253279449);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 210, 33899.17358931037, 2644.2259783848813, 0.5, 5.463673469387755, 31425.44382003666);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 211, 42911.79230519122, 2959.2047007968013, 0.5, 19.48081632653061, 32439.380718130356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 215, 33559.66980359813, 2254.201612850015, 0.61, 2.8824489795918367, 32275.977758285757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 220, 33735.92150367737, 2318.853528347117, 0.61, 3.7085714285714286, 32275.977758285757);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 221, 42677.19976501829, 3495.952589367022, 0.47, 26.623673469387754, 32308.214663575596);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 225, 35105.68248417414, 2254.03601916294, 0.47, 7.164081632653061, 32308.214663575596);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 230, 34692.44074062651, 1500.9645074349182, 0.47, 4.6204081632653065, 32308.214663575596);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 231, 39897.20386560011, 1966.8768612805416, 0.5, 18.65877551020408, 32968.40366189929);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 235, 33808.41238563513, 1769.9295121953355, 0.52, 6.421224489795918, 31493.57556431746);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 240, 33409.651715021675, 2268.164587860995, 0.59, 3.333877551020408, 31241.473101677668);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 241, 44019.46981548561, 3484.6595554575597, 0.485, 30.041632653061225, 33356.43075371191);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 245, 35072.537046674435, 1733.6716072296774, 0.595, 5.649795918367347, 33144.51979469661);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 35408.012380537504, 2316.856654505398, 0.595, 5.645714285714286, 33144.51979469661);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 251, 42522.85166464423, 2390.426639990149, 0.48, 28.019591836734694, 37547.79638361629);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 255, 37345.80739065068, 3392.1668510413865, 0.72, 8.919183673469387, 33787.03462475229);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 260, 35770.75622516844, 2620.7560205993136, 0.555, 8.960816326530612, 32045.08990003726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 261, 42192.54375562016, 3325.564010258314, 0.505, 25.81877551020408, 30871.83549200868);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 265, 32701.937533622426, 3360.5416936329857, 0.765, 3.5975510204081633, 30575.48544982493);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 270, 32996.21459935442, 3306.771900777357, 0.765, 3.4481632653061225, 30575.48544982493);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 271, 42028.814246713744, 2305.171038741025, 0.495, 14.928979591836734, 34327.41817151356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 275, 36578.44291086941, 2569.3113885546504, 0.495, 6.475102040816327, 34327.41817151356);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 280, 34178.407336568205, 2139.9958278142344, 0.68, 4.421224489795918, 32622.37261460406);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 281, 43676.22556371321, 3193.0869100781892, 0.495, 25.124897959183674, 33050.08084394795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 285, 34576.078869000026, 1312.6985376583764, 0.495, 6.679183673469388, 33050.08084394795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 290, 34848.63542662018, 2292.4756400681695, 0.495, 4.763265306122449, 33050.08084394795);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 291, 41056.907848891875, 2809.92501572656, 0.475, 24.14530612244898, 33836.024477362196);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 295, 37503.588746989204, 2497.277447796511, 0.605, 8.845714285714285, 33634.367994243396);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 35535.73896678924, 3561.0320703792227, 0.5, 4.513469387755102, 33634.367994243396);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 41798.36536242009, 2873.6687612324367, 0.475, 23.721632653061224, 32931.67151986299);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 305, 36408.68104461323, 2545.8449688685596, 0.745, 9.842448979591836, 31942.210353303733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 310, 36618.297708867074, 2699.7178581857706, 0.745, 9.267755102040816, 31942.210353303733);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 311, 40901.59214612184, 2127.7108929518863, 0.49, 25.66938775510204, 33267.272075410976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 315, 32318.77675001831, 1759.1843386801922, 0.735, 2.6881632653061223, 31235.1887697184);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 320, 33038.345972547686, 2262.1037035152613, 0.735, 3.163265306122449, 31235.1887697184);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 321, 41194.836331473125, 3200.7548054120625, 0.48, 20.23265306122449, 32718.928272594185);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 325, 34519.5819575961, 2362.488161620089, 0.48, 4.210612244897959, 32718.928272594185);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 330, 34365.68731357847, 1955.118532232007, 0.48, 4.69469387755102, 32718.928272594185);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 331, 41170.15668126491, 2844.1047635317236, 0.485, 22.867755102040817, 31863.904857773858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 335, 35105.30857702873, 3257.194299920191, 0.485, 7.8310204081632655, 31863.904857773858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 340, 35516.62413121645, 3370.5121940878944, 0.485, 5.790204081632653, 31863.904857773858);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 341, 39287.234910917396, 2399.51156856209, 0.48, 19.76816326530612, 35959.81694503885);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 345, 36726.99924138885, 3985.5647332083718, 0.56, 10.743673469387755, 31608.636655089253);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 33247.50105866989, 3071.68078472197, 0.56, 3.3469387755102042, 31608.636655089253);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 351, 39262.092449611824, 2412.021683822054, 0.48, 19.15591836734694, 32179.322719339103);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 355, 34138.74567503131, 2191.3815337792294, 0.505, 3.844081632653061, 31611.152411357558);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 360, 35670.5801693577, 2917.209011631104, 0.505, 8.660408163265306, 31611.152411357558);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 361, 41424.396673055264, 2436.397140091458, 0.485, 25.671020408163265, 33092.235282397436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 365, 36109.03854954503, 2624.099621800152, 0.485, 7.441632653061225, 33092.235282397436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 370, 35819.73762111669, 2226.8287360893705, 0.485, 8.405714285714286, 33092.235282397436);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 371, 41666.46433201495, 2533.34166786666, 0.48, 26.760816326530612, 37352.18358089536);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 375, 35796.63544490929, 2038.1556528880997, 0.65, 9.004897959183673, 32845.10811365751);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 380, 32987.03210950965, 1312.322887042694, 0.575, 2.953469387755102, 32516.705445770185);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 381, 40454.08675758068, 2186.7229904916067, 0.475, 26.15591836734694, 33317.46180064973);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 385, 34914.38995682574, 2029.8645486197606, 0.655, 10.544489795918368, 31691.91412303636);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 390, 34407.27190696765, 1823.0672041368507, 0.655, 11.166530612244898, 31691.91412303636);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 391, 39617.93833057298, 2341.029988004502, 0.485, 25.307755102040815, 32162.31711672821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 395, 34099.36407078619, 2121.2088103659357, 0.485, 3.9714285714285715, 32162.31711672821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 34217.551161041665, 2422.3506874330224, 0.5, 4.238367346938776, 32162.31711672821);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 42154.69374006154, 2692.331879003567, 0.49, 24.166530612244898, 33932.708138171416);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 405, 36152.014853813096, 2301.9506730754592, 0.49, 8.613061224489796, 33932.708138171416);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 410, 36227.862838574794, 2731.782021900434, 0.49, 6.759183673469388, 33932.708138171416);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 411, 40006.84686898965, 1845.3653063158033, 0.48, 23.368979591836734, 32203.416957335197);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 415, 34753.99308953663, 877.1866217570112, 0.48, 5.268571428571429, 32203.416957335197);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 420, 31384.151219331405, 2113.666630383307, 0.52, 2.653877551020408, 30306.07544370917);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 421, 39445.12423690871, 2149.481429527741, 0.485, 19.41795918367347, 33582.52659325634);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 425, 35132.2395035042, 2626.312949761236, 0.65, 3.6840816326530614, 33328.34526606142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 430, 34592.72505789898, 2537.00058123473, 0.65, 3.31265306122449, 33328.34526606142);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 431, 42508.37267343671, 3217.1321788166247, 0.48, 21.634285714285713, 31760.222250752755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 435, 34348.09914449563, 2371.497746394591, 0.48, 5.221224489795919, 31760.222250752755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 440, 35234.36616457538, 2993.6735482197114, 0.48, 6.297959183673469, 31760.222250752755);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 441, 42121.195452712316, 2574.712629623823, 0.495, 17.44326530612245, 31649.951422964787);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 445, 33017.94151092853, 2169.183644005675, 0.495, 3.253061224489796, 31649.951422964787);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 33904.77887166113, 2535.3341008700286, 0.495, 4.628571428571429, 31649.951422964787);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 451, 40058.88175612686, 2556.2368300273056, 0.495, 12.835102040816327, 32313.79359038208);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 455, 35429.05614104357, 2943.028207878718, 0.495, 9.775510204081632, 32313.79359038208);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 460, 34362.69912374626, 2852.1740404225434, 0.51, 7.816326530612245, 31436.809928168645);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 461, 39032.43823482797, 2717.76858173944, 0.505, 19.964897959183673, 31403.304415043498);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 465, 32644.671246382593, 2140.8802742145094, 0.58, 3.219591836734694, 31199.519902783915);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 470, 33181.844291670255, 2628.467861943259, 0.58, 4.013877551020408, 31199.519902783915);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 471, 39932.04980004483, 1852.9392230643784, 0.49, 14.27673469387755, 36657.968396916585);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 475, 37898.969827285095, 2700.814590293251, 0.575, 8.215510204081633, 33287.980215017065);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 480, 37441.6719379661, 2349.012086333418, 0.575, 8.946122448979592, 33287.980215017065);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 481, 39807.54687136745, 2251.757959453465, 0.495, 20.169795918367345, 35361.28699201418);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 485, 34959.97576842022, 2150.1355952459944, 0.555, 6.930612244897959, 32762.041196356742);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 490, 34129.99238330705, 2404.0485753172693, 0.555, 3.580408163265306, 32762.041196356742);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 491, 41990.556760927764, 2345.383525210068, 0.495, 13.319183673469388, 38058.52563287919);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 495, 37587.87722757963, 2547.870684269579, 0.575, 13.143673469387755, 34481.59499618041);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 36631.21320521985, 1749.2628177826323, 0.495, 11.16326530612245, 34481.59499618041);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 39173.73061431504, 2147.1299604489664, 0.49, 18.031020408163265, 33702.28065485016);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 505, 35373.48262093242, 1630.7780358750838, 0.49, 7.721632653061224, 33702.28065485016);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 510, 35994.39339133371, 2209.8920679317084, 0.49, 7.381224489795918, 33702.28065485016);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 511, 39042.84029584688, 2017.6578722912236, 0.475, 18.044897959183672, 34072.88937672828);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 515, 34935.35590546909, 2267.122398976221, 0.63, 7.286530612244898, 32444.923754871397);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 520, 34551.90994803219, 1721.864789968547, 0.63, 5.900408163265306, 32444.923754871397);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 521, 39492.49473612919, 2127.124594582609, 0.48, 17.12, 34338.26674533715);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 525, 39756.154100815875, 2180.047456689631, 0.48, 6.022857142857143, 34338.26674533715);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 530, 35939.96075716393, 2016.7141878485568, 0.48, 3.2677551020408164, 34338.26674533715);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 531, 39540.678239998444, 3166.909477346128, 0.485, 14.19673469387755, 33971.16314342812);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 535, 35539.47153136858, 2815.26113351176, 0.67, 4.8375510204081635, 33792.01673214631);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 540, 35267.60630867021, 2449.691051462023, 0.495, 4.46530612244898, 33722.99601145941);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 541, 41985.9380040241, 2175.7530962582355, 0.485, 17.786938775510205, 34184.51052821499);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 545, 36323.2523242213, 1359.1266820790956, 0.485, 2.32, 34184.51052821499);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 36741.84339938779, 2295.3987143703316, 0.485, 2.636734693877551, 34184.51052821499);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 551, 42104.655923898936, 2314.080139763468, 0.485, 18.565714285714286, 37325.78397074637);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 555, 36815.616069719414, 2961.967938689926, 0.545, 5.62530612244898, 33470.56912683469);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 560, 35836.41380875907, 2583.893968573199, 0.545, 4.887346938775511, 33470.56912683469);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 561, 39160.310627486935, 1783.9017200907244, 0.495, 14.96734693877551, 32239.30886459927);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 565, 33057.14758673851, 1837.8523805597456, 0.495, 2.1077551020408163, 32239.30886459927);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 570, 32842.62682983199, 1896.8926498687508, 0.495, 1.099591836734694, 32239.30886459927);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 571, 41180.49921704254, 2324.5489870457222, 0.485, 17.344489795918367, 33512.73810880417);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 575, 37232.547183696086, 3979.0214829764705, 0.485, 2.700408163265306, 33512.73810880417);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 580, 35998.77064148132, 3557.7012215582677, 0.485, 1.8571428571428572, 33512.73810880417);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 581, 41598.29531471563, 3071.5688064858623, 0.49, 12.53795918367347, 31925.7815266836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 585, 33662.76824396126, 2431.6785882531954, 0.49, 3.016326530612245, 31925.7815266836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 590, 32650.692094819842, 1878.3585093765735, 0.49, 1.590204081632653, 31925.7815266836);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 591, 42166.92897365515, 3902.6548639197295, 0.49, 11.511020408163265, 32955.47894044584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 595, 35038.859138050786, 3549.8414005456607, 0.49, 3.3502040816326533, 32955.47894044584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 34730.85503120423, 3702.835180337341, 0.5, 1.886530612244898, 32955.47894044584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 39817.55866844637, 2049.690212471103, 0.495, 14.791020408163265, 33435.93832275552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 605, 36087.28155847675, 3291.243762802144, 0.495, 3.449795918367347, 33435.93832275552);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 610, 34773.41821775466, 1201.5389167486808, 0.5, 1.5983673469387756, 33268.79332656254);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 611, 41564.58637160277, 2363.0657276990605, 0.5, 9.34530612244898, 34720.82362819444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 615, 37430.15279743045, 3324.449767173612, 0.5, 4.30530612244898, 34720.82362819444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 620, 37765.00825945106, 3281.4731214849594, 0.5, 5.917551020408164, 34720.82362819444);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 621, 40976.86824540919, 2263.6923758744924, 0.5, 12.808979591836735, 36657.54101855805);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 625, 38661.76737589569, 2341.2035395291578, 0.61, 6.476734693877551, 35257.420579746);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 630, 37697.73428074561, 2569.425053005604, 0.61, 6.8212244897959184, 35257.420579746);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 631, 40253.87406353754, 1964.5706168589893, 0.48, 13.69795918367347, 34735.39356015109);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 635, 37522.63853439731, 2754.8398886119835, 0.48, 4.611428571428571, 34735.39356015109);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 640, 37519.04116078806, 2684.0582630842327, 0.48, 3.8522448979591837, 34735.39356015109);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 641, 41398.81950888354, 2529.2454058359535, 0.5, 11.27673469387755, 35727.67126125014);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 645, 38452.716928832575, 1088.163649657869, 0.535, 4.111836734693878, 34566.489096811376);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 37882.512380750544, 1374.9155297572702, 0.535, 1.9681632653061225, 34566.489096811376);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 651, 41831.38159908608, 3091.566894754337, 0.47, 13.130612244897959, 35168.87051532963);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 655, 37147.8921566454, 2972.0752031234606, 0.47, 3.4236734693877553, 35168.87051532963);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 660, 36977.23495391448, 2566.0446959412175, 0.47, 2.6987755102040816, 35168.87051532963);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 661, 40053.65440318355, 2172.6824434971027, 0.495, 13.879183673469388, 35112.775524281584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 665, 38519.11107698849, 2944.4753877895187, 0.495, 6.386938775510204, 35112.775524281584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 670, 38959.710838410545, 3275.764383853281, 0.495, 7.184489795918368, 35112.775524281584);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 671, 41581.199245274416, 2144.9547250348414, 0.5, 5.586122448979592, 35072.703896314575);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 675, 38127.61601017263, 3914.144530656279, 0.5, 2.9346938775510205, 35072.703896314575);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 680, 36673.622365162155, 3215.183274603523, 0.5, 2.1477551020408163, 35072.703896314575);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 681, 41756.40179393082, 1776.9592123145812, 0.485, 9.198367346938776, 35020.19718994399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 685, 35889.237799059556, 1566.5550439318906, 0.485, 1.933061224489796, 35020.19718994399);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 690, 36557.44948615483, 2807.7082962648733, 0.5, 2.749387755102041, 34937.17308906489);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 691, 41261.83415617305, 2092.1850659891743, 0.495, 8.266122448979592, 34893.34046315111);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 695, 37131.58226621042, 3097.0881711324746, 0.495, 3.786122448979592, 34893.34046315111);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 36240.17075422916, 2559.909520287936, 0.5, 2.947755102040816, 34472.059112664654);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 41688.52221984946, 2434.7937548081964, 0.5, 6.513469387755102, 34820.566910794725);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 705, 36309.20594772031, 1846.4298058976453, 0.5, 1.5983673469387756, 34820.566910794725);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 710, 35796.9787317817, 1073.8374876568064, 0.5, 0.5175510204081633, 34820.566910794725);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 711, 39244.71719589745, 1632.5673277195979, 0.485, 7.50530612244898, 34335.9337693482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 715, 34946.28544200431, 1492.9039463361273, 0.485, 1.2244897959183674, 34335.9337693482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 720, 34951.06227629812, 1496.0764242528521, 0.485, 1.1526530612244898, 34335.9337693482);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 721, 41380.90176060065, 2275.7877121543174, 0.5, 10.09142857142857, 36708.53798046412);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 725, 35112.97219835154, 1011.1018230137182, 0.585, 0.556734693877551, 34925.32608004457);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 730, 35603.785806825064, 2108.9360164443615, 0.5, 2.2114285714285713, 34803.370499260134);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 731, 37866.69292960333, 2191.0054936114857, 0.495, 6.464489795918367, 34755.28082249435);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 735, 35162.76355230069, 1317.4061295406643, 0.585, 2.6718367346938776, 34036.65688531741);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 740, 34794.06210226981, 974.0410383184725, 0.585, 2.2089795918367345, 34036.65688531741);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 741, 39593.034394575945, 1978.9049544452566, 0.485, 9.14938775510204, 35885.488881400976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 745, 35835.853285795165, 1623.2500052568614, 0.585, 1.9240816326530612, 35144.69692129332);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 36180.49954854047, 2332.510383287552, 0.585, 1.9191836734693877, 35144.69692129332);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 751, 38866.400767716084, 2223.926700162591, 0.5, 5.030204081632653, 35582.741732020935);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 755, 36265.7564721314, 1499.8209986974896, 0.5, 1.6587755102040815, 35582.741732020935);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 760, 36751.61706252139, 1876.250011440815, 0.5, 2.7779591836734694, 35557.690028213394);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 761, 38827.90618282411, 2321.1339724719583, 0.51, 5.220408163265306, 34982.55597592085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 765, 35995.27476781045, 2355.495430233378, 0.51, 1.4669387755102041, 34982.55597592085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 770, 37121.05614910564, 2980.7650987177626, 0.51, 2.683265306122449, 34982.55597592085);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 771, 38376.23883602491, 719.844294133711, 0.495, 5.965714285714285, 37264.080391972595);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 775, 37077.026589968, 265.5013737250453, 0.53, 0.5444897959183673, 34356.72567133791);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 780, 37103.49748386339, 294.9278097795222, 0.53, 0.8114285714285714, 34356.72567133791);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 781, 39394.353432404656, 2470.8824308884527, 0.485, 6.844081632653062, 35130.16853250038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 785, 36293.49242984067, 2370.885547720292, 0.485, 2.057959183673469, 35130.16853250038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 790, 36626.57430475365, 2635.2188074794085, 0.485, 2.2857142857142856, 35130.16853250038);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 791, 39590.234286927494, 1362.2214412571113, 0.5, 6.975510204081632, 36362.98062226657);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 795, 37863.29131816519, 2475.030375399181, 0.5, 2.4938775510204083, 36362.98062226657);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 38083.306427279764, 2524.707249713801, 0.5, 3.777142857142857, 36362.98062226657);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 43143.24013263563, 2298.673730700079, 0.49, 8.69795918367347, 36350.175687561714);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 805, 37130.95457438109, 1451.3038118457189, 0.49, 1.7575510204081632, 36350.175687561714);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 810, 36416.94800716039, 796.0445364289214, 0.495, 1.4391836734693877, 35847.757496581726);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 811, 38697.81946623396, 1093.0984063808978, 0.515, 5.983673469387755, 35851.3281433586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 815, 36737.41102425117, 757.6017421537562, 0.515, 1.2391836734693877, 35851.3281433586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 820, 36645.34473623311, 596.0390862299805, 0.515, 1.7208163265306122, 35851.3281433586);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 821, 37069.937384354926, 623.612994902336, 0.495, 2.2922448979591836, 35311.06055706819);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 825, 35782.198492641335, 956.3554984946301, 0.495, 1.5657142857142856, 35311.06055706819);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 830, 35679.11504281326, 571.1997683854335, 0.495, 1.0620408163265307, 35311.06055706819);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 831, 39815.68568994725, 1821.4663668310125, 0.49, 4.475918367346939, 35768.16629255386);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 835, 36127.93879729475, 854.7218179937917, 0.49, 1.4514285714285715, 35768.16629255386);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 840, 36050.57555422215, 1032.0387238088338, 0.49, 0.6253061224489795, 35768.16629255386);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 841, 39335.54716964278, 2052.1830797869816, 0.495, 5.561632653061224, 36089.25104913937);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 845, 36277.73446933017, 694.3515500938026, 0.495, 0.43183673469387757, 36089.25104913937);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 36198.3590517298, 377.01321627726753, 0.495, 0.38040816326530613, 36089.25104913937);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 851, 37701.192552166336, 747.8816965626983, 0.49, 3.7453061224489796, 35411.54186272574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 855, 35579.56069556789, 645.9443663810184, 0.49, 0.9044897959183673, 35411.54186272574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 860, 35713.19151400527, 855.1022530634851, 0.49, 1.0906122448979592, 35411.54186272574);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 861, 38647.68843385245, 898.1125169013405, 0.5, 3.1183673469387756, 36010.711218730255);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 865, 36353.72825491286, 501.55395270927573, 0.5, 0.9387755102040817, 36010.711218730255);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 870, 36318.07176254697, 615.5692553888165, 0.5, 0.92, 36010.711218730255);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 871, 36440.134638859396, 862.0451895985938, 0.51, 2.693061224489796, 35231.120891757106);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 875, 35711.515829318974, 558.0378759098478, 0.51, 2.2481632653061223, 35231.120891757106);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 880, 35877.88483958214, 822.83070305731, 0.51, 2.544489795918367, 35231.120891757106);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 881, 37214.77986229894, 276.7397669790267, 0.495, 1.6718367346938776, 36420.313659844505);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 885, 36427.74234895214, 52.528764433591164, 0.495, 0.08, 36420.313659844505);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 890, 36444.75393578295, 98.5238577576533, 0.495, 0.35183673469387755, 36420.313659844505);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 891, 36467.088145487985, 144.47184362531817, 0.5, 0.23673469387755103, 36440.67782624159);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 895, 36464.81689044144, 170.68895987214415, 0.5, 0.16, 36440.67782624159);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 36481.51541305083, 205.55808899597636, 0.5, 0.27918367346938777, 36440.67782624159);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 35854.591884206005, 431.59119251183057, 0.5, 0.7918367346938775, 35622.40218883976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 905, 35976.63979536004, 568.1101472593722, 0.5, 1.0351020408163265, 35622.40218883976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 910, 35849.53085446051, 392.04511209514186, 0.5, 0.6816326530612244, 35622.40218883976);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 911, 36357.09641121944, 1104.4404873684314, 0.5, 1.286530612244898, 35377.41233958242);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 915, 35412.918879601384, 251.06915223896402, 0.5, 0.12, 35377.41233958242);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 920, 35412.106360412814, 245.3237739581447, 0.5, 0.08, 35377.41233958242);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 921, 36736.99922289963, 682.3977054834975, 0.495, 1.2236734693877551, 36307.75844245209);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 925, 36381.09815963758, 362.93747536555725, 0.495, 0.313469387755102, 36307.75844245209);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 930, 36307.75844245212, 2.939930839208568E-11, 0.495, 0.0, 36307.75844245209);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 931, 36963.21981532368, 52.82195097586607, 0.49, 0.593469387755102, 36837.679894723384);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 935, 36841.16494688867, 24.64304018841933, 0.49, 0.08, 36837.679894723384);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 940, 36856.066909308516, 77.0694705394379, 0.49, 0.31020408163265306, 36837.679894723384);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 941, 36005.73193907833, 559.6355335981926, 0.5, 1.8685714285714285, 35426.79379480985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 945, 35426.79379480985, 0.0, 0.5, 0.0, 35426.79379480985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 35426.79379480985, 0.0, 0.5, 0.0, 35426.79379480985);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 951, 36853.06911422422, 4.409896258812852E-11, 0.49, 0.0, 36853.06911422418);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 955, 36853.80605336828, 5.210946660843834, 0.49, 0.08, 36853.06911422418);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 960, 36853.06911422422, 4.409896258812852E-11, 0.49, 0.0, 36853.06911422418);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 961, 35241.14466205819, 3.67491354901071E-11, 0.5, 0.0, 35241.144662058156);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 965, 35241.14466205819, 3.67491354901071E-11, 0.5, 0.0, 35241.144662058156);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 970, 35241.14466205819, 3.67491354901071E-11, 0.5, 0.0, 35241.144662058156);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 971, 35532.97281854139, 2.204948129406426E-11, 0.5, 0.0, 35532.97281854141);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 975, 35532.97281854139, 2.204948129406426E-11, 0.5, 0.0, 35532.97281854141);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 980, 35532.97281854139, 2.204948129406426E-11, 0.5, 0.0, 35532.97281854141);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 981, 37493.15662365268, 1.469965419604284E-11, 0.495, 0.0, 37493.15662365269);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 985, 37493.15662365268, 1.469965419604284E-11, 0.495, 0.0, 37493.15662365269);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 990, 37493.15662365268, 1.469965419604284E-11, 0.495, 0.0, 37493.15662365269);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 991, 37304.71641538356, 2.939930839208568E-11, 0.495, 0.0, 37304.71641538353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 995, 37304.71641538356, 2.939930839208568E-11, 0.495, 0.0, 37304.71641538353);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 37304.71641538356, 2.939930839208568E-11, 0.495, 0.0, 37304.71641538353);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 48, 91, 74, 96, 18, 62, 20, 58, 73, 14, 16, 31, 10, 44, 97, 22, 76, 61, 59, 90, 46, 27, 92, 66, 57, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 33, 54, 82, 56, 6, 8, 86, 85, 26, 11, 34, 19, 50, 28, 2, 45, 42, 40, 13, 70, 99, 47, 77, 95, 51, 4, 36, 32, 75, 94, 12, 81, 38, 29, 88, 30, 41, 7, 55, 79, 64, 25, 65, 3, 87, 93, 21, 69, 15, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 89, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 48, 91, 27, 92, 66, 57, 60, 50, 86, 8, 56, 6, 19, 11, 34, 85, 26, 82, 54, 33, 45, 42, 2, 28, 13, 70, 40, 99, 47, 29, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 49, 43, 1, 53, 39, 63, 68, 67, 84, 38, 72, 24, 80, 97, 22, 76, 61, 59, 90, 46, 20, 73, 58, 16, 14, 10, 31, 44, 35, 83, 9, 71, 89, 74, 96, 55, 79, 30, 41, 88, 7, 18, 52, 78, 17, 23, 37, 98, 87, 93, 21, 15, 69, 25, 64, 65, 3, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 48, 74, 66, 57, 86, 50, 76, 61, 59, 19, 56, 8, 6, 26, 34, 85, 11, 82, 54, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 67, 84, 29, 38, 72, 68, 63, 39, 53, 1, 43, 49, 80, 24, 60, 27, 92, 41, 7, 79, 88, 30, 55, 96, 3, 64, 65, 25, 18, 69, 21, 15, 93, 87, 52, 78, 17, 98, 37, 23, 35, 83, 89, 9, 71, 20, 58, 73, 10, 16, 14, 44, 22, 97, 90, 31, 46, 62, 91, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 48, 74, 91, 27, 92, 90, 97, 22, 61, 59, 34, 85, 19, 26, 11, 33, 82, 54, 28, 45, 2, 42, 13, 99, 40, 70, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 38, 29, 67, 84, 86, 60, 57, 66, 63, 53, 72, 49, 43, 1, 39, 68, 80, 24, 50, 8, 6, 56, 76, 46, 31, 44, 14, 16, 10, 58, 73, 20, 71, 9, 83, 23, 37, 35, 98, 17, 78, 52, 87, 15, 93, 21, 69, 3, 64, 25, 65, 7, 41, 88, 30, 79, 55, 96, 18, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 88, 30, 79, 55, 96, 18, 78, 52, 87, 15, 21, 69, 93, 17, 23, 37, 98, 35, 9, 83, 20, 58, 73, 10, 14, 16, 44, 90, 97, 22, 61, 59, 76, 34, 85, 26, 11, 19, 56, 6, 8, 86, 50, 60, 24, 80, 72, 49, 43, 1, 63, 53, 39, 68, 67, 84, 38, 29, 95, 77, 51, 36, 4, 94, 81, 12, 32, 75, 13, 99, 47, 40, 70, 2, 42, 45, 28, 33, 82, 54, 57, 27, 92, 46, 31, 71, 89, 62, 3, 65, 64, 25, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 55, 96, 3, 65, 25, 64, 69, 21, 93, 17, 78, 87, 15, 52, 18, 89, 62, 83, 37, 23, 98, 35, 71, 58, 10, 16, 14, 97, 22, 44, 61, 34, 85, 26, 19, 11, 6, 8, 86, 50, 60, 80, 24, 57, 92, 27, 66, 39, 63, 53, 1, 68, 72, 49, 43, 67, 84, 2, 45, 28, 70, 40, 51, 95, 36, 4, 32, 12, 75, 94, 81, 77, 38, 29, 47, 99, 13, 42, 33, 82, 54, 56, 59, 76, 90, 31, 20, 73, 9, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 55, 96, 65, 64, 25, 3, 69, 93, 21, 15, 87, 17, 78, 9, 83, 73, 14, 16, 10, 31, 90, 97, 22, 44, 59, 76, 61, 34, 26, 85, 11, 19, 6, 8, 86, 50, 60, 24, 80, 57, 92, 27, 66, 56, 54, 82, 33, 28, 47, 70, 99, 40, 13, 2, 45, 42, 29, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 49, 43, 1, 53, 39, 63, 68, 72, 84, 67, 38, 46, 71, 20, 58, 35, 37, 98, 23, 52, 18, 89, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 55, 96, 3, 64, 65, 25, 69, 15, 21, 93, 87, 17, 83, 9, 62, 89, 18, 52, 78, 23, 37, 35, 98, 58, 73, 20, 71, 14, 16, 10, 31, 46, 90, 44, 22, 97, 59, 61, 76, 11, 85, 34, 26, 6, 50, 86, 56, 8, 19, 82, 54, 33, 45, 2, 28, 13, 42, 47, 70, 40, 99, 29, 84, 72, 43, 49, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 38, 67, 1, 53, 39, 63, 68, 24, 80, 60, 57, 27, 66, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 3, 65, 25, 64, 18, 89, 52, 15, 21, 69, 93, 87, 78, 17, 23, 35, 37, 83, 9, 98, 73, 20, 71, 58, 14, 16, 10, 31, 22, 97, 90, 44, 61, 59, 76, 19, 85, 26, 34, 11, 33, 45, 28, 2, 42, 82, 54, 6, 8, 56, 86, 50, 60, 80, 24, 68, 43, 72, 49, 81, 94, 12, 75, 32, 36, 4, 95, 51, 29, 13, 70, 40, 99, 47, 77, 38, 84, 67, 1, 53, 39, 63, 66, 92, 27, 57, 46, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 18, 3, 64, 65, 25, 21, 69, 52, 89, 78, 93, 15, 87, 17, 23, 37, 98, 35, 83, 9, 71, 58, 20, 73, 16, 14, 10, 46, 31, 44, 90, 22, 97, 59, 76, 61, 19, 56, 6, 26, 85, 34, 11, 54, 82, 33, 28, 45, 2, 42, 13, 70, 40, 99, 47, 77, 95, 36, 4, 51, 29, 84, 67, 1, 53, 39, 63, 68, 43, 72, 49, 81, 94, 75, 32, 12, 38, 8, 50, 86, 80, 24, 60, 57, 92, 27, 66, 62, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 64, 25, 65, 69, 87, 93, 21, 15, 52, 18, 3, 78, 17, 23, 37, 35, 98, 83, 9, 89, 62, 46, 71, 58, 20, 73, 16, 14, 10, 31, 44, 22, 90, 97, 59, 61, 76, 34, 26, 85, 19, 11, 54, 82, 33, 28, 45, 13, 47, 99, 70, 40, 2, 42, 6, 8, 56, 86, 60, 50, 80, 24, 84, 38, 95, 51, 77, 36, 4, 94, 81, 75, 32, 12, 29, 67, 68, 72, 49, 43, 1, 63, 53, 39, 66, 57, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 65, 64, 25, 3, 69, 21, 93, 15, 87, 52, 78, 23, 17, 37, 35, 98, 83, 9, 20, 71, 73, 58, 14, 16, 10, 31, 90, 97, 44, 22, 59, 61, 76, 34, 26, 85, 19, 11, 56, 8, 6, 33, 54, 82, 86, 60, 50, 24, 80, 72, 84, 67, 42, 45, 2, 13, 47, 99, 70, 40, 28, 29, 38, 77, 51, 95, 4, 36, 75, 32, 12, 94, 81, 49, 43, 63, 39, 53, 1, 68, 57, 27, 92, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 65, 64, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 46, 31, 16, 14, 10, 44, 90, 97, 22, 76, 59, 61, 85, 11, 26, 34, 19, 56, 8, 6, 82, 54, 33, 28, 45, 2, 42, 13, 47, 99, 70, 40, 95, 77, 51, 38, 4, 36, 75, 32, 12, 94, 81, 72, 49, 1, 43, 53, 39, 63, 84, 29, 67, 68, 80, 24, 50, 86, 60, 66, 57, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 25, 64, 65, 69, 15, 87, 78, 52, 21, 93, 17, 23, 37, 98, 35, 83, 9, 46, 31, 14, 16, 10, 44, 90, 97, 22, 59, 61, 76, 85, 34, 11, 26, 19, 6, 86, 50, 60, 57, 27, 92, 66, 72, 49, 43, 1, 53, 39, 63, 68, 84, 67, 80, 24, 56, 8, 54, 82, 33, 42, 45, 13, 28, 2, 70, 40, 99, 47, 51, 95, 77, 4, 36, 12, 75, 32, 94, 81, 38, 29, 71, 20, 73, 58, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 52, 78, 15, 87, 21, 93, 17, 23, 98, 37, 35, 83, 9, 20, 71, 73, 58, 14, 16, 10, 31, 44, 90, 97, 22, 76, 59, 61, 85, 34, 19, 26, 11, 8, 6, 56, 86, 50, 60, 72, 49, 43, 1, 63, 39, 53, 68, 80, 24, 67, 84, 70, 40, 99, 47, 51, 77, 95, 4, 36, 75, 12, 32, 94, 81, 38, 29, 13, 45, 42, 2, 28, 54, 82, 33, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 52, 87, 93, 15, 21, 69, 78, 17, 23, 35, 37, 98, 73, 58, 20, 71, 83, 9, 14, 16, 10, 31, 90, 97, 22, 44, 76, 61, 59, 26, 85, 34, 11, 54, 82, 33, 19, 56, 8, 6, 86, 50, 60, 24, 80, 68, 72, 67, 84, 38, 29, 13, 45, 42, 2, 28, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 63, 39, 53, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 52, 87, 93, 15, 21, 69, 78, 17, 23, 37, 35, 98, 20, 71, 83, 9, 73, 58, 16, 14, 10, 31, 90, 97, 22, 44, 46, 27, 92, 8, 6, 86, 50, 60, 24, 80, 68, 72, 67, 84, 29, 13, 45, 42, 2, 28, 40, 70, 99, 47, 51, 77, 95, 4, 36, 32, 75, 12, 94, 81, 33, 54, 82, 34, 26, 85, 61, 59, 76, 19, 56, 11, 57, 66, 39, 53, 63, 1, 43, 49, 38, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 21, 15, 93, 52, 87, 17, 78, 9, 83, 98, 37, 23, 35, 71, 20, 73, 58, 14, 16, 10, 46, 31, 44, 22, 97, 90, 61, 59, 76, 34, 19, 56, 6, 8, 11, 26, 85, 54, 82, 33, 45, 2, 42, 28, 13, 70, 40, 99, 47, 29, 38, 77, 51, 95, 4, 36, 32, 75, 12, 94, 81, 49, 43, 1, 63, 39, 53, 68, 72, 67, 84, 24, 50, 86, 60, 80, 66, 92, 27, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 78, 52, 17, 83, 9, 23, 37, 98, 35, 71, 20, 58, 73, 14, 10, 16, 46, 31, 22, 97, 90, 44, 76, 59, 61, 34, 26, 11, 85, 19, 6, 56, 8, 82, 54, 45, 2, 42, 28, 13, 40, 70, 99, 47, 77, 51, 38, 29, 95, 4, 36, 12, 32, 75, 94, 81, 1, 63, 39, 53, 43, 49, 72, 67, 84, 33, 86, 50, 60, 24, 80, 68, 66, 27, 92, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 87, 15, 52, 78, 17, 23, 35, 98, 37, 83, 9, 71, 58, 73, 20, 10, 14, 16, 31, 44, 22, 97, 90, 46, 76, 59, 61, 8, 6, 56, 11, 85, 26, 34, 19, 54, 82, 33, 28, 45, 2, 42, 13, 40, 70, 99, 47, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 1, 63, 39, 53, 43, 72, 49, 67, 84, 38, 29, 86, 50, 60, 80, 24, 68, 27, 66, 57, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 87, 52, 83, 9, 78, 17, 23, 37, 35, 98, 71, 20, 73, 58, 10, 14, 16, 31, 90, 44, 97, 22, 61, 59, 76, 66, 68, 50, 86, 6, 8, 56, 19, 34, 85, 26, 11, 82, 54, 33, 28, 42, 45, 2, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 32, 12, 75, 81, 94, 1, 63, 39, 53, 43, 49, 72, 67, 84, 80, 24, 60, 57, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 78, 17, 23, 37, 98, 35, 83, 9, 20, 73, 58, 71, 16, 14, 10, 31, 90, 44, 97, 22, 59, 76, 61, 34, 85, 19, 26, 11, 82, 54, 33, 45, 28, 2, 42, 70, 40, 99, 13, 47, 51, 77, 95, 4, 36, 81, 94, 32, 12, 75, 29, 38, 84, 68, 63, 39, 53, 1, 43, 49, 72, 67, 24, 80, 60, 50, 86, 6, 8, 56, 66, 57, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 78, 17, 23, 98, 37, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 97, 22, 90, 59, 76, 61, 85, 26, 34, 11, 19, 82, 54, 80, 24, 60, 50, 86, 56, 8, 6, 33, 42, 28, 45, 2, 70, 40, 13, 99, 47, 51, 77, 95, 29, 38, 36, 4, 32, 75, 12, 94, 81, 67, 84, 49, 72, 43, 63, 39, 53, 1, 68, 66, 57, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 35, 98, 37, 23, 78, 83, 9, 71, 20, 73, 58, 14, 16, 10, 46, 90, 97, 44, 31, 22, 76, 59, 61, 85, 26, 34, 11, 19, 6, 8, 56, 86, 57, 50, 24, 80, 60, 68, 63, 72, 49, 67, 84, 38, 4, 36, 95, 51, 77, 47, 70, 40, 99, 13, 45, 42, 2, 28, 33, 82, 54, 29, 32, 12, 75, 94, 81, 1, 43, 39, 53, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 35, 98, 37, 23, 78, 83, 9, 71, 20, 73, 58, 14, 16, 10, 31, 44, 22, 97, 90, 46, 27, 92, 57, 50, 24, 80, 60, 66, 67, 84, 38, 95, 51, 77, 4, 36, 75, 94, 81, 12, 32, 43, 49, 72, 68, 63, 1, 39, 53, 86, 8, 6, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 29, 56, 11, 19, 85, 26, 34, 59, 61, 76, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 71, 9, 83, 58, 73, 20, 16, 14, 10, 31, 90, 44, 97, 22, 59, 76, 61, 34, 85, 26, 19, 11, 56, 6, 8, 54, 82, 33, 45, 2, 42, 28, 13, 40, 70, 99, 47, 29, 95, 77, 51, 38, 4, 36, 32, 12, 75, 94, 81, 49, 43, 1, 53, 39, 63, 67, 84, 68, 72, 80, 24, 60, 50, 86, 92, 27, 57, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 71, 83, 9, 20, 58, 73, 14, 16, 10, 31, 46, 97, 90, 44, 22, 59, 61, 26, 85, 34, 11, 76, 19, 56, 8, 50, 60, 24, 80, 53, 1, 39, 63, 68, 72, 43, 49, 84, 67, 38, 36, 4, 12, 75, 32, 94, 81, 95, 77, 51, 29, 2, 42, 47, 13, 99, 70, 40, 45, 28, 33, 82, 54, 6, 86, 92, 27, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 20, 71, 73, 58, 31, 10, 16, 14, 46, 90, 97, 22, 44, 59, 61, 76, 86, 50, 60, 24, 80, 56, 6, 8, 11, 19, 85, 34, 26, 33, 82, 54, 45, 2, 42, 28, 13, 47, 40, 70, 99, 51, 77, 81, 94, 12, 75, 32, 36, 4, 95, 29, 38, 67, 84, 72, 43, 49, 68, 63, 1, 39, 53, 66, 57, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 9, 83, 71, 20, 73, 58, 16, 14, 10, 31, 44, 22, 61, 76, 59, 86, 8, 6, 56, 11, 19, 85, 34, 26, 54, 82, 33, 28, 45, 2, 42, 13, 99, 70, 40, 47, 77, 51, 95, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 67, 84, 29, 38, 49, 68, 63, 39, 53, 50, 60, 24, 80, 66, 57, 27, 92, 46, 90, 97, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 58, 73, 20, 71, 46, 31, 10, 16, 14, 22, 97, 90, 44, 59, 76, 61, 34, 26, 85, 11, 19, 6, 56, 24, 80, 72, 63, 39, 53, 68, 49, 43, 1, 81, 94, 75, 12, 32, 36, 4, 38, 29, 95, 77, 51, 47, 70, 40, 99, 13, 2, 45, 33, 54, 82, 42, 28, 84, 67, 8, 86, 50, 60, 57, 92, 27, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 20, 58, 46, 97, 22, 90, 44, 31, 16, 14, 10, 92, 27, 66, 80, 24, 60, 57, 86, 50, 56, 8, 6, 11, 19, 26, 85, 34, 59, 61, 76, 54, 82, 33, 28, 45, 13, 2, 42, 70, 40, 99, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 1, 63, 39, 53, 68, 72, 43, 49, 67, 84, 29, 38, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 46, 97, 22, 44, 90, 76, 59, 61, 26, 11, 85, 34, 19, 82, 54, 33, 28, 45, 2, 42, 47, 70, 40, 99, 13, 29, 38, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 43, 1, 39, 63, 53, 68, 72, 49, 84, 67, 8, 6, 56, 86, 50, 80, 24, 60, 57, 27, 66, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 44, 31, 22, 97, 90, 46, 27, 92, 57, 60, 80, 24, 72, 67, 84, 56, 8, 6, 19, 11, 26, 85, 34, 61, 59, 76, 50, 86, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 4, 36, 95, 29, 38, 49, 43, 81, 94, 75, 12, 32, 1, 63, 53, 39, 68, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 44, 31, 90, 46, 27, 92, 57, 60, 80, 24, 50, 86, 6, 19, 11, 26, 85, 34, 61, 59, 76, 22, 97, 8, 56, 54, 82, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 51, 77, 95, 36, 4, 75, 12, 32, 94, 81, 43, 1, 63, 53, 39, 68, 72, 67, 84, 49, 29, 38, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 16, 14, 31, 44, 76, 11, 54, 82, 33, 28, 42, 45, 2, 13, 99, 70, 40, 47, 38, 29, 77, 51, 95, 36, 4, 12, 32, 75, 94, 81, 1, 43, 63, 53, 39, 68, 84, 67, 72, 49, 66, 57, 86, 50, 60, 80, 24, 56, 6, 8, 19, 26, 85, 34, 61, 59, 22, 97, 90, 46, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 16, 14, 31, 92, 27, 57, 66, 53, 39, 63, 43, 72, 49, 12, 75, 32, 94, 81, 1, 67, 84, 29, 38, 4, 36, 51, 95, 77, 47, 13, 70, 40, 99, 45, 28, 2, 42, 33, 82, 54, 60, 24, 80, 68, 50, 86, 8, 56, 6, 19, 85, 34, 26, 11, 61, 59, 76, 22, 44, 97, 90, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 31, 97, 90, 46, 44, 22, 76, 59, 61, 85, 26, 11, 6, 8, 56, 19, 34, 42, 2, 45, 28, 54, 82, 33, 86, 57, 60, 24, 80, 68, 72, 49, 43, 39, 53, 63, 1, 81, 94, 75, 12, 32, 77, 51, 95, 38, 36, 4, 47, 13, 70, 40, 99, 67, 84, 29, 92, 27, 66, 50, 14, 16, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 44, 50, 24, 80, 60, 92, 27, 57, 66, 39, 63, 53, 1, 43, 68, 72, 67, 84, 49, 81, 94, 12, 75, 32, 36, 4, 95, 77, 51, 38, 29, 33, 28, 45, 2, 13, 70, 40, 99, 47, 42, 82, 54, 19, 11, 26, 85, 34, 86, 56, 8, 6, 61, 59, 76, 22, 97, 90, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 46, 44, 97, 90, 22, 59, 61, 76, 86, 50, 11, 26, 85, 34, 19, 56, 6, 8, 82, 54, 33, 28, 2, 13, 47, 99, 70, 40, 42, 45, 29, 38, 77, 95, 51, 36, 4, 32, 75, 12, 94, 81, 72, 49, 84, 67, 68, 43, 1, 53, 39, 63, 24, 80, 60, 57, 92, 27, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 59, 61, 85, 19, 76, 86, 56, 6, 8, 82, 54, 33, 42, 45, 2, 28, 84, 67, 68, 50, 24, 80, 60, 57, 27, 92, 66, 39, 53, 63, 72, 49, 43, 1, 81, 94, 32, 12, 75, 4, 36, 38, 29, 95, 77, 51, 47, 13, 99, 70, 40, 11, 26, 34, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 46, 90, 44, 76, 59, 61, 19, 85, 34, 26, 11, 6, 56, 8, 82, 54, 33, 45, 70, 40, 99, 47, 13, 42, 2, 28, 29, 51, 77, 95, 4, 81, 94, 12, 75, 32, 36, 38, 84, 67, 72, 49, 43, 1, 39, 63, 53, 50, 86, 60, 80, 24, 68, 66, 57, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 85, 34, 26, 11, 19, 56, 6, 8, 50, 86, 82, 54, 33, 45, 28, 42, 2, 13, 99, 70, 40, 47, 29, 38, 95, 51, 77, 4, 36, 12, 75, 32, 94, 81, 49, 43, 53, 39, 63, 1, 72, 67, 84, 24, 80, 60, 68, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 59, 76, 61, 19, 11, 34, 26, 85, 56, 6, 8, 86, 82, 54, 33, 28, 45, 42, 2, 13, 40, 70, 99, 47, 77, 51, 95, 38, 29, 4, 36, 32, 12, 75, 94, 81, 49, 43, 1, 53, 39, 63, 72, 67, 84, 80, 24, 68, 60, 50, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 61, 59, 26, 34, 85, 86, 56, 8, 6, 19, 11, 54, 82, 33, 42, 45, 28, 2, 40, 99, 70, 13, 47, 77, 51, 95, 38, 29, 4, 36, 12, 75, 32, 94, 81, 1, 53, 39, 63, 49, 43, 72, 84, 67, 68, 80, 24, 50, 60, 57, 66, 46, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 34, 26, 85, 11, 54, 33, 50, 86, 56, 8, 6, 82, 28, 45, 2, 42, 13, 99, 47, 40, 70, 29, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94, 75, 32, 12, 36, 4, 51, 77, 95, 38, 80, 24, 60, 46, 57, 66, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 8, 6, 56, 86, 50, 60, 24, 80, 68, 39, 63, 53, 1, 72, 43, 49, 81, 94, 12, 32, 75, 36, 4, 51, 77, 95, 38, 84, 33, 45, 2, 42, 28, 13, 70, 40, 99, 47, 29, 67, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 34, 26, 85, 19, 11, 54, 82, 8, 6, 56, 50, 60, 24, 80, 86, 84, 67, 49, 81, 94, 12, 32, 75, 36, 4, 51, 77, 95, 38, 47, 29, 13, 70, 40, 99, 28, 45, 2, 42, 33, 43, 1, 72, 63, 53, 39, 68, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 85, 34, 26, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 67, 49, 1, 63, 39, 53, 81, 94, 32, 75, 12, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 42, 2, 45, 28, 33, 82, 54, 38, 29, 84, 72, 43, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 6, 8, 56, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 81, 94, 32, 75, 12, 36, 4, 95, 77, 51, 47, 99, 70, 40, 45, 28, 33, 82, 54, 85, 26, 34, 57, 27, 92, 66, 72, 43, 49, 29, 84, 67, 38, 13, 2, 42, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 57, 60, 24, 80, 68, 49, 43, 1, 39, 53, 63, 72, 67, 84, 81, 94, 75, 32, 12, 36, 4, 77, 51, 95, 38, 29, 28, 45, 2, 42, 13, 47, 99, 70, 40, 33, 82, 54, 85, 34, 26, 46, 27, 92, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 80, 24, 60, 68, 63, 39, 53, 43, 1, 72, 49, 81, 94, 12, 32, 75, 36, 4, 51, 77, 95, 38, 67, 84, 29, 47, 99, 70, 40, 13, 2, 28, 45, 42, 82, 54, 33, 26, 85, 34, 46, 66, 92, 27, 57, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 60, 24, 80, 68, 72, 63, 39, 53, 1, 43, 49, 81, 94, 12, 75, 32, 4, 36, 51, 77, 95, 38, 29, 84, 67, 28, 45, 42, 2, 47, 70, 40, 99, 13, 26, 85, 34, 33, 82, 54, 57, 27, 66, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 60, 80, 24, 68, 72, 67, 49, 63, 53, 39, 1, 43, 94, 81, 12, 75, 32, 36, 4, 95, 77, 51, 29, 84, 38, 28, 2, 13, 99, 40, 70, 47, 42, 45, 82, 54, 33, 26, 85, 34, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 82, 54, 33, 28, 45, 2, 13, 99, 40, 70, 42, 47, 38, 29, 77, 95, 51, 36, 4, 12, 32, 75, 94, 81, 49, 43, 1, 53, 63, 39, 72, 68, 60, 80, 67, 84, 24, 66, 57, 92, 46, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 34, 85, 82, 54, 33, 45, 2, 13, 99, 70, 40, 47, 77, 95, 51, 36, 4, 12, 32, 75, 94, 81, 80, 24, 60, 68, 39, 53, 63, 72, 49, 43, 1, 67, 84, 38, 29, 28, 42, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 54, 82, 33, 45, 2, 42, 13, 99, 70, 40, 47, 51, 77, 95, 36, 4, 12, 32, 75, 94, 81, 84, 67, 38, 29, 28, 24, 80, 68, 72, 49, 43, 1, 63, 53, 39, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 28, 45, 42, 2, 99, 40, 70, 13, 47, 29, 38, 51, 77, 95, 36, 4, 32, 12, 75, 94, 81, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 60, 24, 80, 57, 92, 46, 27, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 28, 45, 42, 2, 13, 40, 99, 70, 47, 29, 38, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 43, 1, 53, 39, 63, 72, 49, 67, 84, 68, 80, 24, 60, 66, 92, 27, 57, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 2, 42, 13, 99, 40, 70, 47, 29, 38, 81, 94, 32, 12, 75, 36, 4, 77, 51, 95, 84, 67, 49, 1, 43, 53, 39, 63, 72, 68, 60, 80, 24, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 42, 2, 28, 13, 99, 40, 70, 47, 29, 38, 95, 77, 51, 36, 4, 75, 32, 12, 94, 81, 49, 72, 43, 1, 63, 39, 53, 68, 84, 67, 80, 24, 60, 57, 27, 66, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 40, 70, 42, 2, 29, 84, 67, 95, 77, 51, 38, 36, 4, 75, 32, 12, 94, 81, 49, 43, 72, 1, 53, 39, 63, 68, 80, 24, 60, 57, 27, 92, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 40, 70, 2, 29, 84, 67, 72, 49, 43, 81, 94, 32, 12, 75, 4, 36, 38, 51, 77, 95, 42, 68, 63, 39, 53, 1, 24, 80, 60, 57, 27, 92, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 67, 84, 38, 29, 51, 77, 95, 36, 4, 32, 75, 12, 94, 81, 43, 72, 49, 1, 53, 63, 39, 68, 80, 24, 60, 46, 92, 66, 57, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 2, 42, 51, 77, 95, 38, 29, 67, 84, 72, 49, 1, 53, 63, 39, 43, 81, 94, 12, 32, 75, 36, 4, 68, 80, 24, 60, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 68, 63, 39, 53, 1, 49, 72, 43, 81, 94, 75, 12, 32, 36, 4, 95, 77, 51, 29, 38, 84, 67, 80, 24, 60, 57, 46, 66, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 2, 42, 84, 81, 94, 75, 12, 32, 36, 4, 51, 77, 95, 29, 38, 67, 49, 72, 43, 1, 39, 53, 63, 68, 60, 80, 24, 66, 57, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 84, 72, 39, 53, 1, 81, 12, 94, 75, 32, 4, 36, 77, 51, 95, 38, 29, 67, 49, 43, 63, 68, 80, 24, 60, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 51, 77, 95, 94, 81, 12, 75, 32, 4, 36, 38, 84, 67, 49, 43, 1, 53, 39, 63, 72, 68, 24, 80, 60, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 4, 36, 38, 84, 67, 43, 1, 81, 94, 75, 32, 12, 49, 72, 63, 53, 39, 68, 80, 24, 60, 66, 27, 92, 57, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 51, 77, 4, 36, 12, 75, 32, 94, 38, 84, 67, 72, 43, 49, 81, 1, 53, 39, 63, 68, 80, 60, 24, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 4, 36, 38, 32, 12, 75, 94, 81, 1, 39, 53, 63, 68, 72, 49, 43, 67, 84, 80, 24, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 4, 36, 32, 75, 12, 94, 81, 1, 43, 49, 72, 67, 84, 38, 80, 24, 68, 60, 63, 53, 39, 66, 57, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 75, 12, 94, 81, 38, 43, 1, 53, 63, 39, 68, 72, 49, 67, 84, 24, 80, 60, 57, 46, 27, 92, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 43, 39, 63, 53, 1, 49, 84, 67, 38, 72, 68, 80, 24, 60, 57, 46, 66, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 43, 53, 63, 39, 1, 49, 67, 84, 38, 72, 68, 80, 24, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 38, 84, 67, 49, 43, 72, 63, 39, 53, 1, 68, 80, 24, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 39, 53, 63, 72, 49, 43, 68, 80, 24, 60, 57, 66, 27, 92, 46, 67, 84, 38, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 38, 67, 84, 49, 43, 1, 39, 53, 63, 68, 72, 60, 24, 80, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 43, 72, 84, 67, 49, 38, 1, 53, 63, 39, 68, 60, 80, 24, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 49, 72, 84, 67, 38, 24, 60, 80, 63, 39, 53, 68, 46, 92, 27, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 84, 38, 67, 80, 60, 24, 68, 63, 39, 53, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 84, 38, 67, 68, 63, 39, 53, 60, 24, 80, 57, 66, 46, 92, 27, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 67, 84, 38, 68, 63, 53, 39, 60, 24, 80, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 67, 84, 63, 39, 53, 68, 24, 80, 60, 27, 92, 46, 57, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 80, 60, 24, 68, 39, 63, 53, 66, 57, 46, 27, 92, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 80, 24, 68, 39, 53, 63, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 80, 24, 60, 57, 46, 92, 27, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 24, 80, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 24, 80, 60, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 24, 80, 60, 57, 27, 66, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 24, 80, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 66, 27, 92, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 66, 92, 27, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 46, 66, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 48, 74, 91, 7, 41, 79, 30, 88, 96, 55, 62, 89, 18, 3, 64, 25, 65, 69, 93, 21, 15, 52, 87, 17, 78, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 10, 14, 16, 31, 22, 97, 90, 44, 76, 59, 61, 19, 11, 56, 6, 8, 86, 50, 26, 85, 34, 33, 82, 54, 45, 28, 13, 47, 99, 70, 40, 42, 2, 29, 95, 77, 51, 36, 4, 32, 12, 75, 94, 81, 1, 43, 72, 49, 38, 84, 67, 53, 39, 63, 68, 60, 80, 24, 57, 92, 27, 66, 46, 0]");
    }

    @Test
    public void test_mmas_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_75_freq_100() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_3OPT_MADTSP mmas_3OPT_madtsp = new MMAS_3OPT_MADTSP(graph, 0.8, 1000, 0.75, 100, 1.0, 5.0);
        mmas_3OPT_madtsp.setMmasSeed(1);
        mmas_3OPT_madtsp.setDbgpSeed(1);
        mmas_3OPT_madtsp.setStatisticInterval(1);
        mmas_3OPT_madtsp.setShowLog(false);
        mmas_3OPT_madtsp.run();
        assertThat(mmas_3OPT_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(34630.58748306688);
        assertThat(mmas_3OPT_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(34630.58748306688);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getGlobalStatistics())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");

        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1, 46567.88566249352, 4338.286883293141, 0.0, 57.16, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 50, 37877.64127049464, 1898.0959380649163, 0.0, 14.245714285714286, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 100, 37242.8689029237, 1631.366268526586, 0.5, 11.308571428571428, 32672.64769159847);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 101, 41578.224470289766, 3421.753159627792, 0.48, 35.42857142857143, 31825.601093611163);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 150, 32602.717476158938, 2382.2021737022374, 0.52, 8.631836734693877, 30469.996169687452);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 200, 33679.08066734113, 3406.7553688037497, 0.5, 9.639183673469388, 30469.996169687452);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 201, 43400.391696270795, 3120.1936979752686, 0.475, 32.41061224489796, 36662.55933785118);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 250, 36427.144333979144, 3145.846403000376, 0.5, 12.907755102040817, 31960.777333953738);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 300, 36101.39118462484, 3071.3631351471076, 0.5, 10.259591836734694, 31960.777333953738);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 301, 44904.43612652268, 3856.86128579199, 0.48, 26.237551020408162, 34537.71009137195);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 350, 35698.776903949685, 2843.2369315993983, 0.5, 3.643265306122449, 33611.267248589334);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 400, 36033.680161626704, 3011.9190673197154, 0.5, 5.995918367346939, 33443.654224378915);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 401, 42800.184915649705, 3003.2719565273947, 0.47, 24.958367346938775, 33711.12737685914);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 450, 34747.81285946561, 1655.8064712885973, 0.495, 4.99265306122449, 33563.5922680849);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 500, 35033.73138890064, 1679.6040161933406, 0.495, 5.251428571428572, 33445.89995228105);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 501, 40424.10443537074, 2189.888932783568, 0.475, 18.074285714285715, 32926.85357302669);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 550, 33255.08687015477, 1628.8125409739687, 0.545, 1.9648979591836735, 32424.44763663045);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 600, 33112.77011617189, 1358.5233226006599, 0.5, 1.343673469387755, 32424.44763663045);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 601, 40659.715042027936, 2156.037885201153, 0.475, 10.153469387755102, 34479.01095131882);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 650, 36409.35746746809, 1820.7156690573286, 0.475, 3.333877551020408, 34479.01095131882);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 700, 35561.994541278276, 2016.6474253005476, 0.495, 6.118367346938776, 34025.71440112166);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 701, 36776.4248104663, 1204.4935432374891, 0.495, 7.322448979591837, 33420.79499559263);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 750, 33485.11639731721, 260.5394953331406, 0.495, 0.7722448979591837, 33420.79499559263);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 800, 33645.58569734829, 742.0545024267423, 0.49, 0.8946938775510204, 33420.79499559263);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 801, 37092.845575980864, 1097.397715683119, 0.495, 5.1387755102040815, 34373.008651812124);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 850, 34881.74659548624, 351.6398140763754, 0.495, 0.8, 34373.008651812124);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 900, 35219.31962701915, 670.1496375620912, 0.5, 1.28, 34373.008651812124);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 901, 35592.938977330676, 879.1668265145595, 0.495, 2.7583673469387757, 34630.58748306688);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 950, 34674.66033181263, 311.6421021434652, 0.495, 0.12, 34630.58748306688);
        TestUtils.checkValues(mmas_3OPT_madtsp.getIterationStatistics(), 1000, 34630.587483066854, 2.939930839208568E-11, 0.49, 0.0, 34630.58748306688);
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 10, 16, 14, 31, 90, 97, 22, 44, 85, 26, 11, 34, 59, 61, 76, 50, 60, 24, 80, 68, 67, 72, 49, 43, 53, 39, 63, 1, 84, 29, 38, 51, 77, 4, 36, 32, 75, 94, 12, 81, 95, 47, 99, 70, 40, 13, 42, 2, 45, 28, 33, 54, 82, 19, 56, 6, 8, 86, 57, 92, 27, 66, 46, 73, 20, 58, 71, 9, 83, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 55, 79, 88, 30, 41, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 59, 61, 85, 26, 11, 34, 19, 86, 24, 80, 68, 67, 72, 49, 53, 39, 63, 43, 1, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 6, 8, 56, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 46, 31, 44, 90, 97, 22, 76, 61, 59, 11, 85, 26, 34, 19, 86, 24, 80, 68, 63, 53, 39, 43, 1, 72, 49, 67, 84, 28, 2, 45, 42, 40, 99, 70, 47, 77, 51, 95, 4, 36, 32, 12, 75, 94, 81, 38, 29, 13, 33, 54, 82, 56, 8, 6, 50, 60, 57, 92, 27, 66, 79, 88, 30, 41, 64, 25, 65, 3, 87, 21, 93, 69, 15, 52, 55, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 44, 22, 76, 59, 61, 11, 19, 85, 34, 26, 54, 82, 33, 6, 8, 56, 86, 50, 60, 24, 80, 43, 1, 63, 39, 53, 49, 81, 94, 12, 32, 75, 36, 4, 38, 95, 51, 77, 29, 70, 40, 99, 47, 13, 42, 2, 45, 28, 84, 67, 72, 68, 57, 66, 27, 92, 46, 52, 21, 15, 87, 93, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 85, 26, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 87, 93, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 11, 34, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 85, 26, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 87, 93, 15, 21, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 11, 34, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 85, 26, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 87, 15, 93, 21, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 11, 34, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 85, 26, 34, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 26, 34, 85, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 26, 34, 85, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 26, 34, 85, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 26, 34, 85, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 6, 8, 56, 86, 57, 66, 27, 92, 46, 52, 21, 15, 93, 87, 69, 25, 64, 65, 3, 55, 7, 88, 30, 79, 41, 39, 53, 63, 68, 72, 67, 84, 28, 45, 2, 42, 13, 70, 40, 99, 47, 29, 38, 95, 51, 77, 4, 36, 75, 32, 12, 94, 81, 49, 1, 43, 80, 24, 60, 50, 19, 26, 34, 85, 76, 59, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 6, 8, 56, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 3, 25, 30, 79, 55, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 6, 8, 56, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 25, 30, 79, 55, 3, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 25, 30, 79, 55, 3, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 25, 30, 79, 55, 3, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 42, 13, 47, 40, 99, 70, 95, 77, 51, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 25, 30, 79, 55, 3, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 95, 77, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 65, 64, 25, 30, 79, 55, 3, 7, 41, 88, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 95, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 64, 25, 65, 55, 3, 7, 41, 88, 79, 30, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 95, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 64, 25, 65, 55, 3, 7, 41, 88, 79, 30, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 95, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 64, 25, 65, 55, 3, 7, 41, 88, 79, 30, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 4, 36, 75, 32, 12, 94, 81, 72, 68, 63, 39, 53, 1, 43, 49, 29, 95, 38, 84, 67, 50, 60, 24, 80, 66, 57, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 27, 92, 46, 52, 87, 93, 15, 21, 69, 64, 25, 65, 55, 3, 7, 41, 88, 79, 30, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 86, 56, 6, 8, 59, 76, 34, 26, 85, 19, 50, 60, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 86, 56, 6, 8, 59, 76, 34, 26, 85, 19, 50, 60, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 86, 56, 6, 8, 59, 76, 34, 26, 85, 19, 50, 60, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 86, 56, 6, 8, 85, 19, 26, 34, 59, 76, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 34, 19, 26, 85, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 34, 19, 26, 85, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 34, 19, 26, 85, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 56, 6, 8, 34, 19, 26, 85, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 8, 6, 56, 19, 26, 85, 34, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 72, 49, 43, 1, 63, 53, 39, 68, 80, 24, 67, 84, 38, 29, 8, 6, 56, 19, 26, 85, 34, 59, 76, 86, 60, 50, 57, 27, 92, 66, 7, 41, 88, 30, 79, 55, 64, 65, 25, 3, 69, 87, 15, 21, 93, 52, 46, 44, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 1, 63, 68, 24, 80, 60, 50, 86, 56, 6, 8, 19, 34, 26, 85, 76, 59, 46, 44, 92, 27, 57, 66, 88, 41, 30, 79, 55, 3, 25, 64, 65, 52, 87, 15, 21, 93, 69, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 25, 64, 65, 52, 15, 87, 93, 21, 69, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 52, 15, 87, 93, 21, 69, 65, 25, 64, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 52, 15, 87, 93, 21, 69, 65, 25, 64, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 85, 26, 34, 76, 59, 44, 46, 57, 92, 27, 66, 88, 41, 55, 3, 52, 15, 87, 93, 21, 69, 65, 25, 64, 79, 30, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 25, 64, 65, 69, 93, 21, 15, 87, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 25, 65, 52, 69, 15, 93, 87, 21, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[0, 5, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");
        assertThat(TestUtils.getTourString(mmas_3OPT_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[0, 5, 62, 48, 91, 74, 96, 18, 89, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 90, 97, 22, 61, 11, 54, 82, 33, 28, 2, 45, 99, 70, 40, 42, 13, 47, 51, 77, 95, 4, 36, 12, 32, 75, 94, 81, 43, 49, 72, 67, 84, 38, 29, 39, 53, 63, 1, 68, 80, 24, 60, 50, 86, 56, 8, 6, 19, 26, 85, 34, 59, 76, 44, 46, 92, 27, 57, 66, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 7, 0]");

    }

}
