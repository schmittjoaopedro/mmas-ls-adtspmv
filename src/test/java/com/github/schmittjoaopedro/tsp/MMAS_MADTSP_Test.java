package com.github.schmittjoaopedro.tsp;

import com.github.schmittjoaopedro.tsp.algorithms.MMAS_MADTSP;
import com.github.schmittjoaopedro.tsp.graph.Graph;
import com.github.schmittjoaopedro.tsp.graph.GraphFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.assertj.core.api.Assertions.assertThat;

public class MMAS_MADTSP_Test {

    private String kroA100;

    private String kroA150;

    @Before
    public void beforeClass() {
        kroA100 = getClass().getClassLoader().getResource("tsp/KroA100.tsp").getFile();
        kroA150 = getClass().getClassLoader().getResource("tsp/KroA150.tsp").getFile();
    }

    @Test
    public void test_mmas_moving_asymmetric_dynamic_tsp_kroA100_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA100));
        MMAS_MADTSP mmas_madtsp = new MMAS_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_madtsp.setMmasSeed(1);
        mmas_madtsp.setDbgpSeed(1);
        mmas_madtsp.setStatisticInterval(1);
        mmas_madtsp.setShowLog(false);
        mmas_madtsp.run();

        assertThat(mmas_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(25214.27406067593);
        assertThat(mmas_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(25214.27406067593);
        assertThat(TestUtils.getTourString(mmas_madtsp.getGlobalStatistics())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");

        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1, 32087.941671030396, 2484.2471787650425, 0.0, 54.590204081632656, 26322.068575260324);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 5, 26129.83419725305, 1290.6931252536815, 0.555, 3.2146938775510203, 25449.357633846703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 10, 25808.525014770898, 1834.4860968950138, 0.52, 2.996734693877551, 24972.87420872596);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 11, 30592.463961353686, 1488.5817070783874, 0.48, 13.515102040816327, 26153.42840847552);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 15, 26017.036750115207, 2220.2719362657967, 0.53, 6.970612244897959, 24623.42840847552);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 20, 25741.67139587655, 1885.5723028797224, 0.49, 5.027755102040817, 24530.42840847552);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 21, 32499.026250925053, 3185.735476736402, 0.49, 27.67265306122449, 26911.452278245575);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 25, 31753.130849406723, 3720.971170504209, 0.535, 12.29469387755102, 26200.25396625046);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 30, 28601.9777343296, 3155.3778267704192, 0.56, 8.120816326530612, 25794.179510840637);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 31, 33139.93687588932, 2231.2973043492643, 0.52, 18.08408163265306, 28119.738520151303);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 35, 28902.06751311827, 3122.975018464241, 0.59, 9.994285714285715, 25183.621535640228);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 40, 30173.411063851687, 2259.649860842036, 0.495, 11.841632653061225, 25155.621535640228);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 41, 31062.091755112386, 1477.6621920917141, 0.505, 12.587755102040816, 28428.911835683677);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 45, 28783.431246908716, 2410.380072671579, 0.55, 12.202448979591837, 25224.613738600892);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 50, 28130.328067794497, 2976.052768420404, 0.5, 8.324897959183673, 24570.73236577197);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 51, 31899.83128545482, 1897.027734932988, 0.515, 16.35265306122449, 26650.885527420443);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 55, 30127.643050727682, 2681.0823394244026, 0.5, 11.430204081632652, 25482.7476609357);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 60, 29278.015882037595, 3046.0222124435345, 0.505, 8.726530612244899, 24572.78211107938);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 61, 32578.043006688888, 1726.8939385433523, 0.505, 27.306122448979593, 29151.818298964667);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 65, 28758.789117368986, 2895.899681668656, 0.54, 7.92734693877551, 26336.518687085143);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 70, 27927.292275720276, 2658.4852469393527, 0.52, 6.955918367346939, 26065.760616404466);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 71, 31375.703776245242, 2904.2857296711413, 0.525, 10.448163265306123, 26236.206608879653);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 75, 28535.22902728578, 3020.5743297892263, 0.505, 7.786938775510204, 25229.93315830215);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 80, 28961.971222914508, 2052.318863325182, 0.505, 7.619591836734694, 25229.93315830215);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 81, 29442.985620073257, 1840.6139105777957, 0.475, 17.184489795918367, 26471.478073745246);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 85, 26544.91802402862, 1678.6806661299786, 0.63, 16.809795918367346, 24521.554018231313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 90, 25874.64389154574, 2754.3231827201516, 0.55, 4.915918367346939, 23943.554018231313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 91, 28311.283936400054, 2494.391997696438, 0.5, 8.177959183673469, 26006.91003486878);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 95, 27864.292758570915, 2795.235029230093, 0.5, 10.013877551020409, 24916.65291552229);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 100, 27308.600398881543, 2249.859464513424, 0.505, 8.467755102040817, 24872.65291552229);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 101, 30303.281260602787, 2127.401344394979, 0.5, 10.762448979591836, 24305.080884021198);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 105, 24667.723601577818, 1315.0923240956563, 0.535, 2.966530612244898, 23873.080884021198);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 110, 24343.73022038023, 1631.328133042181, 0.525, 3.2579591836734694, 23438.31657710296);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 111, 28399.65334913609, 2205.063154091501, 0.495, 14.78204081632653, 25014.60205813968);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 115, 27231.728812981844, 2266.0289465983205, 0.505, 8.27591836734694, 24758.7843246553);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 120, 26458.048796012183, 1729.7620607804804, 0.5, 5.541224489795918, 24683.784324655295);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 121, 26589.170112832315, 1984.4887681464036, 0.505, 7.398367346938776, 24211.50534851517);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 125, 28146.223510335934, 2935.0482349118197, 0.505, 8.475102040816326, 24144.50534851517);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 130, 25780.292285840238, 1389.3907618031794, 0.5, 6.349387755102041, 23881.50534851517);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 131, 26896.697722019035, 2104.4394559033926, 0.495, 5.979591836734694, 24765.383490042797);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 135, 24777.81395059425, 1129.450824560218, 0.55, 2.066938775510204, 24393.85416706708);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 140, 24364.771780070736, 694.0981010017664, 0.5, 1.6122448979591837, 24053.22956277057);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 141, 30755.033515790958, 5038.1306094330575, 0.51, 8.398367346938775, 24227.50425486473);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 145, 24887.309899944878, 1638.1671951367273, 0.52, 5.169795918367347, 23796.529117329042);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 150, 24683.021055402605, 2161.2956350853697, 0.5, 2.753469387755102, 23588.662111506732);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 151, 29266.651015546235, 2053.5222189746064, 0.52, 11.364081632653061, 25512.91467281604);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 155, 29559.66976458358, 2974.90223247292, 0.5, 11.843265306122449, 25480.91467281604);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 160, 28146.42388871871, 2483.688805290214, 0.5, 9.01469387755102, 25480.91467281604);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 161, 27232.064827846483, 2519.2340208766377, 0.49, 8.226122448979591, 24812.42291515972);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 165, 26397.769421184963, 2578.071992718194, 0.5, 2.979591836734694, 24725.153005785323);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 170, 26075.153307653876, 2542.9143457207924, 0.52, 2.6946938775510203, 24330.052763905755);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 171, 25759.24263361235, 2027.3359204517562, 0.5, 3.0187755102040814, 24482.335194616753);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 175, 25125.110211619725, 1842.7137656007621, 0.515, 1.886530612244898, 24433.335194616753);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 180, 25435.69871548883, 2040.8384723683332, 0.515, 1.7469387755102042, 24433.335194616753);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 181, 27816.616073723948, 3329.806749869309, 0.5, 4.722448979591837, 24725.592366514575);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 185, 26111.56310001349, 2474.751255445289, 0.51, 3.6579591836734693, 24651.592366514575);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 190, 25994.067235129536, 2437.1598026664014, 0.515, 2.6310204081632653, 24613.25095099224);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 191, 25732.138356906908, 2314.935930040292, 0.5, 4.344489795918367, 24220.526824095403);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 195, 25577.823197638267, 2449.326559080791, 0.51, 3.32734693877551, 23781.80521899366);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 200, 24825.236765209032, 2008.4359277269689, 0.5, 2.90530612244898, 23694.80521899366);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 201, 31957.07107038616, 1919.022768305517, 0.49, 9.768979591836734, 25775.399323384307);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 205, 25549.27924051327, 1637.3683402164486, 0.58, 2.9591836734693877, 24670.39803728707);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 210, 27650.16803229532, 3207.3262897779405, 0.635, 3.088979591836735, 24189.203793885506);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 211, 31401.363168715136, 745.4176386028003, 0.495, 11.63265306122449, 30050.10977730511);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 215, 27044.52496083985, 2016.2048698706465, 0.63, 7.337142857142857, 25484.532536408806);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 220, 25086.14677195702, 1308.3252943903412, 0.495, 2.1077551020408163, 24609.045136553596);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 221, 25532.082459582914, 1725.6151225522979, 0.505, 5.966530612244898, 24134.532759126374);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 225, 24534.34005402829, 857.9565907449958, 0.505, 2.3044897959183674, 24134.532759126374);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 230, 23699.219088908056, 877.337356931836, 0.51, 1.8873469387755102, 23379.60332272393);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 231, 25211.750686694973, 3083.2993945209437, 0.52, 4.738775510204082, 23693.14730128067);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 235, 25210.081695390512, 2451.3002516986085, 0.52, 3.819591836734694, 23693.14730128067);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 240, 24826.19523130089, 3166.3193498619994, 0.515, 2.1844897959183673, 23513.35195733231);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 241, 26739.235768739483, 2027.2633658119769, 0.505, 6.746122448979592, 24181.660260449928);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 245, 25472.16462963389, 2567.5787090053655, 0.51, 3.146938775510204, 24052.634713307074);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 250, 24266.738068942544, 765.0754939401569, 0.505, 3.2685714285714287, 23812.992764347237);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 251, 28802.812687807982, 2913.034778245824, 0.5, 6.318367346938776, 26198.523321717148);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 255, 29076.582186623862, 3240.130455270382, 0.53, 7.492244897959184, 25488.565046987165);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 260, 27010.764628514913, 1948.7213957115773, 0.495, 5.8342857142857145, 24877.30754168344);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 261, 27681.880533962172, 3670.855395322418, 0.585, 7.406530612244898, 23462.814689973628);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 265, 24253.748211321184, 1825.4443518153232, 0.585, 2.07265306122449, 23462.814689973628);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 270, 24642.960454751443, 2193.6675817755377, 0.585, 3.0620408163265305, 23462.814689973628);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 271, 27903.960845277667, 1849.5814840584296, 0.49, 4.042448979591836, 23833.094154609444);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 275, 24240.394399888348, 1296.295613228328, 0.5, 2.3681632653061224, 23747.094154609444);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 280, 24450.230382653463, 1690.070603037589, 0.5, 2.563265306122449, 23747.094154609444);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 281, 25959.44115443464, 1383.997759325794, 0.49, 5.1959183673469385, 23913.47972691132);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 285, 24990.893932978153, 2276.205438780604, 0.505, 3.446530612244898, 23876.265787777502);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 290, 24209.550243098816, 1802.511711918862, 0.495, 2.370612244897959, 23516.623868087252);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 291, 26373.606281255685, 2253.2172672443726, 0.505, 5.503673469387755, 23743.505210149873);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 295, 24368.769591761276, 1972.140157546948, 0.5, 3.3746938775510205, 23287.549269698335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 300, 24338.13381593689, 2237.5242096093434, 0.495, 2.4546938775510205, 23287.549269698335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 301, 26528.48091977186, 3238.642103359129, 0.495, 4.33469387755102, 24078.876021487205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 305, 25819.77470765502, 2998.97662796947, 0.52, 2.88734693877551, 23740.117713364067);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 310, 25430.709728332757, 2873.3821597407987, 0.52, 2.1216326530612246, 23740.117713364067);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 311, 28558.16846283979, 3415.7418005089253, 0.495, 7.05795918367347, 24048.575497612404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 315, 24548.745974659767, 1427.1859672173869, 0.5, 2.2751020408163267, 23966.593054606303);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 320, 24078.495040662154, 1102.7463198411042, 0.49, 1.4563265306122448, 23701.593054606303);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 321, 25095.895828723347, 846.190990559585, 0.5, 3.5175510204081633, 24559.73490347911);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 325, 24844.453919242504, 1233.5991586261482, 0.505, 3.3559183673469386, 23963.526282810777);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 330, 28360.317133500605, 5368.710895313638, 0.545, 5.853877551020408, 23436.80670769278);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 331, 25581.847119604947, 1824.747693107992, 0.545, 4.81061224489796, 24208.218609882657);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 335, 24247.393951069233, 1492.3865842749508, 0.515, 2.2057142857142855, 23533.29093918342);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 340, 24213.358838464836, 1499.3821022811721, 0.495, 1.6155102040816327, 23516.704291826492);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 341, 28613.571290622436, 2534.4127492621055, 0.505, 13.17469387755102, 25142.152335753322);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 345, 26840.026886664135, 2665.534151969854, 0.535, 5.320816326530612, 24008.110467074093);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 350, 25024.010559773735, 2216.4751214114567, 0.525, 2.572244897959184, 23979.110467074093);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 351, 27934.80370075464, 2136.8813522118658, 0.495, 6.493877551020408, 25172.189025911328);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 355, 25948.63030500798, 2129.2239533971906, 0.525, 3.666938775510204, 24683.102745729684);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 360, 25740.33985683414, 2003.750594225071, 0.525, 2.871020408163265, 24683.102745729684);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 361, 26519.833468664998, 2678.8291516904014, 0.5, 4.354285714285714, 24347.720126084227);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 365, 25576.85584767946, 2879.0508315056213, 0.55, 4.587755102040816, 23813.720126084227);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 370, 25604.83406120023, 2479.030270701003, 0.53, 4.1722448979591835, 23561.572115253006);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 371, 29040.91848424639, 2870.9058710411923, 0.505, 7.870204081632653, 24027.79586641553);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 375, 24654.009636893898, 1630.01907113109, 0.52, 3.300408163265306, 23449.183143367954);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 380, 23468.371119335323, 130.30661052250906, 0.52, 0.43918367346938775, 23449.183143367954);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 381, 23229.841666930308, 226.64733370933575, 0.49, 0.19918367346938776, 23193.76166693033);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 385, 23565.901666930306, 1400.1789245722593, 0.49, 0.7885714285714286, 23193.76166693033);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 390, 23333.23871974873, 741.3078813604471, 0.49, 0.7559183673469387, 23193.76166693033);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 391, 27020.51822161088, 1748.4084699202783, 0.49, 5.489795918367347, 25394.77709039981);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 395, 25759.13741931063, 1615.8052288800127, 0.515, 3.273469387755102, 24608.080741795835);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 400, 27105.068027412788, 2914.1695124940716, 0.5, 2.3771428571428572, 24109.297779767334);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 401, 27705.739406503915, 2743.4400801056267, 0.5, 5.031020408163266, 24997.846425220447);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 405, 25002.952043703768, 1327.2897584992274, 0.535, 4.074285714285714, 24321.152053516278);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 410, 25108.14998554795, 1714.2334604508476, 0.5, 5.0318367346938775, 24137.152053516278);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 411, 28296.72154416739, 1574.410405625092, 0.485, 9.228571428571428, 24984.705017708173);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 415, 24862.151407302288, 1450.3977713542379, 0.54, 1.816326530612245, 24473.85027647131);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 420, 25452.208537498085, 1994.3173298549882, 0.51, 3.270204081632653, 24385.94753563867);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 421, 27134.74854720258, 2067.561130357508, 0.515, 7.190204081632653, 24270.57849988073);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 425, 26879.858699242224, 2804.73251043578, 0.555, 4.932244897959183, 23938.433119197784);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 430, 26631.359999606655, 2774.6497671433585, 0.5, 5.133061224489796, 23674.433119197784);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 431, 28586.896638797774, 2335.3265204691893, 0.5, 9.63265306122449, 24378.601725018514);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 435, 29318.945612999814, 2585.924843622033, 0.505, 6.3363265306122445, 23942.48045231995);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 440, 26460.184819952472, 3245.5827456280604, 0.52, 4.285714285714286, 23666.866000360176);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 441, 29214.59777622535, 1380.1956521860332, 0.49, 5.304489795918367, 23819.470253933785);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 445, 24600.56081433443, 2215.7710317919896, 0.525, 2.5861224489795918, 23505.470253933785);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 450, 24388.629203232504, 2156.3553025423685, 0.525, 2.1746938775510203, 23505.470253933785);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 451, 25454.670689167855, 2477.9945166244074, 0.495, 2.0718367346938775, 24027.534079695808);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 455, 26394.844663015603, 2728.1184500311597, 0.51, 5.413877551020408, 23735.161457767652);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 460, 26133.11532384972, 2904.58718958166, 0.495, 5.618775510204082, 23588.908199093523);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 461, 29466.571532657985, 827.3358697663341, 0.5, 4.370612244897959, 24826.836874888413);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 465, 25091.17451060024, 2411.3039220958644, 0.525, 2.613877551020408, 23916.54192536221);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 470, 25072.734846271647, 2466.623989778748, 0.525, 1.6840816326530612, 23916.54192536221);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 471, 25918.679597013677, 2474.1902293489175, 0.495, 4.922448979591837, 23929.378141456255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 475, 25060.127076849873, 2470.301167748115, 0.495, 1.346938775510204, 23929.378141456255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 480, 24704.832975562913, 1858.2227236610725, 0.495, 1.697142857142857, 23929.378141456255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 481, 25983.227662334146, 2250.902606514895, 0.495, 3.2187755102040816, 24066.058650776416);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 485, 24288.968953385087, 1192.8048504627484, 0.505, 0.9657142857142857, 23871.224115493987);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 490, 24898.618967444134, 2018.9939003594607, 0.505, 1.830204081632653, 23871.224115493987);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 491, 27173.499373142087, 2636.8456826810293, 0.5, 4.411428571428571, 24822.3553039351);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 495, 25405.874512426253, 2027.8789548395528, 0.515, 2.0987755102040815, 24339.245018008096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 500, 26019.622636749777, 2725.287645487772, 0.505, 3.1085714285714285, 24138.813655775946);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 501, 30219.989938037397, 428.2931011758002, 0.495, 6.067755102040817, 29368.80793791249);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 505, 28560.826151608446, 1304.733447539068, 0.52, 2.3314285714285714, 28089.22565028944);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 510, 27518.768347242196, 2875.247874639363, 0.5, 4.114285714285714, 25232.426727515507);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 511, 26722.748660642756, 2679.328811164126, 0.5, 2.9885714285714284, 25121.206158792236);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 515, 25636.139186568238, 1980.1488695187556, 0.5, 2.4244897959183676, 24649.18875237271);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 520, 25793.927832466, 2032.9344387634947, 0.5, 1.9689795918367348, 24649.18875237271);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 521, 27876.899647422422, 2572.8548525884357, 0.5, 3.9746938775510205, 25172.792647197053);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 525, 27978.759691345665, 2446.3968357542003, 0.5, 4.394285714285714, 25129.095593702048);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 530, 28387.803952045062, 2362.731190687003, 0.5, 4.422857142857143, 25129.095593702048);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 531, 25679.9238699671, 1786.8992813321172, 0.495, 3.9126530612244896, 24033.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 535, 24592.0214983, 1384.3215606445287, 0.495, 1.4963265306122449, 24033.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 540, 24790.747317026173, 1590.387788714891, 0.495, 1.813061224489796, 24033.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 541, 25774.624160162628, 1860.9931415571389, 0.5, 2.0359183673469388, 24909.168267173583);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 545, 25981.440692351964, 2221.305528698028, 0.5, 2.492244897959184, 24909.168267173583);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 550, 25220.106071433373, 2551.468646843942, 0.5, 1.619591836734694, 24191.163742660035);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 551, 28782.968631727093, 904.2381429594932, 0.495, 1.6587755102040815, 24568.26204659715);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 555, 25230.234704204548, 1418.463231609297, 0.495, 1.923265306122449, 24568.26204659715);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 560, 25071.086393535672, 1625.6711910859954, 0.495, 2.2351020408163267, 24075.79581641831);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 561, 27114.665273517847, 2142.970823397175, 0.51, 4.122448979591836, 24158.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 565, 24781.344499989966, 1617.1554077860524, 0.515, 2.3477551020408165, 24045.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 570, 24762.212670617366, 1651.8220777949964, 0.495, 2.529795918367347, 23804.041498300005);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 571, 26650.64017988259, 1907.2271184072304, 0.49, 5.249795918367347, 23684.212041160907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 575, 23836.361060664534, 951.128557746799, 0.505, 0.6579591836734694, 23553.212041160907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 580, 24367.739100835126, 1795.833012262858, 0.505, 1.7044897959183674, 23553.212041160907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 581, 28262.9246998633, 1232.492743983553, 0.49, 2.36734693877551, 24301.670676609916);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 585, 25546.6095992762, 2579.089336560738, 0.49, 2.393469387755102, 24301.670676609916);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 590, 25753.585239163032, 2928.151240815732, 0.49, 2.5910204081632653, 24301.670676609916);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 591, 28768.032264195448, 1985.532527748384, 0.49, 6.391836734693878, 24935.21217860995);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 595, 26386.89308449386, 2363.705236666261, 0.505, 3.763265306122449, 23964.20507440921);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 600, 24985.201935457462, 2098.0548854841577, 0.5, 1.590204081632653, 23964.20507440921);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 601, 25398.546867389377, 1367.9476493571044, 0.495, 2.0416326530612245, 24677.716402726208);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 605, 25407.736872405214, 1646.3904571344633, 0.495, 1.4293877551020409, 24677.716402726208);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 610, 25402.70667444108, 1605.107031222892, 0.495, 2.159183673469388, 24677.716402726208);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 611, 25796.691441177292, 1556.824859398815, 0.49, 2.4146938775510205, 24108.701658290633);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 615, 24669.021047989456, 1495.4606289092421, 0.5, 1.4244897959183673, 23985.998646702836);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 620, 24712.360360766732, 1570.964529435995, 0.5, 1.3289795918367346, 23985.998646702836);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 621, 24389.883689525133, 1039.6975784187837, 0.495, 0.9722448979591837, 24040.504360404022);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 625, 24561.17641059276, 1458.4946643470976, 0.505, 2.4783673469387755, 23880.48918572068);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 630, 24292.471891313973, 1241.0769706616427, 0.495, 1.5714285714285714, 23794.48918572068);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 631, 25725.07406716699, 1436.3351343284583, 0.49, 1.8016326530612246, 25187.24098336289);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 635, 25671.098443233706, 1479.4554093401948, 0.495, 1.3061224489795917, 25029.648852336017);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 640, 25520.067819050557, 1335.5799093076075, 0.495, 0.9330612244897959, 25029.648852336017);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 641, 24943.040079963932, 914.3366455196958, 0.495, 4.155102040816327, 24225.83640255445);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 645, 24821.16394715824, 1491.5234673847058, 0.505, 2.173877551020408, 24041.118195217365);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 650, 24389.3657817099, 1034.629679831369, 0.505, 1.093061224489796, 24041.118195217365);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 651, 24764.224211757348, 677.0758743258771, 0.5, 2.373061224489796, 24350.359473954937);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 655, 24709.489194171903, 1123.0182363493582, 0.515, 1.9093877551020408, 24018.54547756674);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 660, 24378.4463283182, 990.0503149388134, 0.515, 1.5844897959183672, 24018.54547756674);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 661, 25248.18550618588, 1131.3904551851967, 0.495, 2.7689795918367346, 24401.512089481093);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 665, 24273.44888456046, 830.3263874098766, 0.525, 1.1991836734693877, 23943.678595683552);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 670, 24356.57550908899, 1237.1616070419454, 0.5, 1.24, 23905.140741996613);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 671, 25552.337696734183, 1656.0734082764686, 0.505, 3.213061224489796, 24540.375371700404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 675, 25051.1349028238, 973.8858165414956, 0.505, 2.633469387755102, 24376.085450376668);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 680, 24609.64572853883, 1412.197061499323, 0.52, 1.5175510204081633, 24113.14365435047);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 681, 24389.87673584848, 784.7154129136119, 0.505, 0.39346938775510204, 24197.18375923663);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 685, 24434.259727559765, 800.9699460075973, 0.505, 0.8530612244897959, 24197.18375923663);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 690, 24816.39941416266, 1195.300537079503, 0.495, 1.7428571428571429, 23885.18375923663);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 691, 24747.051792197213, 240.0009602414926, 0.495, 1.1795918367346938, 24311.38721220532);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 695, 24469.04727885047, 718.0596748041421, 0.495, 0.6359183673469387, 24311.38721220532);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 700, 24311.38721220531, 1.102474064703213E-11, 0.49, 0.0, 24311.38721220532);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 701, 25989.55691344032, 683.059500828342, 0.49, 2.3755102040816327, 25727.61584979404);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 705, 25454.887431773655, 588.3842353404958, 0.505, 0.9591836734693877, 25286.49661728554);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 710, 25011.72558678762, 675.6939136924293, 0.515, 0.636734693877551, 24857.990322438636);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 711, 24874.00982648375, 1220.467579426575, 0.5, 2.0138775510204083, 24254.95332820822);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 715, 24395.255867082808, 1001.3646732546779, 0.515, 1.3967346938775511, 24045.42749178585);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 720, 24186.475485453037, 635.486891757319, 0.515, 0.5175510204081633, 24045.42749178585);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 721, 24620.55793047036, 601.543146852021, 0.5, 1.7673469387755103, 24102.823690771984);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 725, 24547.88879412726, 1212.3562341955935, 0.5, 1.243265306122449, 24102.823690771984);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 730, 24173.783690771976, 322.3217406409252, 0.5, 0.39591836734693875, 24102.823690771984);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 731, 24197.821854034733, 405.95373266078553, 0.495, 0.28, 24132.16185403471);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 735, 24305.903782221885, 740.162614393451, 0.495, 0.5175510204081633, 24132.16185403471);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 740, 24497.119827061924, 1117.8110263062376, 0.495, 1.1257142857142857, 24132.16185403471);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 741, 25346.937842772822, 370.157254126481, 0.495, 2.953469387755102, 24495.889329896367);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 745, 24056.777254559132, 31.042287180829106, 0.51, 0.08, 24052.38721220532);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 750, 24087.52721220531, 248.47732290895271, 0.51, 0.24, 24052.38721220532);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 751, 25518.08562759781, 1215.1838789388344, 0.495, 5.853877551020408, 24071.650897755942);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 755, 25270.40797342522, 1909.2466896975766, 0.495, 1.8906122448979592, 24071.650897755942);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 760, 25142.08463140031, 1888.3713101081096, 0.495, 1.6824489795918367, 24071.650897755942);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 761, 26072.27010725321, 1355.9025619641561, 0.495, 2.316734693877551, 24077.24665535382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 765, 24237.633272500498, 646.3115120662023, 0.495, 0.7077551020408164, 24077.24665535382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 770, 24283.463514525705, 679.2164836967117, 0.495, 0.6669387755102041, 24077.24665535382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 771, 24776.582742037714, 837.898495301152, 0.495, 0.5061224489795918, 24567.333959414016);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 775, 24852.973252403313, 865.7446930169125, 0.495, 0.8220408163265306, 24567.333959414016);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 780, 24720.630094909142, 579.2355029313004, 0.495, 0.7477551020408163, 24567.333959414016);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 781, 24663.790649269456, 1111.1560569391936, 0.5, 0.7020408163265306, 24352.659634624313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 785, 25041.540802767653, 1086.8991055228164, 0.51, 2.453061224489796, 24114.784914840948);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 790, 24031.72491484095, 182.87816955000187, 0.505, 0.23673469387755103, 23994.784914840948);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 791, 25574.677160908424, 614.1979369434357, 0.485, 4.502857142857143, 24507.96649023972);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 795, 24440.547432237843, 423.64724228580747, 0.5, 2.324081632653061, 24145.24665535382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 800, 24195.326655353816, 253.54859776494806, 0.49, 0.24, 24145.24665535382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 801, 24562.500146380087, 325.69113779508064, 0.49, 1.1812244897959183, 24101.45576043724);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 805, 24380.57576043727, 687.4058492860335, 0.49, 0.913469387755102, 24101.45576043724);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 810, 24360.707614960746, 689.6108932266202, 0.49, 1.0016326530612245, 24101.45576043724);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 811, 25282.353577233025, 1185.6837686711622, 0.5, 1.910204081632653, 24616.096026079504);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 815, 24891.881979983547, 816.0374312698905, 0.5, 0.7812244897959184, 24616.096026079504);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 820, 25269.69288414713, 1200.2123215691267, 0.5, 1.986122448979592, 24616.096026079504);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 821, 25163.30354300614, 354.39866816512864, 0.495, 0.39346938775510204, 25082.750801757258);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 825, 25207.086329749764, 421.7106738718128, 0.495, 0.7412244897959184, 25082.750801757258);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 830, 25268.90774515795, 534.8258586456438, 0.495, 1.0097959183673468, 25082.750801757258);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 831, 25166.393287574676, 607.2657533128388, 0.5, 1.2285714285714286, 24887.230287421273);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 835, 25040.15718372713, 498.72172982504884, 0.5, 0.7412244897959184, 24887.230287421273);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 840, 24917.029045943615, 125.4816512697468, 0.5, 0.31510204081632653, 24887.230287421273);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 841, 24645.965830772402, 505.48938622667845, 0.495, 0.9314285714285714, 24438.36375779231);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 845, 24515.063757792315, 310.88788253999877, 0.495, 0.35428571428571426, 24438.36375779231);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 850, 24499.507669881168, 251.41370578906808, 0.495, 0.3942857142857143, 24438.36375779231);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 851, 25479.544740093468, 223.2112809981629, 0.5, 2.4, 24949.657350165173);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 855, 25059.963216209224, 277.2718392265024, 0.5, 0.8955102040816326, 24949.657350165173);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 860, 24996.079864184052, 186.0341759328753, 0.5, 0.3893877551020408, 24949.657350165173);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 861, 24993.117321602927, 345.80246117304875, 0.5, 0.926530612244898, 24766.51932950545);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 865, 24814.222927924973, 238.75219801920989, 0.5, 0.23918367346938776, 24766.51932950545);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 870, 24522.35925047991, 273.56957179526523, 0.5, 0.27918367346938777, 24468.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 871, 24738.03787584329, 153.9436682712828, 0.495, 0.27755102040816326, 24419.181862728725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 875, 24450.192210483718, 219.27627184530098, 0.495, 0.24, 24419.181862728725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 880, 24489.401862728693, 330.3841480854107, 0.495, 0.3551020408163265, 24419.181862728725);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 881, 24644.839502192317, 276.7079043670434, 0.495, 0.24, 24395.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 885, 24454.779250479907, 229.2831633146924, 0.495, 0.4310204081632653, 24395.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 890, 24417.939250479907, 147.08869460850013, 0.495, 0.28, 24395.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 891, 25073.740144688883, 401.42440550208636, 0.495, 2.239183673469388, 24369.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 895, 24369.69925047991, 1.469965419604284E-11, 0.495, 0.0, 24369.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 900, 24369.69925047991, 1.469965419604284E-11, 0.49, 0.0, 24369.699250479895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 901, 24398.849567271463, 0.0, 0.49, 0.0, 24398.849567271463);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 905, 24398.849567271463, 0.0, 0.49, 0.0, 24398.849567271463);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 910, 24398.849567271463, 0.0, 0.49, 0.0, 24398.849567271463);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 911, 24891.833642420897, 1.102474064703213E-11, 0.495, 0.0, 24891.833642420886);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 915, 24891.833642420897, 1.102474064703213E-11, 0.495, 0.0, 24891.833642420886);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 920, 24776.02915694289, 348.04056703809374, 0.495, 1.2587755102040816, 24614.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 921, 24614.44005069906, 1.102474064703213E-11, 0.5, 0.0, 24614.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 925, 24634.76005069906, 143.6840979371065, 0.5, 0.12, 24614.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 930, 24614.44005069906, 1.102474064703213E-11, 0.5, 0.0, 24614.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 931, 25679.240132963172, 174.13931724206824, 0.49, 0.49795918367346936, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 935, 25026.533415931946, 327.5265060834387, 0.49, 0.2383673469387755, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 940, 25006.70906631751, 298.8870757788879, 0.49, 0.12, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 941, 24990.516057549212, 184.38521270011134, 0.495, 0.12, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 945, 25042.66807124952, 312.77901305605263, 0.495, 0.34530612244897957, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 950, 24990.516057549212, 184.38521270011125, 0.495, 0.12, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 951, 25262.923047489116, 3.67491354901071E-12, 0.495, 0.0, 25262.92304748912);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 955, 25262.923047489116, 3.67491354901071E-12, 0.495, 0.0, 25262.92304748912);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 960, 25262.923047489116, 3.67491354901071E-12, 0.495, 0.0, 25262.92304748912);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 961, 25254.67012056933, 0.0, 0.495, 0.0, 25254.67012056933);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 965, 25254.67012056933, 0.0, 0.495, 0.0, 25254.67012056933);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 970, 25254.67012056933, 0.0, 0.495, 0.0, 25254.67012056933);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 971, 24964.44005069906, 1.102474064703213E-11, 0.495, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 975, 24964.44005069906, 1.102474064703213E-11, 0.495, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 980, 24964.44005069906, 1.102474064703213E-11, 0.495, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 981, 24964.44005069906, 1.102474064703213E-11, 0.49, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 985, 24964.44005069906, 1.102474064703213E-11, 0.49, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 990, 24964.44005069906, 1.102474064703213E-11, 0.49, 0.0, 24964.44005069907);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 991, 25214.274060675896, 3.307422194109639E-11, 0.49, 0.0, 25214.27406067593);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 995, 25214.274060675896, 3.307422194109639E-11, 0.49, 0.0, 25214.27406067593);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1000, 25214.274060675896, 3.307422194109639E-11, 0.49, 0.0, 25214.27406067593);
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 38, 29, 95, 77, 51, 47, 40, 70, 99, 13, 2, 42, 45, 28, 33, 54, 82, 11, 19, 85, 26, 34, 61, 76, 59, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 35, 37, 17, 78, 52, 18, 96, 74, 48, 5, 62, 91, 7, 41, 88, 30, 79, 55, 3, 64, 65, 25, 69, 93, 15, 87, 21, 89, 23, 98, 46, 0, 92, 27, 57, 66, 80, 24, 60, 6, 8, 56, 86, 50, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 2, 42, 45, 28, 33, 54, 82, 11, 19, 85, 26, 34, 61, 76, 59, 90, 97, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 17, 78, 52, 18, 74, 5, 48, 89, 62, 91, 7, 41, 88, 30, 79, 55, 96, 3, 64, 65, 25, 69, 21, 15, 87, 93, 23, 37, 98, 35, 46, 0, 27, 92, 57, 66, 60, 24, 80, 68, 49, 81, 43, 1, 63, 39, 53, 72, 67, 84, 38, 29, 8, 6, 56, 86, 50, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[94, 75, 12, 32, 36, 4, 95, 77, 51, 84, 67, 72, 68, 49, 43, 1, 63, 39, 53, 24, 80, 86, 50, 60, 57, 66, 92, 27, 22, 44, 31, 14, 16, 10, 58, 73, 20, 71, 9, 83, 17, 78, 52, 18, 74, 5, 48, 89, 23, 37, 98, 35, 87, 93, 21, 15, 69, 65, 25, 64, 3, 96, 55, 41, 88, 30, 79, 7, 91, 0, 46, 62, 90, 97, 76, 59, 61, 26, 34, 85, 19, 11, 56, 6, 8, 54, 82, 33, 45, 28, 2, 42, 13, 40, 70, 99, 47, 29, 38, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 84, 67, 72, 68, 49, 43, 1, 63, 39, 53, 24, 80, 86, 50, 60, 57, 66, 92, 27, 46, 62, 5, 48, 89, 18, 74, 96, 55, 41, 88, 30, 79, 7, 91, 0, 9, 83, 23, 37, 98, 35, 87, 15, 21, 93, 69, 65, 25, 64, 3, 52, 78, 17, 71, 20, 73, 58, 14, 16, 10, 31, 44, 90, 97, 22, 59, 61, 76, 8, 6, 56, 19, 11, 85, 26, 34, 82, 54, 45, 28, 2, 42, 13, 70, 99, 47, 40, 33, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 99, 70, 40, 42, 45, 2, 13, 28, 33, 54, 82, 26, 34, 85, 19, 11, 56, 6, 8, 86, 50, 60, 57, 66, 92, 27, 46, 62, 5, 48, 89, 78, 17, 23, 37, 98, 35, 58, 73, 20, 71, 83, 9, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 90, 97, 22, 59, 61, 76, 44, 31, 14, 16, 10, 52, 87, 15, 21, 93, 69, 65, 25, 64, 3, 53, 39, 63, 1, 43, 72, 67, 84, 49, 68, 80, 24, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 77, 51, 95, 38, 29, 47, 99, 70, 40, 42, 45, 2, 13, 28, 33, 54, 82, 26, 34, 85, 19, 11, 56, 6, 8, 86, 50, 60, 57, 66, 92, 27, 46, 89, 48, 5, 62, 0, 91, 7, 79, 30, 41, 88, 55, 96, 18, 74, 3, 65, 25, 64, 87, 15, 21, 93, 69, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 44, 90, 97, 22, 59, 61, 76, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 99, 70, 40, 42, 45, 2, 13, 28, 33, 54, 82, 26, 34, 85, 19, 11, 56, 6, 8, 86, 50, 60, 80, 24, 57, 66, 92, 27, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 3, 65, 25, 64, 87, 15, 21, 93, 69, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 20, 73, 58, 16, 14, 10, 31, 97, 22, 59, 61, 76, 90, 44, 46, 89, 48, 5, 62, 74, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 47, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 99, 70, 40, 42, 45, 2, 13, 47, 28, 33, 54, 82, 26, 34, 85, 19, 11, 56, 6, 8, 86, 50, 60, 80, 24, 57, 92, 27, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 87, 15, 21, 93, 69, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 16, 14, 10, 31, 97, 90, 44, 22, 59, 61, 76, 46, 62, 5, 48, 89, 66, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 99, 70, 40, 42, 45, 2, 13, 47, 28, 54, 82, 26, 34, 85, 19, 11, 56, 6, 8, 86, 50, 60, 80, 24, 57, 92, 27, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 16, 14, 10, 31, 90, 97, 22, 44, 46, 5, 48, 89, 62, 66, 76, 59, 61, 33, 84, 67, 72, 49, 43, 1, 53, 39, 63, 68, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 13, 47, 99, 70, 40, 42, 45, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 46, 5, 48, 89, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 83, 9, 71, 73, 58, 20, 16, 14, 10, 31, 92, 27, 66, 57, 60, 80, 24, 86, 50, 67, 84, 49, 43, 1, 53, 39, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 13, 47, 99, 70, 40, 42, 45, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 20, 73, 71, 83, 9, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 89, 48, 5, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 68, 72, 67, 84, 43, 49, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 13, 47, 99, 70, 40, 42, 45, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 98, 35, 89, 48, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 67, 84, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 15, 21, 93, 87, 52, 78, 17, 23, 37, 35, 98, 89, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 67, 84, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 54, 82, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 93, 87, 15, 78, 17, 23, 37, 35, 98, 52, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 67, 84, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 21, 15, 87, 93, 69, 65, 64, 25, 3, 78, 17, 23, 37, 35, 98, 83, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 65, 64, 25, 3, 96, 74, 18, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 89, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 82, 54, 8, 6, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 3, 64, 25, 65, 69, 21, 15, 87, 93, 17, 78, 52, 18, 23, 37, 35, 98, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 25, 65, 69, 21, 87, 15, 93, 17, 78, 52, 23, 37, 35, 98, 58, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 49, 72, 68, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 33, 82, 54, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 78, 52, 23, 37, 35, 98, 58, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 49, 72, 68, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 85, 26, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 15, 87, 93, 17, 78, 52, 23, 37, 35, 98, 58, 73, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 5, 48, 89, 15, 87, 52, 78, 93, 17, 23, 37, 35, 98, 21, 69, 65, 64, 3, 25, 18, 74, 96, 55, 79, 30, 41, 88, 7, 0, 91, 62, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 90, 97, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 62, 5, 48, 18, 52, 87, 15, 21, 69, 93, 65, 25, 64, 3, 96, 74, 55, 79, 30, 88, 41, 7, 0, 91, 27, 92, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 66, 46, 35, 98, 37, 23, 17, 78, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 78, 17, 23, 37, 35, 98, 87, 15, 21, 93, 69, 65, 25, 64, 3, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 35, 98, 58, 73, 46, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 35, 98, 58, 73, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 85, 26, 11, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 9, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 18, 74, 3, 65, 64, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 65, 64, 3, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 65, 64, 3, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 60, 24, 80, 86, 50, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 20, 73, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 58, 46, 92, 27, 66, 57, 60, 24, 80, 86, 50, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 73, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 58, 20, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 53, 39, 63, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 79, 30, 88, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 35, 98, 46, 92, 27, 66, 57, 60, 50, 86, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 16, 14, 20, 73, 58, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 35, 98, 46, 92, 27, 66, 57, 60, 50, 80, 24, 86, 67, 84, 43, 49, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 60, 50, 80, 24, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 58, 73, 20, 71, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 65, 64, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 9, 46, 92, 27, 66, 57, 50, 86, 24, 80, 68, 60, 67, 84, 49, 43, 72, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 14, 16, 10, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 15, 87, 52, 78, 17, 23, 37, 98, 35, 58, 46, 27, 92, 66, 57, 50, 86, 24, 80, 68, 60, 67, 84, 49, 72, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 5, 48, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 58, 46, 27, 92, 66, 57, 50, 86, 24, 80, 68, 60, 67, 84, 49, 72, 53, 39, 63, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 93, 87, 15, 52, 78, 17, 23, 37, 98, 35, 58, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 72, 49, 43, 1, 53, 39, 63, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 15, 87, 93, 52, 78, 17, 23, 37, 98, 35, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 3, 64, 65, 25, 69, 21, 15, 87, 93, 52, 78, 17, 23, 37, 35, 98, 46, 92, 27, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 15, 87, 93, 21, 69, 65, 25, 64, 3, 89, 46, 27, 92, 66, 57, 50, 86, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 84, 67, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 89, 48, 5, 62, 0, 91, 7, 41, 88, 30, 79, 55, 96, 74, 18, 52, 15, 87, 93, 21, 69, 65, 64, 3, 25, 46, 27, 92, 66, 57, 60, 24, 80, 50, 86, 67, 84, 49, 43, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 15, 87, 93, 21, 69, 3, 64, 65, 25, 18, 74, 96, 55, 79, 30, 88, 41, 7, 62, 0, 91, 5, 48, 89, 46, 27, 92, 66, 57, 60, 24, 80, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 9, 83, 35, 98, 37, 23, 17, 78, 52, 87, 93, 21, 15, 69, 64, 65, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 5, 48, 89, 62, 0, 46, 92, 27, 66, 57, 60, 24, 80, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 65, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 46, 62, 89, 48, 5, 92, 27, 66, 57, 60, 24, 80, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 83, 9, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 64, 65, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 46, 92, 27, 66, 57, 60, 24, 80, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 25, 3, 64, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 83, 9, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 83, 9, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 0, 62, 5, 48, 89, 83, 9, 46, 92, 27, 66, 57, 60, 80, 24, 86, 50, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 18, 74, 96, 55, 79, 30, 88, 41, 7, 91, 48, 5, 62, 89, 83, 9, 46, 0, 92, 27, 66, 57, 80, 24, 86, 50, 60, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 25, 3, 96, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 80, 24, 60, 50, 86, 67, 84, 49, 72, 68, 63, 39, 53, 1, 81, 43, 74, 18, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 83, 9, 46, 0, 92, 27, 66, 57, 80, 24, 60, 50, 86, 67, 84, 49, 72, 68, 63, 39, 53, 1, 81, 43, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 83, 9, 46, 0, 92, 27, 66, 57, 80, 24, 60, 50, 86, 67, 84, 49, 43, 72, 68, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 67, 84, 49, 43, 1, 39, 53, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 21, 93, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 67, 84, 49, 43, 1, 39, 53, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 67, 84, 49, 43, 1, 39, 53, 63, 68, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 48, 5, 62, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 67, 72, 68, 63, 39, 53, 1, 43, 49, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 55, 79, 30, 88, 41, 7, 91, 74, 18, 89, 9, 83, 48, 5, 62, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 84, 67, 72, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 89, 9, 83, 48, 5, 62, 91, 74, 55, 79, 30, 88, 41, 7, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 89, 9, 83, 62, 5, 48, 91, 74, 55, 79, 30, 88, 41, 7, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 72, 67, 84, 49, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 27, 92, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 39, 63, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 27, 92, 66, 57, 86, 50, 60, 80, 24, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 86, 50, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 68, 72, 67, 84, 86, 50, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 50, 86, 67, 84, 72, 49, 81, 43, 1, 39, 53, 63, 68, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 80, 24, 50, 86, 84, 67, 49, 72, 68, 63, 39, 53, 1, 43, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 9, 83, 46, 0, 92, 27, 66, 57, 60, 24, 80, 50, 86, 68, 63, 39, 53, 1, 43, 49, 67, 72, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 27, 92, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 27, 92, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 27, 92, 66, 57, 60, 24, 80, 50, 86, 84, 67, 72, 68, 63, 39, 53, 1, 43, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 53, 39, 63, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 24, 80, 68, 72, 67, 84, 49, 43, 63, 39, 53, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 72, 67, 84, 49, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 1, 43, 49, 72, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 67, 84, 49, 43, 1, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[94, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[94, 75, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[94, 75, 12, 32, 4, 36, 51, 77, 95, 38, 29, 28, 2, 40, 70, 99, 47, 13, 42, 45, 54, 82, 33, 6, 8, 56, 19, 11, 26, 85, 34, 61, 76, 59, 22, 97, 90, 44, 31, 10, 14, 16, 73, 58, 20, 71, 35, 98, 37, 23, 17, 78, 52, 87, 15, 93, 21, 69, 65, 64, 3, 25, 96, 18, 74, 55, 79, 30, 88, 41, 7, 91, 62, 5, 48, 89, 83, 9, 46, 0, 92, 27, 66, 57, 86, 50, 60, 80, 24, 68, 63, 39, 53, 72, 43, 1, 49, 67, 84, 81, 94]");
    }

    @Test
    public void test_mmas_moving_asymmetric_dynamic_tsp_kroA150_with_seed_1_mag_0_1_freq_10() {
        Graph graph = GraphFactory.createGraphFromTSP(new File(kroA150));
        MMAS_MADTSP mmas_madtsp = new MMAS_MADTSP(graph, 0.8, 1000, 0.1, 10, 1.0, 5.0);
        mmas_madtsp.setMmasSeed(1);
        mmas_madtsp.setDbgpSeed(1);
        mmas_madtsp.setStatisticInterval(1);
        mmas_madtsp.setShowLog(false);
        mmas_madtsp.run();

        assertThat(mmas_madtsp.getMvbs().getAccumulativeCost()).isEqualTo(34018.264505597384);
        assertThat(mmas_madtsp.getGlobalStatistics().getBestSoFarTC()).isEqualTo(34018.264505597384);
        assertThat(TestUtils.getTourString(mmas_madtsp.getGlobalStatistics())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");

        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1, 40137.01783897471, 1991.2217779278133, 0.0, 81.65306122448979, 36214.666772975776);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 5, 32977.46612502786, 1654.6677727041329, 0.7166666666666667, 7.913469387755102, 31969.83644211484);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 10, 32607.239974748623, 1497.1134373909554, 0.5, 9.71265306122449, 31721.92074084098);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 11, 35445.73616242004, 1684.9165161151573, 0.49666666666666665, 18.356734693877552, 32564.686252461386);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 15, 33614.3448695156, 2228.5816571556315, 0.5166666666666667, 12.416326530612245, 31463.25579084682);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 20, 33440.123191373896, 2460.344018222056, 0.49333333333333335, 9.949387755102041, 31420.25579084682);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 21, 35564.83067893206, 1967.562133449812, 0.5033333333333333, 22.907755102040817, 32902.948466115864);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 25, 32868.04415342698, 1446.6371889215566, 0.5233333333333333, 11.33061224489796, 31735.291205331003);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 30, 32559.818663484577, 2061.2273639034884, 0.5166666666666667, 5.689795918367347, 31082.338258287175);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 31, 34999.38497986085, 2064.7015194349547, 0.51, 20.080816326530613, 31548.83016874656);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 35, 33000.992394633766, 2298.58907794258, 0.5266666666666666, 7.364897959183674, 30998.83016874656);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 40, 32073.911223385145, 1667.3628962505231, 0.5033333333333333, 7.057142857142857, 30750.83016874656);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 41, 36116.707179401994, 1762.9746333408102, 0.49333333333333335, 31.659591836734695, 33030.647962000294);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 45, 34364.4120097491, 1711.599624772223, 0.56, 8.612244897959183, 32474.627111565507);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 50, 33446.81875636656, 2361.8251440671643, 0.5166666666666667, 4.829387755102041, 32021.627111565507);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 51, 36628.23186070254, 1330.229036749658, 0.5033333333333333, 14.411428571428571, 33894.18964118569);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 55, 33809.20332693559, 1220.4002778452896, 0.5233333333333333, 12.98530612244898, 32547.55092473733);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 60, 33578.618794799266, 2148.9431400689245, 0.5066666666666667, 6.368163265306123, 32305.50666657993);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 61, 41979.48091061506, 4067.546929603903, 0.5, 22.900408163265308, 33181.45058583737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 65, 33880.58864167601, 2163.2335443132015, 0.51, 9.761632653061225, 31862.450585837367);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 70, 33534.440981352556, 2592.4765032292476, 0.49666666666666665, 6.457959183673469, 31575.646608079758);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 71, 36145.39533134841, 2788.678482042639, 0.51, 21.33142857142857, 32654.573177029226);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 75, 34075.6847692077, 2471.6247528246563, 0.55, 9.890612244897959, 31684.45439314659);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 80, 34362.95135837468, 3029.8487046711953, 0.5, 8.506938775510203, 31465.919084059577);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 81, 39708.44681954395, 1460.184292469229, 0.5033333333333333, 22.267755102040816, 34070.531599440284);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 85, 39051.78129374403, 1224.7882005909562, 0.52, 15.039183673469388, 33751.14090922217);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 90, 35451.52122680097, 2379.55147546883, 0.5133333333333333, 11.237551020408164, 32354.115300189456);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 91, 36716.33496706596, 1978.288143390455, 0.49, 27.325714285714287, 33067.636745016214);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 95, 35825.92851552073, 3059.779023356914, 0.5, 9.573877551020407, 32693.71625005355);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 100, 32768.93882596231, 2186.117104381981, 0.49666666666666665, 4.675918367346939, 31482.877941439423);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 101, 36429.66008933514, 881.1380026030411, 0.49333333333333335, 11.186938775510203, 34433.29674986059);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 105, 33182.63817967596, 1744.2374798858912, 0.52, 8.586938775510204, 31470.910081088994);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 110, 32530.041881043468, 1580.0257407746012, 0.5033333333333333, 5.914285714285715, 31305.132672782078);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 111, 34732.21764579359, 1026.8813649502824, 0.5, 12.34530612244898, 32645.785628397207);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 115, 35545.214419226184, 2513.9626644831105, 0.49666666666666665, 7.635918367346939, 32397.860212236286);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 120, 33942.14200704541, 2316.6882583747383, 0.5033333333333333, 8.59673469387755, 31860.860212236286);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 121, 36717.388984094745, 1264.68894800238, 0.49666666666666665, 17.699591836734694, 34771.73742074291);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 125, 34229.33252260716, 1518.2759306702349, 0.5333333333333333, 7.429387755102041, 33038.384167364144);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 130, 33317.85912648974, 1447.465852947314, 0.5266666666666666, 7.705306122448979, 31930.416988358917);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 131, 36922.66966334832, 1382.3342512418517, 0.5033333333333333, 17.915102040816326, 34497.6990990314);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 135, 35428.501537286735, 1929.14483883539, 0.5166666666666667, 9.177142857142858, 33376.2111431503);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 140, 35266.08125384632, 2646.6003756113873, 0.5033333333333333, 8.333877551020407, 31605.77468842592);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 141, 36061.12434410809, 2835.2126018506738, 0.5133333333333333, 11.642448979591837, 32210.66179104127);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 145, 35714.490052886285, 2854.0401197711312, 0.52, 11.103673469387756, 31760.0950273382);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 150, 34235.57184091582, 3001.960256866191, 0.5066666666666667, 5.13795918367347, 31596.84697883722);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 151, 38995.48817686882, 1394.8995405505398, 0.49333333333333335, 15.662857142857144, 35930.43866888086);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 155, 35931.69590133536, 2793.2536719466325, 0.53, 7.582857142857143, 32358.256347900096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 160, 36063.578719306766, 2936.464219469522, 0.53, 9.833469387755102, 32358.256347900096);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 161, 39490.0571134853, 1959.3598187936943, 0.49, 14.285714285714286, 35267.66656033153);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 165, 36738.822424099475, 2111.8188654855503, 0.5766666666666667, 11.225306122448979, 32923.17990525648);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 170, 35294.84208725778, 2368.150795506356, 0.54, 11.09469387755102, 32533.179905256482);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 171, 38550.540861093476, 3570.8821270083554, 0.48333333333333334, 14.541224489795919, 33954.24563439592);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 175, 37081.07721562392, 4264.868831217412, 0.57, 8.417142857142856, 33428.67338284213);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 180, 36866.37821734118, 4139.476781928007, 0.49666666666666665, 9.073469387755102, 33260.67338284213);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 181, 37978.558490478965, 1797.5502060489716, 0.5, 24.34285714285714, 35190.08242857968);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 185, 35596.406662890135, 2132.925139452708, 0.54, 9.8, 33769.322508279874);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 190, 34023.37364462051, 2712.6970611336815, 0.5, 5.313469387755102, 31545.40058986899);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 191, 35979.96997381895, 1836.1389181362142, 0.51, 9.98938775510204, 31136.5183641962);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 195, 34792.94790858969, 3223.4217320282814, 0.5166666666666667, 5.417959183673469, 31113.977769190293);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 200, 33968.03408332481, 2991.05185165789, 0.5066666666666667, 7.906122448979592, 31062.86825042724);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 201, 37542.07989505367, 696.3101015306121, 0.4866666666666667, 13.040816326530612, 36186.31612773751);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 205, 36465.89565247796, 2456.041053834893, 0.5066666666666667, 7.037551020408163, 32633.02862609252);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 210, 35645.6791330529, 2639.275633885761, 0.49666666666666665, 7.521632653061224, 32197.61631997708);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 211, 40554.470912640885, 842.6318683967502, 0.5033333333333333, 11.968163265306123, 38632.451363286236);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 215, 35207.619449131475, 944.8547230110822, 0.55, 4.920816326530613, 34564.40987270403);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 220, 34486.42683874265, 1892.4843921108086, 0.5366666666666666, 6.035918367346939, 33430.311953628116);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 221, 37413.86882968576, 1901.3849809193168, 0.5566666666666666, 14.29469387755102, 34842.12944555165);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 225, 35908.743007850986, 2415.5669715507534, 0.5066666666666667, 11.21795918367347, 33595.12944555165);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 230, 36484.812208139294, 2498.648553078251, 0.49333333333333335, 11.168163265306122, 33322.850322692495);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 231, 38634.59028560926, 1721.8283192970723, 0.49333333333333335, 30.58122448979592, 34810.32945460068);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 235, 36961.02227437068, 2004.1820886742264, 0.5333333333333333, 15.838367346938776, 34573.99047568427);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 240, 35017.36410721591, 1891.1719080593405, 0.53, 7.6971428571428575, 33391.02391213467);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 241, 39790.6943798129, 2252.9461585110917, 0.5, 24.093061224489794, 35763.982312058295);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 245, 35015.444944389674, 2319.0493894137703, 0.51, 4.456326530612245, 33299.06005415983);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 250, 34605.485097337834, 2064.7543393194583, 0.5, 6.155918367346938, 32737.943731324794);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 251, 39904.68981165062, 1869.6244757424877, 0.5033333333333333, 13.68734693877551, 33991.59215228061);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 255, 34953.050826879866, 1878.7195174655346, 0.5233333333333333, 6.75265306122449, 33492.193680304226);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 260, 34975.75270393331, 1954.2018943622215, 0.49666666666666665, 7.218775510204082, 33422.54515958968);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 261, 38071.70065650527, 1103.780510683448, 0.5066666666666667, 17.19265306122449, 34193.713141541455);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 265, 34977.28033956061, 2099.2088707530747, 0.5233333333333333, 6.03265306122449, 33441.653651990026);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 270, 34770.37370240069, 2209.8175719584337, 0.49666666666666665, 3.7020408163265306, 33421.653651990026);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 271, 37712.74661755949, 2111.7868203959542, 0.49333333333333335, 15.33469387755102, 34190.93393198613);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 275, 37013.477142916876, 2189.6901462063347, 0.49666666666666665, 11.244081632653062, 34066.93393198613);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 280, 36286.841401171245, 1903.057555183092, 0.49666666666666665, 9.205714285714286, 34066.93393198613);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 281, 38921.7763439623, 2701.187978850054, 0.49333333333333335, 14.938775510204081, 34551.97963696476);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 285, 36027.74404157978, 2315.551010355582, 0.5533333333333333, 9.798367346938775, 33676.57621052676);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 290, 35366.53839166558, 1901.7322135654556, 0.5233333333333333, 7.8914285714285715, 33459.997336677014);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 291, 36127.784886686975, 2081.769045544449, 0.5, 9.594285714285714, 33997.606163539895);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 295, 34497.15219694862, 2339.53435459671, 0.55, 4.8644897959183675, 32962.90819265804);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 300, 33033.59305549429, 1627.362512191987, 0.5233333333333333, 3.5795918367346937, 32209.908192658037);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 301, 37834.020962893796, 1536.7662682211865, 0.5133333333333333, 21.346122448979592, 34857.825163235655);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 305, 34861.51149261528, 2025.4722231343396, 0.5333333333333333, 7.155102040816327, 33791.68451057422);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 310, 34200.63786000738, 1939.5069490439917, 0.5, 5.009795918367347, 33378.126880499316);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 311, 35759.20716653016, 1782.697618768903, 0.5033333333333333, 8.937959183673469, 34446.91870205832);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 315, 34664.942384531976, 1570.7098596773808, 0.49666666666666665, 4.926530612244898, 33828.35872011093);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 320, 34226.10708640642, 1354.8437023108365, 0.49666666666666665, 2.9648979591836735, 33697.719210977135);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 321, 34576.9881504173, 1346.5346981216933, 0.49666666666666665, 4.393469387755102, 33738.48309263054);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 325, 34585.80245509771, 1296.8644171259773, 0.5033333333333333, 6.725714285714286, 33679.79246839789);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 330, 34824.319002355274, 1646.8780597288142, 0.5033333333333333, 7.8277551020408165, 33679.65447715302);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 331, 35710.32268872897, 1159.6049859425755, 0.49333333333333335, 8.310204081632653, 34590.52568185362);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 335, 34801.22387513799, 1585.7262661934044, 0.5633333333333334, 6.852244897959183, 33261.4793057784);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 340, 33506.80271744367, 1460.070483991022, 0.5033333333333333, 3.6008163265306123, 32920.4793057784);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 341, 35005.0182820634, 2185.9896039854557, 0.49333333333333335, 4.210612244897959, 33392.145391906735);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 345, 34880.47400992169, 2399.4521388790145, 0.49333333333333335, 3.289795918367347, 33392.145391906735);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 350, 34599.484605344805, 2616.249858673381, 0.49333333333333335, 3.6342857142857143, 32842.39482128116);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 351, 36183.83031600818, 1038.6533274052997, 0.49333333333333335, 14.551836734693877, 33401.31082311885);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 355, 33597.510575920736, 1066.1203404648638, 0.5133333333333333, 2.155918367346939, 33133.787300543634);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 360, 33768.0725108879, 1563.3029098383997, 0.5133333333333333, 1.8653061224489795, 33133.787300543634);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 361, 35206.57884733892, 1630.3515917458276, 0.49333333333333335, 5.222857142857142, 34192.214792220104);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 365, 34644.846267227535, 1039.031679560549, 0.49333333333333335, 3.6685714285714286, 32695.817316374185);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 370, 32800.45379003204, 1135.407642498938, 0.5033333333333333, 1.026122448979592, 32438.403274982113);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 371, 38233.14689248796, 1235.6760112687084, 0.49666666666666665, 16.217959183673468, 36823.280018347556);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 375, 34695.44791980748, 1394.1175569557768, 0.5033333333333333, 2.170612244897959, 34072.02719216339);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 380, 34264.81369387732, 724.9972540358809, 0.51, 3.250612244897959, 33809.60472066808);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 381, 35551.36177371148, 842.4863929584936, 0.5133333333333333, 8.204081632653061, 34031.14777381723);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 385, 34302.39285783892, 965.8417552450012, 0.6, 6.297959183673469, 33533.22734831358);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 390, 33654.701367991875, 651.8179683175453, 0.5233333333333333, 2.599183673469388, 33410.072312894335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 391, 36146.27949518557, 1378.440540500878, 0.4866666666666667, 12.956734693877552, 34594.41437763377);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 395, 34470.09933055378, 863.8504219040607, 0.54, 4.200816326530612, 33944.31260305033);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 400, 34366.14374887923, 974.4304463053493, 0.49666666666666665, 3.7208163265306125, 33944.31260305033);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 401, 35778.05615486211, 1709.8722265380202, 0.49333333333333335, 6.233469387755102, 34724.7804440144);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 405, 34270.6224295538, 1213.3276256174256, 0.5466666666666666, 3.427755102040816, 33576.032315431024);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 410, 34275.36244628299, 1355.4060640546488, 0.5066666666666667, 4.528163265306122, 33032.83254960304);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 411, 35607.983425900245, 2062.463500279666, 0.5333333333333333, 7.3461224489795915, 33922.27340271977);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 415, 35096.67417179962, 1743.5845242999494, 0.52, 3.8751020408163264, 33566.692913464634);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 420, 34636.14181581421, 1675.243023803415, 0.5233333333333333, 4.116734693877551, 33341.503014923466);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 421, 37975.93045295161, 855.2720025905766, 0.5, 18.13142857142857, 36385.798015402645);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 425, 35986.04737603263, 1994.020970211336, 0.58, 4.539591836734694, 33312.99272405922);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 430, 34634.43056280034, 1666.7716828463153, 0.5266666666666666, 4.635102040816326, 32991.99272405922);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 431, 37339.04983368444, 860.7157705251608, 0.49333333333333335, 8.191020408163265, 36083.23905849889);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 435, 35816.26370207455, 1805.5798747446372, 0.51, 5.990204081632653, 34396.94569196458);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 440, 33539.98263404611, 1154.8196897190905, 0.5166666666666667, 3.216326530612245, 32878.12416394685);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 441, 37335.78451988408, 2115.737773443791, 0.49333333333333335, 15.582040816326531, 33462.89820032659);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 445, 33701.56922222865, 1176.67136188525, 0.5166666666666667, 3.8612244897959185, 32919.83276720239);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 450, 33167.551477916546, 1114.0850707744207, 0.5033333333333333, 3.4285714285714284, 32476.182742522036);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 451, 34236.20254472978, 1285.7749417234995, 0.5066666666666667, 4.439183673469388, 32785.10363875507);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 455, 33435.22949127503, 1255.980157665779, 0.51, 5.177142857142857, 32550.011607168737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 460, 33489.902516422604, 1287.0716289549139, 0.51, 3.8089795918367346, 32550.011607168737);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 461, 32630.906323245505, 983.223351457965, 0.5, 2.57469387755102, 32021.559622884703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 465, 32567.032966598454, 982.8326709803264, 0.5, 2.3248979591836734, 32021.559622884703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 470, 32648.647205547913, 1122.9056105510188, 0.5, 2.0587755102040814, 32014.559622884703);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 471, 33100.51305025055, 926.5379727890479, 0.49666666666666665, 1.929795918367347, 32631.829933240177);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 475, 32907.697535253814, 1046.0462855272174, 0.5133333333333333, 2.910204081632653, 32367.829933240177);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 480, 32872.747473018804, 922.3799708327888, 0.5133333333333333, 1.929795918367347, 32367.829933240177);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 481, 33205.5695896439, 1020.334593652576, 0.49666666666666665, 3.300408163265306, 32462.802091618312);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 485, 33540.92136564077, 1841.8853713881635, 0.5066666666666667, 4.6204081632653065, 32375.29096211446);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 490, 33064.26320524525, 1419.7711517997102, 0.5066666666666667, 2.3551020408163263, 32375.29096211446);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 491, 32635.490059168267, 1139.868791341419, 0.49666666666666665, 3.020408163265306, 32049.434457036114);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 495, 32713.91228190402, 945.4898072053408, 0.49666666666666665, 2.8481632653061224, 32049.434457036114);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 500, 32528.496659284338, 994.3273914371373, 0.49666666666666665, 1.633469387755102, 32049.434457036114);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 501, 35714.87561255664, 574.8543793507025, 0.49333333333333335, 5.146938775510204, 34453.542329951335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 505, 35586.44470469641, 518.3023183550807, 0.49, 1.8204081632653062, 33119.542329951335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 510, 34990.78081181898, 766.7189751673392, 0.49, 3.0081632653061225, 33119.542329951335);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 511, 33489.88265751308, 828.9879589548397, 0.49, 4.66530612244898, 32446.078604654795);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 515, 33100.66666398474, 1453.9257377799927, 0.49, 2.2146938775510203, 32446.078604654795);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 520, 33310.28043860088, 1810.2131318569864, 0.49, 2.9289795918367347, 32446.078604654795);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 521, 34102.518351045066, 1537.3540589836764, 0.49666666666666665, 3.7044897959183674, 33020.46620395963);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 525, 32772.53857224625, 854.3510223812459, 0.5166666666666667, 2.082448979591837, 32396.79070737381);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 530, 32540.160198400532, 691.9183779187804, 0.5066666666666667, 1.3885714285714286, 32217.431973049002);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 531, 34301.15942041314, 979.4244120573675, 0.5133333333333333, 3.3257142857142856, 33250.18150778745);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 535, 33560.020324882316, 1174.8638222151865, 0.5233333333333333, 2.8, 32930.195853006124);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 540, 33229.465257430566, 836.5146228381991, 0.51, 2.2710204081632654, 32903.26773849777);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 541, 34042.021064656765, 1089.177363767077, 0.49666666666666665, 1.7012244897959183, 33566.75596868934);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 545, 33916.15645451715, 837.8135200429367, 0.49666666666666665, 2.0359183673469388, 33566.75596868934);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 550, 34093.84531045583, 987.9544940894585, 0.49666666666666665, 2.4946938775510206, 33566.75596868934);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 551, 32821.39618408359, 578.2791831091936, 0.49666666666666665, 2.6228571428571428, 32533.44535883691);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 555, 32722.072472974196, 632.5310984527888, 0.49666666666666665, 1.4661224489795919, 32397.44535883691);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 560, 32503.340996504732, 443.90728934697523, 0.49666666666666665, 0.8734693877551021, 32397.44535883691);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 561, 34759.55898464949, 1005.0588110367046, 0.4866666666666667, 7.400816326530612, 33298.363407420635);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 565, 33410.70707704529, 931.3040759159384, 0.5233333333333333, 3.7722448979591836, 32931.188210061184);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 570, 32907.43388520748, 508.27577120283496, 0.51, 1.9208163265306122, 32719.593885207447);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 571, 36015.75114717412, 800.2499387436472, 0.49333333333333335, 3.3657142857142857, 35456.733882769186);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 575, 35622.26998328159, 794.8009217376238, 0.49, 3.1697959183673468, 35097.17125419472);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 580, 35439.0451002525, 781.349154077902, 0.49, 2.0693877551020408, 35097.17125419472);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 581, 34900.16208724902, 835.1000104366505, 0.49, 2.2914285714285714, 34516.68306590238);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 585, 34943.991626241965, 1092.5314203801406, 0.49, 2.544489795918367, 34444.55752025613);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 590, 34673.9493377863, 857.6201096304618, 0.49, 1.737142857142857, 34320.44748820802);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 591, 35567.448436413026, 556.6405962575201, 0.49666666666666665, 5.394285714285714, 34564.54626127706);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 595, 34635.28393489601, 445.5427261067648, 0.51, 1.1493877551020408, 34487.54626127706);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 600, 34046.843133712784, 523.0109313905716, 0.49333333333333335, 0.8163265306122449, 33903.42994222501);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 601, 34836.237762733006, 668.7556122702921, 0.49, 3.7485714285714287, 34230.11227603027);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 605, 34118.360545036114, 384.89424053495736, 0.5, 0.47346938775510206, 34021.11227603027);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 610, 34245.69895457682, 742.546428669261, 0.5, 0.9036734693877551, 34021.11227603027);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 611, 35912.97304248428, 361.5100004024309, 0.49, 2.6310204081632653, 34411.30604080524);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 615, 34761.50514653514, 697.1832710441261, 0.49, 1.9412244897959183, 34411.30604080524);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 620, 34290.51328287339, 428.11013064704974, 0.5166666666666667, 0.6604081632653062, 34138.11363457288);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 621, 38067.47208462981, 252.3884419245936, 0.49, 2.673469387755102, 37573.017653099414);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 625, 37142.557417898955, 828.5647355545257, 0.58, 11.155102040816326, 35514.78147895257);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 630, 35346.786740809584, 492.4278100399108, 0.5366666666666666, 1.103673469387755, 35160.78147895257);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 631, 35702.02075315324, 510.2327504153187, 0.4866666666666667, 0.9648979591836735, 35291.412722663146);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 635, 34620.253683183255, 497.4455756753058, 0.4866666666666667, 2.3844897959183675, 34451.412722663146);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 640, 34724.04072172227, 559.1326988343982, 0.49, 4.000816326530612, 34369.412722663146);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 641, 36863.847698491576, 710.3434212808917, 0.49, 11.555918367346939, 34973.181794923396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 645, 34891.703012816644, 545.9974082629244, 0.5166666666666667, 2.9379591836734695, 34545.181794923396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 650, 35202.67136741394, 1183.9291390993947, 0.5466666666666666, 3.2318367346938777, 34273.181794923396);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 651, 35486.63347215973, 1135.5784910550863, 0.49, 9.210612244897959, 34021.596715250475);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 655, 34633.85965982391, 729.2999131246348, 0.49, 3.1240816326530614, 34021.596715250475);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 660, 34872.92318074678, 980.8825112421591, 0.49333333333333335, 4.391836734693878, 34013.596715250475);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 661, 36878.511617290234, 312.17307256391257, 0.49, 4.027755102040817, 35868.069815874);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 665, 35619.01704021143, 707.0465163617139, 0.5466666666666666, 6.9412244897959186, 34491.069815874);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 670, 33764.05774135835, 764.1617895180779, 0.51, 1.7175510204081632, 33392.069815874);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 671, 34408.1597762581, 568.2995919332535, 0.5, 1.366530612244898, 34028.464338949285);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 675, 34287.42577850734, 625.5675360720683, 0.5, 1.1142857142857143, 34028.464338949285);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 680, 34383.93098069399, 799.3000973540081, 0.5, 1.296326530612245, 34028.464338949285);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 681, 36207.79938928647, 823.5223045474685, 0.49, 4.244897959183674, 33906.08671919676);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 685, 33979.3726627785, 616.8370271691853, 0.5, 1.4008163265306122, 33697.720388569665);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 690, 34020.107979228844, 686.6799552942134, 0.5, 1.4514285714285715, 33697.720388569665);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 691, 35683.026909673375, 695.8249280038073, 0.49, 7.3363265306122445, 34693.68117759729);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 695, 34712.46146446329, 831.5983294789222, 0.49333333333333335, 2.1812244897959183, 34343.2024653846);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 700, 34629.74067117152, 580.4711803362344, 0.5033333333333333, 2.431020408163265, 34183.30304091416);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 701, 35831.537175786245, 1187.023406769878, 0.5, 5.270204081632653, 34393.982338570575);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 705, 34300.800167360656, 792.4413133506804, 0.5, 1.4857142857142858, 33962.29327221602);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 710, 34206.99353243178, 1073.6236822367482, 0.49, 1.3224489795918368, 33835.29327221602);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 711, 34642.785747217065, 853.4822513795403, 0.49, 1.7330612244897958, 34164.02259437733);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 715, 34565.54495561734, 854.5091022709129, 0.49, 1.4914285714285713, 34164.02259437733);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 720, 34336.04536972309, 510.71803514356736, 0.49, 1.1673469387755102, 34164.02259437733);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 721, 34298.07588121094, 438.55467399585, 0.49333333333333335, 1.2057142857142857, 34145.512020521746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 725, 34361.30014274063, 543.6394208590086, 0.49333333333333335, 1.2783673469387755, 34145.512020521746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 730, 34570.361341938835, 783.2120966036282, 0.49333333333333335, 1.7412244897959184, 34145.512020521746);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 731, 37153.59792792976, 390.4888990157303, 0.4866666666666667, 3.330612244897959, 35325.82794329922);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 735, 34226.972047378134, 228.9466104679354, 0.5066666666666667, 0.9689795918367347, 33967.88862417081);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 740, 34335.691529771015, 906.5271575335281, 0.49, 2.5477551020408162, 33874.88862417081);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 741, 34099.34204611063, 766.541317064958, 0.49666666666666665, 1.8473469387755102, 33731.80937954268);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 745, 33963.84823329358, 580.0249606348868, 0.49666666666666665, 1.143673469387755, 33731.80937954268);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 750, 33902.029379542706, 499.4758595625161, 0.49666666666666665, 1.329795918367347, 33731.80937954268);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 751, 35027.821420873, 638.19926182778, 0.49333333333333335, 1.756734693877551, 34639.53324694937);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 755, 34436.102548908806, 719.1385503210964, 0.5, 1.8244897959183672, 34101.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 760, 34474.162072829226, 811.713972631747, 0.5, 1.6685714285714286, 34101.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 761, 35451.543889341825, 1460.8605078239602, 0.49, 2.182857142857143, 34665.10872347729);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 765, 34667.66619409555, 18.084048168624346, 0.49, 0.16, 34665.10872347729);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 770, 34757.9409156194, 928.2681446290433, 0.49, 0.5542857142857143, 34546.10872347729);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 771, 35874.96800617354, 287.8304485219809, 0.4866666666666667, 0.5975510204081632, 35341.823090498205);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 775, 34648.30001154739, 43.64465631145997, 0.5133333333333333, 0.833469387755102, 34638.01024317841);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 780, 34670.046016944085, 221.4643462695231, 0.4866666666666667, 0.5583673469387755, 34225.01024317841);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 781, 35177.86202103504, 658.4212215591012, 0.5, 2.6244897959183673, 34703.444210234506);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 785, 35140.51638452061, 1029.0270674483518, 0.5, 1.8979591836734695, 34521.444210234506);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 790, 34940.87729094149, 894.9834817082246, 0.49, 1.4816326530612245, 34274.34614679594);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 791, 34310.21896024512, 658.358680608811, 0.5, 2.1583673469387756, 34010.137714951255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 795, 34311.156216037525, 805.4034561671898, 0.5, 1.1093877551020408, 34010.137714951255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 800, 34236.45155751819, 600.3016979835761, 0.49, 0.9820408163265306, 34010.137714951255);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 801, 36204.452721618174, 1103.6713220610122, 0.4866666666666667, 3.1542857142857144, 34700.579604924584);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 805, 34259.605670899364, 926.9555770582683, 0.49666666666666665, 1.8293877551020408, 33854.27115718821);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 810, 34120.62438429497, 811.7760528074632, 0.49666666666666665, 0.6073469387755102, 33854.27115718821);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 811, 35151.730360241134, 726.8033765342698, 0.4866666666666667, 0.9959183673469387, 34769.88167480782);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 815, 34947.45904567447, 878.7893710249963, 0.4866666666666667, 0.27755102040816326, 34769.88167480782);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 820, 34809.861674807806, 282.70129111838173, 0.4866666666666667, 0.16, 34769.88167480782);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 821, 35454.746303028616, 841.8663253145737, 0.49, 1.3991836734693877, 34941.91178417313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 825, 35141.84602396018, 557.6187931153374, 0.49, 0.9061224489795918, 34941.91178417313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 830, 35053.92599053106, 452.0949105089411, 0.49, 0.35346938775510206, 34941.91178417313);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 831, 34723.46412017267, 510.81084834092474, 0.48333333333333334, 0.23918367346938776, 34639.856821983354);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 835, 34658.18497565563, 91.96457792871735, 0.48333333333333334, 0.36, 34639.856821983354);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 840, 34639.856821983354, 0.0, 0.48333333333333334, 0.0, 34639.856821983354);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 841, 36884.56450559736, 229.90097690891503, 0.48333333333333334, 2.2767346938775512, 35549.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 845, 35173.064505597365, 886.2027454947593, 0.4866666666666667, 1.6587755102040815, 34633.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 850, 35241.46450559736, 908.6202817054716, 0.4866666666666667, 1.6775510204081632, 34633.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 851, 35443.50915313773, 1081.4266523645417, 0.49, 1.883265306122449, 34633.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 855, 35152.58450559736, 978.4312400105443, 0.49, 1.4979591836734694, 34596.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 860, 34678.58088691209, 1287.5858722490598, 0.5, 0.7795918367346939, 34395.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 861, 37013.68889801794, 177.68397125959356, 0.5, 2.455510204081633, 36246.82076324726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 865, 34662.14195320176, 426.04824794006237, 0.5033333333333333, 0.5036734693877551, 34555.82076324726);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 870, 34536.96913258634, 319.4289235849818, 0.49, 2.1363265306122448, 34317.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 871, 34762.574357114536, 235.24379884641658, 0.49333333333333335, 3.2383673469387757, 34431.017456973816);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 875, 34194.617125737735, 201.52257838050025, 0.5066666666666667, 0.6057142857142858, 34108.259229265124);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 880, 34175.910216590186, 185.0596832327901, 0.5066666666666667, 0.4310204081632653, 34108.259229265124);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 881, 34414.665315851445, 215.23790823843535, 0.49333333333333335, 0.5714285714285714, 34325.76531585147);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 885, 34363.431626418846, 147.20230597243378, 0.49333333333333335, 0.34775510204081633, 34325.76531585147);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 890, 34415.324247553624, 219.4486418595913, 0.49333333333333335, 0.8702040816326531, 34325.76531585147);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 891, 34148.88903129192, 3.67491354901071E-11, 0.49333333333333335, 0.0, 34148.88903129188);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 895, 34148.88903129192, 3.67491354901071E-11, 0.49333333333333335, 0.0, 34148.88903129188);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 900, 34164.53764081527, 110.65237910106137, 0.49333333333333335, 0.08, 34148.88903129188);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 901, 34344.80897686931, 215.2130373108735, 0.49333333333333335, 0.49142857142857144, 34258.848976869296);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 905, 34323.46450559736, 222.24164087491684, 0.49333333333333335, 0.5877551020408164, 34242.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 910, 34379.06402999656, 269.2660855690629, 0.49333333333333335, 1.1028571428571428, 34242.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 911, 34841.76306575731, 1006.1429559665424, 0.49, 1.52, 34108.14266331578);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 915, 34563.4377702853, 981.6363202662515, 0.49, 0.9036734693877551, 34108.14266331578);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 920, 34464.694772902236, 892.8237833064591, 0.49, 0.7118367346938775, 34108.14266331578);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 921, 34088.58450559736, 240.88776622810735, 0.49333333333333335, 0.4506122448979592, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 925, 34124.82450559736, 291.51253412335546, 0.49333333333333335, 0.553469387755102, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 930, 34143.10450559736, 307.6294059880679, 0.49333333333333335, 0.8514285714285714, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 931, 34120.03209366778, 242.1312209593493, 0.49333333333333335, 0.4179591836734694, 34049.35209366779);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 935, 34119.67209366778, 240.88776622810747, 0.49333333333333335, 0.4506122448979592, 34049.35209366779);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 940, 34137.612093667776, 267.4780792086387, 0.49333333333333335, 0.5208163265306123, 34049.35209366779);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 941, 34109.204505597365, 276.2733347795332, 0.49, 0.6342857142857142, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 945, 34124.204505597365, 288.3878772679289, 0.49, 0.7616326530612245, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 950, 34075.76450559736, 212.33658782841036, 0.49, 0.5004081632653061, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 951, 34440.62941738609, 941.6816737727625, 0.49333333333333335, 0.6465306122448979, 34096.38536668979);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 955, 34498.723425835466, 1007.3150160423951, 0.49333333333333335, 0.683265306122449, 34096.38536668979);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 960, 34555.37743428485, 1062.3602045391283, 0.49333333333333335, 0.8228571428571428, 34096.38536668979);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 961, 34124.10450559736, 289.5354731359902, 0.49, 0.6187755102040816, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 965, 34194.78450559736, 356.63908698759724, 0.49, 0.9404081632653061, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 970, 34159.62450559736, 327.19998004091536, 0.49, 0.7738775510204081, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 971, 34142.04450559736, 309.91600507892707, 0.49333333333333335, 0.683265306122449, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 975, 34106.524505597365, 267.47807920863886, 0.49333333333333335, 0.5208163265306123, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 980, 34088.94450559736, 242.13122095934952, 0.49333333333333335, 0.4179591836734694, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 981, 34018.26450559736, 2.204948129406426E-11, 0.49, 0.0, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 985, 34018.26450559736, 2.204948129406426E-11, 0.49, 0.0, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 990, 34018.26450559736, 2.204948129406426E-11, 0.49, 0.0, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 991, 34018.26450559736, 2.204948129406426E-11, 0.49333333333333335, 0.0, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 995, 34018.26450559736, 2.204948129406426E-11, 0.49333333333333335, 0.0, 34018.264505597384);
        TestUtils.checkValues(mmas_madtsp.getIterationStatistics(), 1000, 34018.26450559736, 2.204948129406426E-11, 0.49333333333333335, 0.0, 34018.264505597384);
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getTour())).isEqualTo("[115, 49, 43, 113, 143, 63, 39, 53, 1, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 56, 116, 19, 11, 26, 85, 149, 61, 76, 109, 59, 90, 97, 22, 44, 31, 108, 16, 14, 10, 73, 20, 140, 58, 126, 103, 98, 101, 110, 35, 23, 37, 17, 136, 78, 133, 52, 15, 87, 21, 93, 69, 3, 64, 65, 123, 25, 117, 128, 118, 142, 96, 55, 138, 88, 41, 121, 30, 79, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 62, 5, 48, 89, 83, 9, 105, 18, 74, 91, 7, 129, 0, 112, 71, 34, 119, 114, 122, 42, 127, 45, 2, 13, 28, 131, 111, 33, 82, 54, 148, 134, 139, 67, 84, 100, 29, 120, 106, 38, 146, 36, 4, 145, 102, 32, 75, 12, 94, 125, 81, 95, 77, 51, 99, 40, 70, 47, 135, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 8, 6, 116, 82, 54, 148, 11, 26, 85, 149, 61, 76, 109, 59, 97, 22, 44, 31, 108, 90, 130, 92, 27, 141, 104, 66, 147, 137, 132, 88, 30, 79, 41, 121, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 87, 15, 21, 93, 136, 78, 17, 37, 23, 98, 101, 110, 103, 35, 126, 58, 140, 73, 20, 71, 9, 83, 89, 105, 133, 52, 18, 96, 74, 91, 7, 0, 129, 62, 48, 5, 112, 10, 14, 16, 46, 107, 57, 56, 19, 34, 119, 114, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 106, 120, 29, 100, 111, 131, 28, 45, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 86, 144, 56, 8, 6, 116, 82, 54, 148, 26, 11, 119, 114, 122, 42, 127, 135, 2, 13, 40, 70, 99, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 107, 57, 92, 27, 141, 104, 66, 147, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 87, 15, 21, 93, 136, 78, 17, 37, 23, 98, 101, 110, 103, 35, 126, 58, 140, 73, 20, 71, 9, 83, 89, 105, 133, 52, 18, 96, 74, 91, 7, 0, 129, 62, 48, 5, 112, 10, 14, 16, 46, 97, 22, 44, 31, 108, 90, 130, 109, 76, 59, 61, 149, 85, 34, 19, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 124, 50, 144, 86, 8, 116, 56, 6, 54, 148, 26, 85, 34, 19, 149, 59, 61, 76, 109, 97, 22, 44, 90, 108, 46, 130, 92, 27, 141, 104, 66, 147, 137, 132, 88, 30, 79, 121, 41, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 87, 15, 21, 93, 136, 78, 17, 23, 37, 103, 101, 110, 98, 35, 126, 58, 140, 73, 20, 71, 9, 83, 89, 105, 133, 52, 18, 96, 74, 91, 7, 0, 129, 62, 48, 5, 112, 10, 14, 16, 31, 57, 107, 63, 39, 53, 1, 43, 113, 143, 67, 84, 38, 100, 120, 29, 106, 111, 131, 28, 45, 33, 134, 139, 82, 11, 119, 114, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 77, 51, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 124, 50, 144, 86, 8, 116, 6, 56, 19, 149, 61, 76, 109, 59, 22, 97, 90, 108, 44, 31, 58, 140, 73, 20, 71, 9, 83, 105, 78, 17, 23, 37, 103, 101, 110, 98, 35, 126, 16, 14, 10, 46, 112, 89, 48, 5, 62, 0, 129, 7, 91, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 87, 15, 21, 93, 136, 133, 52, 18, 96, 74, 79, 121, 41, 88, 30, 132, 137, 147, 141, 104, 66, 27, 92, 130, 57, 107, 63, 39, 53, 1, 43, 113, 143, 81, 125, 94, 12, 145, 32, 75, 102, 36, 4, 95, 77, 51, 100, 120, 29, 106, 111, 131, 28, 45, 33, 134, 139, 82, 54, 148, 11, 26, 85, 34, 114, 119, 122, 42, 127, 135, 2, 13, 99, 40, 70, 47, 38, 84, 67, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 149, 61, 76, 109, 59, 22, 97, 90, 108, 44, 31, 10, 14, 16, 58, 140, 73, 20, 71, 9, 83, 105, 78, 136, 133, 52, 18, 96, 74, 91, 138, 55, 142, 118, 3, 64, 65, 25, 123, 117, 128, 69, 21, 15, 87, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 112, 62, 0, 129, 7, 121, 41, 88, 30, 79, 132, 137, 147, 141, 104, 66, 27, 92, 130, 46, 48, 5, 89, 57, 107, 63, 39, 53, 1, 43, 113, 143, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 100, 120, 29, 106, 111, 131, 28, 45, 2, 13, 99, 40, 70, 47, 38, 146, 84, 67, 139, 82, 54, 148, 11, 26, 85, 34, 114, 119, 122, 42, 127, 135, 33, 134, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 34, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 44, 31, 14, 16, 10, 71, 9, 83, 105, 78, 136, 133, 52, 18, 96, 74, 91, 138, 55, 142, 118, 3, 64, 25, 123, 117, 128, 65, 69, 21, 15, 87, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 112, 62, 5, 48, 89, 0, 129, 7, 121, 41, 88, 30, 79, 132, 137, 147, 141, 104, 66, 27, 92, 130, 46, 57, 107, 63, 39, 53, 1, 143, 113, 43, 67, 84, 120, 29, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 146, 38, 100, 106, 111, 131, 13, 99, 70, 40, 135, 42, 127, 122, 119, 114, 148, 54, 82, 33, 134, 139, 11, 45, 2, 28, 47, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 34, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 31, 14, 16, 10, 71, 9, 83, 17, 23, 37, 103, 110, 101, 98, 35, 126, 58, 140, 73, 20, 112, 62, 5, 48, 89, 105, 78, 136, 133, 52, 18, 96, 74, 91, 138, 55, 142, 118, 3, 64, 25, 123, 117, 128, 65, 69, 15, 87, 93, 21, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 27, 92, 130, 46, 44, 0, 129, 57, 107, 63, 39, 53, 1, 143, 113, 43, 67, 84, 38, 100, 106, 29, 120, 131, 111, 28, 33, 134, 139, 11, 148, 54, 82, 119, 114, 122, 42, 127, 2, 45, 13, 99, 70, 40, 135, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 34, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 31, 44, 14, 16, 10, 71, 9, 89, 105, 78, 136, 133, 52, 18, 96, 74, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 27, 92, 130, 46, 112, 62, 5, 48, 91, 138, 55, 142, 118, 3, 64, 25, 123, 117, 128, 65, 69, 15, 87, 93, 21, 17, 23, 37, 103, 110, 101, 98, 83, 35, 126, 58, 140, 73, 20, 0, 129, 57, 107, 63, 39, 53, 43, 113, 143, 1, 67, 84, 38, 100, 106, 120, 29, 111, 131, 28, 33, 134, 139, 11, 148, 54, 82, 119, 114, 122, 42, 127, 2, 135, 70, 40, 99, 13, 45, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 34, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 31, 44, 14, 16, 10, 71, 9, 89, 105, 78, 136, 133, 52, 18, 96, 74, 91, 138, 55, 142, 118, 3, 64, 117, 123, 25, 128, 65, 69, 15, 87, 93, 21, 17, 23, 37, 103, 110, 101, 98, 83, 35, 126, 58, 140, 73, 20, 112, 62, 5, 48, 0, 129, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 27, 92, 130, 46, 57, 107, 63, 39, 53, 143, 1, 43, 113, 67, 84, 38, 100, 106, 120, 29, 111, 131, 28, 45, 42, 127, 2, 135, 70, 40, 99, 13, 122, 114, 119, 54, 82, 148, 11, 139, 134, 33, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 34, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 138, 55, 142, 118, 3, 64, 65, 69, 21, 15, 87, 93, 133, 52, 18, 96, 74, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 9, 83, 71, 7, 41, 117, 123, 25, 128, 53, 143, 1, 43, 113, 63, 39, 67, 84, 38, 100, 106, 120, 29, 111, 131, 28, 45, 2, 135, 70, 40, 99, 13, 127, 42, 122, 114, 119, 54, 82, 148, 11, 139, 134, 33, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 59, 22, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 9, 83, 71, 133, 52, 18, 96, 74, 55, 138, 142, 118, 3, 64, 65, 15, 87, 93, 21, 69, 128, 25, 123, 117, 53, 63, 39, 143, 1, 43, 113, 67, 84, 38, 100, 29, 120, 106, 111, 131, 28, 13, 127, 42, 122, 114, 119, 54, 82, 148, 11, 34, 139, 134, 33, 45, 2, 135, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 71, 35, 98, 101, 110, 103, 37, 23, 17, 136, 78, 105, 89, 48, 5, 62, 0, 129, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 112, 9, 83, 133, 52, 18, 74, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 138, 96, 87, 93, 21, 15, 69, 22, 59, 34, 11, 148, 54, 82, 119, 114, 122, 42, 135, 13, 127, 2, 45, 28, 131, 111, 120, 106, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 1, 53, 39, 63, 84, 67, 134, 33, 139, 47, 70, 40, 99, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 71, 112, 5, 48, 89, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 101, 110, 98, 35, 83, 9, 62, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 0, 129, 138, 55, 142, 118, 3, 64, 65, 123, 25, 128, 117, 133, 52, 18, 74, 96, 22, 59, 34, 11, 148, 54, 82, 119, 114, 122, 42, 135, 13, 111, 120, 29, 106, 100, 38, 84, 67, 134, 139, 33, 131, 28, 45, 2, 127, 70, 40, 99, 47, 51, 77, 95, 4, 36, 146, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 1, 53, 39, 63, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 71, 112, 62, 48, 5, 0, 129, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 101, 110, 98, 35, 83, 9, 89, 74, 96, 91, 7, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 119, 114, 42, 135, 13, 2, 45, 28, 131, 111, 120, 29, 106, 100, 38, 84, 67, 134, 139, 33, 122, 127, 70, 40, 99, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 75, 12, 94, 125, 81, 43, 143, 1, 53, 39, 63, 113, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 71, 112, 5, 48, 89, 74, 96, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 110, 101, 98, 35, 83, 9, 62, 129, 0, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 119, 114, 42, 135, 13, 2, 45, 28, 131, 111, 106, 120, 29, 38, 100, 84, 67, 134, 139, 33, 122, 127, 40, 99, 70, 47, 51, 77, 95, 36, 4, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 53, 39, 63, 143, 113, 43, 107, 57, 141, 104, 66, 147, 132, 137, 121, 41, 7, 55, 138, 91, 88, 30, 79, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 83, 9, 62, 48, 5, 0, 129, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 110, 101, 98, 35, 71, 112, 89, 74, 96, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 119, 114, 122, 42, 135, 13, 2, 45, 28, 131, 111, 106, 120, 29, 100, 84, 67, 134, 139, 33, 127, 40, 70, 99, 47, 51, 77, 95, 36, 4, 38, 146, 102, 145, 32, 12, 75, 94, 125, 81, 1, 53, 39, 63, 143, 113, 43, 41, 121, 7, 91, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 20, 73, 140, 58, 126, 83, 9, 62, 5, 48, 89, 74, 96, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 110, 101, 98, 35, 71, 112, 46, 22, 59, 34, 54, 82, 33, 45, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 42, 135, 122, 114, 119, 127, 11, 148, 139, 134, 84, 67, 43, 143, 113, 1, 53, 39, 63, 107, 57, 66, 147, 132, 137, 88, 41, 121, 79, 30, 138, 7, 91, 0, 129, 130, 92, 27, 104, 141, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 112, 46, 22, 59, 34, 54, 82, 33, 11, 148, 139, 134, 84, 67, 43, 113, 1, 53, 39, 63, 143, 107, 57, 66, 147, 141, 104, 27, 92, 130, 0, 129, 7, 91, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 9, 83, 89, 74, 96, 48, 5, 62, 41, 121, 79, 30, 88, 132, 137, 81, 125, 94, 12, 75, 32, 145, 102, 51, 77, 95, 100, 38, 120, 29, 106, 111, 131, 28, 45, 2, 135, 122, 114, 119, 127, 13, 42, 70, 40, 99, 47, 4, 36, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 112, 46, 130, 0, 129, 7, 91, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 105, 78, 136, 87, 15, 69, 21, 93, 17, 23, 37, 103, 110, 101, 98, 35, 126, 9, 83, 62, 5, 48, 89, 74, 96, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 22, 59, 34, 11, 148, 54, 82, 33, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 42, 135, 122, 114, 119, 127, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 37, 103, 110, 101, 98, 35, 126, 17, 23, 136, 87, 15, 69, 21, 93, 78, 105, 52, 133, 18, 96, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 22, 59, 11, 148, 54, 82, 33, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 42, 135, 122, 114, 119, 127, 2, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 34, 130, 0, 129, 7, 91, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 74, 89, 48, 5, 62, 112, 46, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 37, 103, 110, 101, 98, 35, 17, 23, 136, 87, 15, 21, 93, 78, 105, 133, 52, 18, 96, 41, 121, 79, 30, 88, 132, 137, 147, 141, 104, 66, 107, 57, 92, 27, 130, 0, 129, 7, 91, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 74, 89, 48, 5, 62, 112, 46, 22, 59, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 135, 122, 127, 114, 119, 45, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 126, 69, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 103, 101, 98, 126, 23, 17, 78, 105, 89, 48, 5, 62, 112, 46, 130, 27, 92, 141, 104, 66, 147, 132, 137, 88, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 96, 138, 91, 74, 18, 52, 133, 136, 87, 15, 21, 69, 93, 110, 0, 129, 7, 41, 121, 107, 57, 22, 59, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 135, 45, 122, 127, 114, 119, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 103, 101, 98, 126, 112, 62, 5, 48, 0, 129, 7, 41, 121, 88, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 136, 87, 15, 21, 69, 93, 110, 23, 17, 78, 105, 89, 91, 74, 96, 138, 132, 137, 107, 57, 92, 141, 104, 66, 147, 130, 46, 27, 59, 22, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 146, 102, 145, 32, 75, 12, 94, 125, 81, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 2, 42, 135, 127, 114, 119, 122, 45, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 105, 89, 0, 129, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 136, 87, 15, 21, 69, 93, 101, 98, 103, 110, 126, 112, 62, 5, 48, 7, 41, 121, 88, 30, 79, 132, 137, 66, 147, 104, 141, 130, 46, 22, 59, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 47, 99, 40, 70, 135, 13, 2, 45, 122, 42, 127, 114, 119, 34, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 146, 107, 57, 92, 27, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 105, 89, 0, 129, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 136, 87, 15, 21, 69, 93, 101, 110, 103, 98, 126, 112, 62, 5, 48, 7, 41, 121, 88, 30, 79, 132, 137, 141, 104, 147, 66, 107, 57, 27, 92, 130, 46, 22, 59, 11, 148, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 34, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 146, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 105, 89, 5, 48, 91, 74, 96, 138, 41, 121, 88, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 133, 52, 87, 15, 21, 69, 93, 136, 103, 98, 101, 110, 126, 112, 62, 0, 129, 7, 132, 137, 141, 104, 147, 66, 107, 57, 27, 92, 130, 46, 22, 59, 11, 148, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 34, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 94, 125, 12, 75, 32, 145, 102, 36, 4, 146, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 41, 121, 88, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 133, 52, 87, 15, 21, 69, 93, 103, 98, 101, 110, 126, 112, 62, 0, 129, 7, 132, 137, 141, 104, 147, 66, 107, 57, 27, 92, 130, 46, 22, 59, 11, 148, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 77, 51, 95, 36, 102, 145, 12, 75, 32, 94, 125, 81, 146, 4, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 34, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 41, 121, 88, 30, 79, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 21, 69, 93, 87, 15, 103, 98, 101, 110, 126, 112, 62, 0, 129, 7, 132, 137, 141, 104, 147, 66, 107, 57, 27, 92, 130, 46, 22, 59, 11, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 77, 51, 95, 36, 102, 145, 32, 12, 75, 94, 125, 81, 146, 4, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 34, 148, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 41, 121, 88, 30, 79, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 98, 101, 110, 126, 112, 62, 0, 129, 7, 132, 137, 147, 141, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 11, 54, 82, 33, 28, 131, 111, 106, 120, 29, 100, 38, 102, 145, 32, 12, 75, 94, 125, 81, 146, 36, 4, 77, 51, 95, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 34, 148, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 112, 62, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 11, 134, 139, 84, 67, 106, 120, 29, 100, 131, 111, 28, 33, 82, 54, 148, 34, 59, 22, 46, 130, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 112, 62, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 122, 42, 135, 127, 114, 119, 82, 54, 33, 28, 131, 111, 29, 120, 106, 100, 84, 67, 134, 139, 148, 11, 34, 59, 22, 46, 130, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 106, 29, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 114, 119, 82, 54, 148, 11, 34, 59, 22, 46, 130, 134, 139, 33, 28, 131, 111, 84, 67, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 25, 123, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 39, 53, 63, 143, 113, 43, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 38, 100, 120, 29, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 119, 114, 82, 54, 148, 11, 34, 59, 22, 46, 130, 134, 139, 33, 28, 131, 111, 84, 67, 106, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 119, 114, 134, 139, 84, 67, 113, 43, 1, 53, 39, 63, 143, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 46, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 141, 104, 66, 27, 92, 57, 107, 130, 62, 112, 22, 59, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 119, 114, 134, 139, 84, 67, 43, 1, 53, 39, 63, 143, 113, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 46, 0, 129, 7, 41, 121, 79, 30, 88, 137, 132, 147, 104, 141, 66, 27, 92, 57, 107, 130, 62, 112, 22, 59, 34, 11, 148, 54, 82, 33, 28, 131, 111, 106, 29, 120, 100, 38, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 119, 114, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 112, 62, 0, 129, 92, 27, 141, 104, 66, 147, 132, 137, 79, 30, 88, 121, 41, 7, 130, 46, 22, 59, 11, 148, 54, 82, 33, 111, 106, 29, 120, 100, 38, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 2, 45, 42, 135, 127, 122, 119, 114, 34, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 146, 131, 28, 134, 57, 107, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 98, 103, 126, 112, 62, 0, 129, 92, 27, 141, 104, 66, 147, 132, 137, 88, 121, 41, 7, 79, 30, 107, 57, 130, 46, 22, 59, 11, 34, 119, 114, 122, 2, 45, 42, 135, 127, 148, 54, 82, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 75, 32, 145, 102, 146, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 28, 131, 111, 106, 29, 120, 100, 38, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 92, 27, 141, 104, 66, 147, 132, 137, 88, 121, 41, 7, 79, 30, 107, 57, 130, 46, 22, 59, 11, 34, 119, 114, 122, 42, 135, 127, 2, 45, 28, 13, 99, 40, 70, 47, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 33, 82, 54, 148, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 94, 125, 12, 32, 75, 102, 145, 36, 4, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 15, 87, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 92, 27, 141, 104, 66, 147, 132, 137, 88, 121, 41, 7, 79, 30, 107, 57, 130, 46, 22, 59, 11, 34, 119, 114, 122, 42, 135, 127, 2, 45, 28, 13, 99, 40, 70, 47, 51, 77, 95, 38, 100, 120, 29, 106, 111, 131, 33, 82, 54, 148, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 94, 125, 75, 12, 32, 145, 102, 36, 4, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 15, 87, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 92, 27, 66, 147, 132, 137, 88, 121, 79, 30, 41, 7, 141, 104, 107, 57, 130, 46, 22, 59, 34, 119, 114, 122, 42, 135, 127, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 36, 4, 77, 95, 51, 47, 99, 40, 70, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 125, 94, 12, 32, 145, 102, 75, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 46, 22, 59, 34, 119, 114, 122, 42, 135, 127, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 47, 99, 40, 70, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 32, 145, 102, 75, 107, 57, 130, 92, 27, 66, 147, 132, 137, 88, 121, 79, 30, 41, 7, 141, 104, 129, 0, 62, 112, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 110, 101, 103, 98, 126, 112, 62, 0, 129, 92, 27, 130, 22, 59, 34, 119, 114, 122, 42, 135, 127, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 47, 99, 40, 70, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 81, 125, 94, 12, 32, 145, 102, 75, 107, 57, 66, 104, 141, 147, 132, 137, 88, 41, 121, 79, 30, 7, 46, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 98, 101, 110, 126, 112, 62, 0, 129, 27, 92, 141, 147, 132, 137, 88, 41, 121, 79, 30, 7, 104, 66, 107, 57, 130, 46, 22, 59, 34, 119, 114, 122, 42, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 47, 99, 70, 40, 13, 127, 33, 82, 54, 148, 11, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 94, 12, 32, 145, 102, 75, 125, 81, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 27, 92, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 125, 81, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 27, 92, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 27, 92, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 94, 125, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 139, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 134, 84, 67, 113, 143, 63, 39, 53, 1, 43, 139, 33, 82, 54, 148, 11, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 99, 70, 40, 13, 33, 82, 54, 148, 11, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 30, 79, 121, 41, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 119, 114, 122, 42, 127, 135, 2, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 95, 51, 47, 13, 99, 70, 40, 33, 82, 54, 148, 11, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 137, 88, 41, 121, 79, 30, 7, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 45, 28, 131, 111, 106, 29, 120, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 13, 99, 70, 40, 135, 2, 42, 127, 122, 33, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 137, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 135, 2, 42, 127, 122, 33, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 137, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 127, 135, 2, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 51, 77, 95, 47, 13, 99, 70, 40, 45, 33, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 137, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 28, 131, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 13, 135, 127, 40, 70, 99, 47, 45, 33, 134, 139, 67, 84, 43, 113, 143, 63, 39, 53, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 111, 131, 28, 45, 33, 134, 139, 67, 84, 38, 146, 100, 120, 29, 106, 95, 77, 51, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 107, 57, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 111, 131, 28, 45, 33, 134, 139, 67, 84, 106, 120, 29, 100, 38, 146, 51, 77, 95, 4, 36, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 92, 27, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 111, 131, 28, 45, 33, 134, 139, 67, 84, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 111, 131, 28, 45, 33, 134, 139, 84, 67, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 102, 145, 32, 75, 12, 94, 125, 81, 43, 1, 143, 63, 39, 53, 137, 113, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 111, 131, 28, 45, 33, 139, 134, 84, 67, 106, 120, 29, 100, 38, 146, 36, 4, 51, 77, 95, 102, 145, 32, 75, 12, 94, 125, 81, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 11, 54, 82, 148, 119, 114, 122, 42, 2, 13, 135, 127, 40, 70, 99, 47, 120, 29, 100, 38, 95, 77, 51, 4, 36, 146, 102, 145, 32, 12, 75, 94, 125, 81, 43, 113, 143, 63, 39, 53, 137, 1, 84, 67, 106, 111, 131, 28, 45, 33, 139, 134, 34, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 11, 148, 54, 82, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 81, 94, 125, 75, 32, 12, 145, 102, 36, 4, 51, 77, 95, 38, 100, 29, 120, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 34, 127, 40, 70, 99, 135, 13, 47, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 84, 67, 100, 38, 146, 36, 4, 51, 77, 95, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 40, 70, 99, 135, 13, 47, 29, 120, 102, 145, 32, 12, 75, 125, 94, 81, 1, 143, 63, 39, 53, 137, 113, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 84, 67, 106, 111, 131, 28, 45, 2, 42, 122, 114, 119, 127, 135, 13, 99, 70, 40, 47, 29, 120, 100, 38, 146, 95, 77, 51, 4, 36, 102, 145, 32, 12, 75, 125, 94, 81, 1, 143, 63, 39, 53, 137, 113, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 84, 67, 106, 120, 29, 100, 38, 146, 94, 81, 125, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 42, 122, 114, 119, 131, 28, 45, 111, 127, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 122, 127, 119, 114, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 122, 114, 119, 127, 45, 28, 131, 111, 106, 120, 29, 100, 38, 146, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 111, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 122, 114, 119, 127, 45, 28, 131, 84, 67, 43, 113, 143, 39, 63, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 40, 70, 13, 135, 2, 42, 122, 114, 119, 127, 45, 28, 131, 111, 84, 67, 113, 143, 39, 63, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 135, 2, 42, 122, 114, 119, 127, 45, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 135, 2, 42, 122, 114, 119, 127, 45, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 70, 40, 99, 13, 135, 2, 42, 122, 114, 119, 131, 111, 28, 45, 127, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 114, 119, 45, 2, 131, 28, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 114, 119, 45, 2, 131, 28, 111, 84, 67, 113, 143, 39, 53, 137, 63, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 70, 40, 13, 135, 127, 42, 122, 114, 119, 45, 2, 131, 28, 111, 84, 67, 43, 113, 143, 1, 39, 53, 63, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 77, 51, 95, 47, 99, 70, 40, 135, 127, 42, 122, 114, 119, 45, 2, 131, 28, 111, 13, 84, 67, 43, 113, 143, 1, 39, 63, 53, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 4, 36, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 119, 114, 45, 2, 28, 111, 131, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 119, 114, 45, 2, 28, 131, 111, 84, 67, 113, 43, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 114, 119, 2, 45, 28, 131, 111, 84, 67, 113, 43, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 127, 42, 122, 114, 119, 2, 45, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 42, 122, 114, 119, 127, 2, 45, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 42, 122, 114, 119, 127, 2, 45, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 42, 122, 114, 119, 28, 131, 111, 2, 45, 127, 84, 67, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 127, 42, 122, 114, 119, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 1, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 28, 131, 111, 84, 67, 43, 113, 143, 1, 39, 63, 53, 137, 119, 114, 122, 42, 127, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 119, 114, 28, 131, 111, 84, 67, 43, 1, 113, 143, 63, 39, 53, 137, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 43, 113, 143, 63, 39, 53, 137, 1, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(0).getMvsbTour())).isEqualTo("[115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(10).getMvsbTour())).isEqualTo("[115, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(20).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(30).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(40).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(50).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(60).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(70).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(80).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(90).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(100).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(110).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(120).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(130).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(140).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(150).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(160).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(170).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(180).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(190).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(200).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(210).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(220).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(230).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(240).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(250).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(260).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(270).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(280).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(290).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(300).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(310).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(320).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(330).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(340).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(350).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(360).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(370).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(380).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(390).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(400).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(410).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(420).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(430).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(440).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(450).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(460).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(470).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(480).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(490).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(500).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(510).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(520).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(530).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(540).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(550).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(560).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(570).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(580).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(590).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(600).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(610).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(620).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(630).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(640).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(650).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(660).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(670).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(680).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(690).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(700).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(710).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(720).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(730).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(740).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(750).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(760).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(770).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(780).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(790).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(800).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(810).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(820).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(830).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(840).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(850).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(860).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(870).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(880).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(890).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(900).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(910).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(920).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(930).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(940).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(950).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 0, 0, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(960).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 0, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(970).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 0, 0, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(980).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 0, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(990).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 0, 0]");
        assertThat(TestUtils.getTourString(mmas_madtsp.getIterationStatistics().get(999).getMvsbTour())).isEqualTo("[115, 49, 72, 68, 80, 24, 60, 50, 124, 144, 86, 8, 116, 6, 56, 19, 85, 26, 149, 61, 76, 109, 97, 90, 108, 31, 44, 14, 16, 10, 58, 140, 73, 20, 71, 9, 83, 35, 37, 23, 17, 78, 136, 105, 89, 5, 48, 91, 74, 96, 138, 55, 142, 118, 117, 123, 25, 128, 65, 64, 3, 18, 52, 133, 87, 15, 21, 69, 93, 103, 110, 101, 98, 126, 112, 62, 0, 129, 141, 147, 132, 7, 41, 121, 79, 30, 88, 104, 66, 57, 107, 27, 92, 130, 46, 22, 59, 34, 11, 148, 54, 82, 33, 134, 139, 106, 120, 29, 100, 38, 146, 81, 125, 94, 12, 75, 32, 145, 102, 36, 4, 95, 77, 51, 47, 99, 70, 40, 13, 135, 2, 45, 122, 42, 127, 114, 119, 28, 131, 111, 84, 67, 113, 143, 63, 39, 53, 137, 1, 43, 115]");

    }

}
